.container
  // Class skills dialog
  md-dialog.dialog(:md-active.sync="skillsDialog" :md-fullscreen="false")
    md-dialog-title Select {{ skillsAllowed }} skills from Class
    .md-layout(md-dynamic-height)
      .md-layout-item
        md-checkbox(v-if="skillsChoice.includes('athletics')" v-model="characterSkills" value="athletics") Athletics (Str)
        md-checkbox(v-if="skillsChoice.includes('animalHandling')" v-model="characterSkills" value="animalHandling") Animal Handling (Wis)
        md-checkbox(v-if="skillsChoice.includes('medicine')" v-model="characterSkills" value="medicine") Medicine (Wis)
        md-checkbox(v-if="skillsChoice.includes('perception')" v-model="characterSkills" value="perception") Perception (Wis)
        md-checkbox(v-if="skillsChoice.includes('survival')" v-model="characterSkills" value="survival") Survival (Wis)
        md-checkbox(v-if="skillsChoice.includes('deception')" v-model="characterSkills" value="deception") Deception (Cha)
        md-checkbox(v-if="skillsChoice.includes('intimidation')" v-model="characterSkills" value="intimidation") Intimidation (Cha)
        md-checkbox(v-if="skillsChoice.includes('performance')" v-model="characterSkills" value="performance") Performance (Cha)
        md-checkbox(v-if="skillsChoice.includes('persuasion')" v-model="characterSkills" value="persuasion") Persuasion (Cha)
        md-checkbox(v-if="skillsChoice.includes('acrobatics')" v-model="characterSkills" value="acrobatics") Acrobatics (Dex)
        md-checkbox(v-if="skillsChoice.includes('sleightOfHand')" v-model="characterSkills" value="sleightOfHand") Sleight of Hand (Dex)
        md-checkbox(v-if="skillsChoice.includes('stealth')" v-model="characterSkills" value="stealth") Stealth (Dex)
        md-checkbox(v-if="skillsChoice.includes('arcana')" v-model="characterSkills" value="arcana") Arcana (Int)
        md-checkbox(v-if="skillsChoice.includes('history')" v-model="characterSkills" value="history") History (Int)
        md-checkbox(v-if="skillsChoice.includes('investigation')" v-model="characterSkills" value="investigation") Investigation (Int)
        md-checkbox(v-if="skillsChoice.includes('nature')" v-model="characterSkills" value="nature") Nature (Int)
        md-checkbox(v-if="skillsChoice.includes('religion')" v-model="characterSkills" value="religion") Religion (Int)
        md-checkbox(v-if="skillsChoice.includes('insight')" v-model="characterSkills" value="insight") Insight (Int)
      
    md-dialog-actions
      md-button.md-primary(@click="skillsDialog = false") Close
      md-button.md-primary(v-if="skillpoints == 0" @click="skillsDialog = false") Confirm
      md-button.md-primary(v-if="skillpoints > 0" @click="skillsDialog = false, skillsDialogNext = true") Next  

  // Remaining skills dialog
  md-dialog.dialog(:md-active.sync="skillsDialogNext" :md-fullscreen="false")
    md-dialog-title Select {{ skillpoints }} skills
    .md-layout(md-dynamic-height)
      .md-layout-item
        md-checkbox(v-model="characterSkills" value="athletics") Athletics (Str)
        md-checkbox(v-model="characterSkills" value="animalHandling") Animal Handling (Wis)
        md-checkbox(v-model="characterSkills" value="medicine") Medicine (Wis)
        md-checkbox(v-model="characterSkills" value="perception") Perception (Wis)
        md-checkbox(v-model="characterSkills" value="survival") Survival (Wis)
        md-checkbox(v-model="characterSkills" value="deception") Deception (Cha)
        md-checkbox(v-model="characterSkills" value="intimidation") Intimidation (Cha)
        md-checkbox(v-model="characterSkills" value="performance") Performance (Cha)
        md-checkbox(v-model="characterSkills" value="persuasion") Persuasion (Cha)
        md-checkbox(v-model="characterSkills" value="acrobatics") Acrobatics (Dex)
        md-checkbox(v-model="characterSkills" value="sleightOfHand") Sleight of Hand (Dex)
        md-checkbox(v-model="characterSkills" value="stealth") Stealth (Dex)
        md-checkbox(v-model="characterSkills" value="arcana") Arcana (Int)
        md-checkbox(v-model="characterSkills" value="history") History (Int)
        md-checkbox(v-model="characterSkills" value="investigation") Investigation (Int)
        md-checkbox(v-model="characterSkills" value="nature") Nature (Int)
        md-checkbox(v-model="characterSkills" value="religion") Religion (Int)
        md-checkbox(v-model="characterSkills" value="insight") Insight (Int)

    md-dialog-actions
      md-button.md-primary(v-if="skillsAllowed" @click="skillsDialogNext = false, skillsDialog = true") Back
      md-button.md-primary(@click="skillsDialogNext = false") Confirm
  
  h3(v-if="submitted") Thanks for adding your character!
  
  form(v-if="!submitted")
    .md-layout
      .md-layout-item.golden-border.md-xsmall-size-100.md-small-size-50.md-medium-size-50.md-large-size-33.md-xlarge-size-33
        .md-title Rejoice, for it is...
        md-field
          label Character Name
          md-input(v-model="characterName")

        md-field
          label(for="charRace") Race
          md-select(v-model="characterRace" name="charRace")
            md-option(v-for="(race, key) in races" v-bind:key="races[race]" v-bind:value="key") {{ race.title }}

        md-field(v-if="characterRace && races[characterRace].subraces")
          label(for="charSubrace") Subrace
          md-select(v-model="characterSubrace" name="charSubrace")
            md-option(v-for="(subrace, key) in races[characterRace].subraces" v-bind:key="races[characterRace].subraces[subrace]" v-bind:value="key") {{ subrace.title }}

        md-field
          label(for="charClass") Class
          md-select(v-model="characterClass" name="charClass")
            md-option(v-for="(aClass, key) in classes" v-bind:key="classes[aClass]" v-bind:value="key") {{ aClass.title }}

        md-field
          label(for="charBackground") Background
          md-select(v-model="characterBackground" name="charBackground")
            md-option(v-for="(background, key) in backgrounds" v-bind:key="backgrounds[background]" v-bind:value="key") {{ background.title }}

        template
          attributes(@updateCharacter="updateCharacter"
                     :strengthBonus="strengthBonus"
                     :dexterityBonus="dexterityBonus"
                     :constitutionBonus="constitutionBonus"
                     :intelligenceBonus="intelligenceBonus"
                     :wisdomBonus="wisdomBonus"
                     :charismaBonus="charismaBonus")

      .md-layout.md-layout-item.golden-border.md-small-size-100.md-medium-size-50.md-large-size-33.md-xlarge-size-33
        .md-title
          md-icon security 
          |  AC: {{ armorClass }}
        .md-title
          md-icon favorite 
          |  Health: {{ maxHealth }}
        .md-title
          md-icon track_changes 
          |  Initiative: {{ characterDexterity | getModifier | decoratePositive }}
        .md-title
          md-icon verified_user 
          |  Speed: {{ characterSpeed }}
        .md-title
          md-icon vibration 
          |  Awareness: {{ characterWisdom | getModifier | add(10) }}
          
        md-field
          md-icon sms
          label Languages
          md-input(v-model="totalLanguages")
        md-field.mt-0
          label Combat proficiencies
          md-textarea(v-model="characterProficienciesCombat" rows="3")  
        md-field.mt-0
          label Tool proficiencies
          md-textarea(v-model="characterToolsList")           
        md-field
          md-icon fingerprint
          label Gold
          md-input(v-model="characterGold" type="number")
        md-field.mt-0
          label Equipment and loot
          md-textarea(v-model="characterItemsList")

      .md-layout.md-layout-item.golden-border.md-small-size-100.md-medium-size-50.md-large-size-33.md-xlarge-size-33
        .md-layout-item
          .md-title Skills
          .title-h4 Strength {{ characterStrength | getModifier | decoratePositive }}
          .skill-plain
            md-icon(v-if="characterSkills.includes('athletics')") star
            | Athletics
            
          .title-h4 Dexterity {{ characterDexterity | getModifier | decoratePositive }}
          .skill-plain
            md-icon(v-if="characterSkills.includes('acrobatics')") star
            | Acrobatics
          .skill-plain
            md-icon(v-if="characterSkills.includes('sleightOfHand')") star
            | Sleight of Hand
          .skill-plain
            md-icon(v-if="characterSkills.includes('stealth')") star
            | Stealth
          
          .title-h4 Wisdom {{ characterWisdom | getModifier | decoratePositive }}
          .skill-plain
            md-icon(v-if="characterSkills.includes('animalHandling')") star
            | Animal Handling
          .skill-plain
            md-icon(v-if="characterSkills.includes('medicine')") star
            | Medicine
          .skill-plain
            md-icon(v-if="characterSkills.includes('perception')") star
            | Perception
          .skill-plain
            md-icon(v-if="characterSkills.includes('survival')") star
            | Survival
        
        .md-layout-item
          .md-title &nbsp;  
          .title-h4 Intelligence {{ characterIntelligence | getModifier | decoratePositive }}
          .skill-plain
            md-icon(v-if="characterSkills.includes('arcana')") star
            | Arcana
          .skill-plain
            md-icon(v-if="characterSkills.includes('history')") star
            | History
          .skill-plain
            md-icon(v-if="characterSkills.includes('investigation')") star
            | Investigation
          .skill-plain
            md-icon(v-if="characterSkills.includes('nature')") star
            | Nature
          .skill-plain
            md-icon(v-if="characterSkills.includes('religion')") star
            | Religion
          .skill-plain
            md-icon(v-if="characterSkills.includes('insight')") star
            | Insight
          
          .title-h4 Charisma {{ characterCharisma | getModifier | decoratePositive }}
          .skill-plain
            md-icon(v-if="characterSkills.includes('deception')") star
            | Deception
          .skill-plain
            md-icon(v-if="characterSkills.includes('intimidation')") star
            | Intimidation
          .skill-plain
            md-icon(v-if="characterSkills.includes('performance')") star
            | Performance
          .skill-plain
            md-icon(v-if="characterSkills.includes('persuasion')") star
            | Persuasion
  
      .md-layout-item.golden-border.md-small-size-100.md-medium-size-50.md-large-size-66
        .md-title Feats
        ul.feat-list
          li.feat-list-item(v-for="feat in characterFeats")
            .feat-name {{ feats[feat].title }}
            .feat-description {{ feats[feat].description }}

      .md-layout-item.golden-border.md-medium-size-100.md-large-size-33.md-xlarge-size-33
        .md-title Armor &amp; Weapons
        md-field
          label(for="charArmor") Armor
          md-select(v-model="characterArmor" name="charArmor")
            md-option(v-for="(armor, key) in armors" v-bind:key="armors[armor]" v-bind:value="key") (AC: {{ armor.ac }}) {{ armor.title }}
        
        md-field
          label(for="charWeapon1") Weapon Melee
          md-select(v-model="characterWeaponMelee" name="charWeapon1")
            md-option(v-for="(weapon, key) in weaponsM" v-bind:key="weaponsM[weapon]" v-bind:value="key") {{ weapon.title }} ({{ weapon.damage }})
        
        md-field
          label(for="charWeapon2") Weapon Melee Alternative
          md-select(v-model="characterWeaponMelee2" name="charWeapon2")
            md-option(v-for="(weapon, key) in weaponsM" v-bind:key="weaponsM[weapon]" v-bind:value="key") {{ weapon.title }} ({{ weapon.damage }})
        
        md-field
          label(for="charWeapon3") Weapon Ranged
          md-select(v-model="characterWeaponRanged" name="charWeapon3")
            md-option(v-for="(weapon, key) in weaponsR" v-bind:key="weaponsR[weapon]" v-bind:value="key") {{ weapon.title }} ({{ weapon.damage }})
        
        md-checkbox(v-model="characterShield" v-bind:disabled="wieldsTwohanded") Shield
          span(v-if="wieldsTwohanded")  (you wield a twohanded weapon)

    .md-layout
      .md-layout-item
        md-button.md-primary.md-raised(type="button" @click="addToAPI") Save Character
