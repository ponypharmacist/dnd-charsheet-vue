.container.view-charsheet

  .roll-queue
    .queue-item(v-for="roll in rollQueue") 
      span.roll-date {{ roll.date }} 
      span.roll-string {{ roll.message }} 
      span.roll-note {{ roll.note }}

  #navigation
    md-button.md-dense.md-raised(to="/home") Tavern
    md-button.md-dense.md-raised(to="/create") Add Character
    md-button.md-dense.md-raised.md-accent(type="button" @click="manualSave()") Save Changes
    md-button.md-dense.md-raised(type="button" @click="rollDiceSingle(4)") d4
    md-button.md-dense.md-raised(type="button" @click="rollDiceSingle(6)") d6
    md-button.md-dense.md-raised(type="button" @click="rollDiceSingle(8)") d8
    md-button.md-dense.md-raised(type="button" @click="rollDiceSingle(10)") d10
    md-button.md-dense.md-raised(type="button" @click="rollDiceSingle(12)") d12
    md-button.md-dense.md-raised(type="button" @click="rollDiceSingle(20)") d20
    md-button.md-dense.md-raised(type="button" @click="rollDiceSingle(100)") d100
    div.custom-roll-wrap
      md-field(md-inline class="custom-roll")
        label 3d6+1
        md-input(v-model="customRollValue")
      md-button.md-dense.md-raised(type="button" @click="rollString(customRollValue)") Roll custom

  template
    LevelUp

  template
    ArmorSelect

  template
    WeaponSelect

  template
    RangedSelect
  
  .golden-border
    .character-bar
      .character-name {{ character.name | capitalize }}
      .character-race-class 
        span Lvl. {{ character.level }} 
        span(v-if="!character.subrace") {{ character.race | capitalize }} 
        span(v-if="character.subrace")  {{ subraceTitle }} 
        span {{ character.clas | capitalize }} 
        span(v-if="character.level < 20")
          a.level-up(@click="levelUp()") Level Up
          | , 
        a.level-up(@click="toggleEditStats()") Edit Stats
        | , 
        a.level-up(@click="doLongRest()") Long Rest
        | , 
        a.level-up(@click="" :href="exportCharacterFile" :download="character.name + '-export-file.json'") Export to a file
        | , 
        a.level-up(@click="exportCharacterToClipboard()") Export to clipboard

    .md-layout
      .attributes.md-layout-item.md-xsmall-size-100.md-small-size-50.md-medium-size-30.md-large-size-30.md-xlarge-size-30
        .attribute-block
          .stat-controls.controls-block(v-if="editStats")
            .controls-plus(@click="character.strength++")
            .controls-minus(@click="character.strength--")
          .attribute-value {{ character.strength }}
          .attribute-modifier {{ character.strength | getModifier | decoratePositive }}
          .attribute-name
            a(@click="rollAttribute('strength')") Strength
            |  | 
            a.save-link(@click="rollSkill('strength', 'strength')" v-bind:class="[ character.skills.includes('strength') ? 'skillStar' : '' ]") Save {{ getSkillBonus('strength', 'strength') | decoratePositive }}
        .attribute-block
          .stat-controls.controls-block(v-if="editStats")
            .controls-plus(@click="character.dexterity++")
            .controls-minus(@click="character.dexterity--")
          .attribute-value {{ character.dexterity }}
          .attribute-modifier {{ character.dexterity | getModifier | decoratePositive }}
          .attribute-name
            a(@click="rollAttribute('dexterity')") Dexterity
            |  | 
            a.save-link(@click="rollSkill('dexterity', 'dexterity')" v-bind:class="[ character.skills.includes('dexterity') ? 'skillStar' : '' ]") Save {{ getSkillBonus('dexterity', 'dexterity') | decoratePositive }}
        .attribute-block
          .stat-controls.controls-block(v-if="editStats")
            .controls-plus(@click="character.constitution++")
            .controls-minus(@click="character.constitution--")
          .attribute-value {{ character.constitution }}
          .attribute-modifier {{ character.constitution | getModifier | decoratePositive }}
          .attribute-name
            a(@click="rollAttribute('constitution')") Constitution
            |  | 
            a.save-link(@click="rollSkill('constitution', 'constitution')" v-bind:class="[ character.skills.includes('constitution') ? 'skillStar' : '' ]") Save {{ getSkillBonus('constitution', 'constitution') | decoratePositive }}
        .attribute-block
          .stat-controls.controls-block(v-if="editStats")
            .controls-plus(@click="character.intelligence++")
            .controls-minus(@click="character.intelligence--")
          .attribute-value {{ character.intelligence }}
          .attribute-modifier {{ character.intelligence | getModifier | decoratePositive }}
          .attribute-name
            a(@click="rollAttribute('intelligence')") Intelligence
            |  | 
            a.save-link(@click="rollSkill('intelligence', 'intelligence')" v-bind:class="[ character.skills.includes('intelligence') ? 'skillStar' : '' ]") Save {{ getSkillBonus('intelligence', 'intelligence') | decoratePositive }}
        .attribute-block
          .stat-controls.controls-block(v-if="editStats")
            .controls-plus(@click="character.wisdom++")
            .controls-minus(@click="character.wisdom--")
          .attribute-value {{ character.wisdom }}
          .attribute-modifier {{ character.wisdom | getModifier | decoratePositive }}
          .attribute-name
            a(@click="rollAttribute('wisdom')") Wisdom
            |  | 
            a.save-link(@click="rollSkill('wisdom', 'wisdom')" v-bind:class="[ character.skills.includes('wisdom') ? 'skillStar' : '' ]") Save {{ getSkillBonus('wisdom', 'wisdom') | decoratePositive }}
        .attribute-block
          .stat-controls.controls-block(v-if="editStats")
            .controls-plus(@click="character.charisma++")
            .controls-minus(@click="character.charisma--")
          .attribute-value {{ character.charisma }}
          .attribute-modifier {{ character.charisma | getModifier | decoratePositive }}
          .attribute-name
            a(@click="rollAttribute('charisma')") Charisma
            |  | 
            a.save-link(@click="rollSkill('charisma', 'charisma')" v-bind:class="[ character.skills.includes('charisma') ? 'skillStar' : '' ]") Save {{ getSkillBonus('charisma', 'charisma') | decoratePositive }}

      .attribute-skills.md-layout-item.md-xsmall-size-100.md-small-size-50.md-medium-size-45.md-large-size-45.md-xlarge-size-45
        .attribute-skills-item Strength
        .attribute-skills-item(v-bind:class="[ character.skills.includes('athletics') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="athletics" class="controls-skill")
          a(@click="rollSkill('strength', 'athletics')") Athletics {{ getSkillBonus('strength', 'athletics') | decoratePositive }}

        .attribute-skills-item Dexterity
        .attribute-skills-item(v-bind:class="[ character.skills.includes('acrobatics') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="acrobatics" class="controls-skill")
          a(@click="rollSkill('dexterity', 'acrobatics')") Acrobatics {{ getSkillBonus('dexterity', 'acrobatics') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('sleightOfHand') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="sleightOfHand" class="controls-skill")
          a(@click="rollSkill('dexterity', 'sleightOfHand')") Sleight of Hand {{ getSkillBonus('dexterity', 'sleightOfHand') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('stealth') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="stealth" class="controls-skill")
          a(@click="rollSkill('dexterity', 'stealth')") Stealth {{ getSkillBonus('dexterity', 'stealth') | decoratePositive }}

        .attribute-skills-item Intelligence
        .attribute-skills-item(v-bind:class="[ character.skills.includes('arcana') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="arcana" class="controls-skill")
          a(@click="rollSkill('intelligence', 'arcana')") Arcana {{ getSkillBonus('intelligence', 'arcana') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('history') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="history" class="controls-skill")
          a(@click="rollSkill('intelligence', 'history')") History {{ getSkillBonus('intelligence', 'history') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('investigation') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="investigation" class="controls-skill")
          a(@click="rollSkill('intelligence', 'investigation')") Investigation {{ getSkillBonus('intelligence', 'investigation') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('nature') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="nature" class="controls-skill")
          a(@click="rollSkill('intelligence', 'nature')") Nature {{ getSkillBonus('intelligence', 'nature') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('religion') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="religion" class="controls-skill")
          a(@click="rollSkill('intelligence', 'religion')") Religion {{ getSkillBonus('intelligence', 'religion') | decoratePositive }}

        .attribute-skills-item Wisdom
        .attribute-skills-item(v-bind:class="[ character.skills.includes('animalHandling') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="animalHandling" class="controls-skill")
          a(@click="rollSkill('wisdom', 'animalHandling')") Animal Handling {{ getSkillBonus('wisdom', 'animalHandling') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('insight') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="insight" class="controls-skill")
          a(@click="rollSkill('wisdom', 'insight')") Insight {{ getSkillBonus('wisdom', 'insight') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('medicine') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="medicine" class="controls-skill")
          a(@click="rollSkill('wisdom', 'medicine')") Medicine {{ getSkillBonus('wisdom', 'medicine') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('perception') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="perception" class="controls-skill")
          a(@click="rollSkill('wisdom', 'perception')") Perception {{ getSkillBonus('wisdom', 'perception') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('survival') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="survival" class="controls-skill")
          a(@click="rollSkill('wisdom', 'survival')") Survival {{ getSkillBonus('wisdom', 'survival') | decoratePositive }}

        .attribute-skills-item Charisma
        .attribute-skills-item(v-bind:class="[ character.skills.includes('deception') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="deception" class="controls-skill")
          a(@click="rollSkill('charisma', 'deception')") Deception {{ getSkillBonus('charisma', 'deception') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('intimidation') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="intimidation" class="controls-skill")
          a(@click="rollSkill('charisma', 'intimidation')") Intimidation {{ getSkillBonus('charisma', 'intimidation') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('performance') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="performance" class="controls-skill")
          a(@click="rollSkill('charisma', 'performance')") Performance {{ getSkillBonus('charisma', 'performance') | decoratePositive }}
        .attribute-skills-item(v-bind:class="[ character.skills.includes('persuasion') ? 'skillStar' : '' ]")
          md-checkbox(v-if="editStats" v-model="character.skills" value="persuasion" class="controls-skill")
          a(@click="rollSkill('charisma', 'persuasion')") Persuasion {{ getSkillBonus('charisma', 'persuasion') | decoratePositive }}

      .secondary-stats.md-layout-item.md-small-size-100.md-large-size-25.md-xlarge-size-25.align-top
        .attribute-block
          .attribute-modifier {{ armorClass }}
          .attribute-name Armor Class
        .attribute-block
          .hp-wrap
            .hp-controls.controls-block
              .controls-plus(@click="character.currentHealth++")
              .controls-minus(@click="character.currentHealth--")
            .hp-value-current.attribute-modifier
              input(v-model="character.currentHealth")
          .attribute-name out of {{ character.maxHealth }} HP
        .attribute-block
          .attribute-modifier {{ character.dexterity | getModifier | decoratePositive }}
          .attribute-name
            a.roll-link(@click="rollAttribute('dexterity', 'Initiative')") Initiative
        .attribute-block
          .attribute-modifier {{ character.speed }}
          .attribute-name Speed
        .attribute-block
          .attribute-modifier {{ proficiencyBonus | decoratePositive }}
          .attribute-name Prof. Bonus

      .equipment-block.md-layout-item.md-xlarge-size-100
        .equipment-item
          .equipment-title Armor
          .equipment-image(@click="toggleArmorSelect()")
            .equipment-image-title {{ armors[character.armor].title }}
          .equipment-misc
            md-checkbox(v-model="character.shield" v-bind:disabled="wieldsTwohanded") Shield
              span(v-if="wieldsTwohanded")  (you wield a twohanded weapon)

        .equipment-item
          .equipment-title Weapon
          .equipment-image.weapon-bg(@click="toggleWeaponSelect('weaponMelee')")
            .equipment-image-title {{ weapons[character.weaponMelee].title }}
          .equipment-misc
            a.roll-link(@click="rollAttack('weaponMelee')") Roll Attack ({{ weaponMeleeAttack | decoratePositive }})
            br
            a.roll-link(@click="rollDamage('weaponMelee')") Damage ({{ this.weapons[character.weaponMelee].damage }}{{ weaponMeleeDamage | decoratePositiveSmart }})

        .equipment-item
          .equipment-title Offhand
          .equipment-image.weapon-bg(@click="toggleWeaponSelect('weaponMelee2')")
            .equipment-image-title {{ weapons[character.weaponMelee2].title }}
          .equipment-misc
            a.roll-link(@click="rollAttack('weaponMelee2')") Roll Attack ({{ weaponMelee2Attack | decoratePositive }})
            br
            a.roll-link(@click="rollDamage('weaponMelee2')") Damage ({{ this.weapons[character.weaponMelee2].damage }}{{ weaponMelee2Damage | decoratePositiveSmart }})

        .equipment-item
          .equipment-title Ranged weapon
          .equipment-image.weapon-ranged(@click="toggleRangedSelect()")
            .equipment-image-title  {{ weapons[character.weaponRanged].title }}
          .equipment-misc
            a.roll-link(@click="rollAttackRanged('weaponRanged')") Roll Attack ({{ weaponRangedAttack | decoratePositiveSmart }})
            br
            a.roll-link(@click="rollDamageRanged('weaponRanged')") Damage ({{ this.weapons[character.weaponRanged].damage }}+{{ weaponRangedDamage }})

        .spellslots-block.pl-1(v-if="classes[character.clas].spellslots")
          .md-title Spellslots (
            a.roll-link(@click="doLongRest()") Long Rest
            | )
          .md-layout
            .md-layout-item lv.1
              md-checkbox(v-for="spellslot in spellsLvl(1)" v-bind:key="spellslot" v-model="character.spellslots[1]" v-bind:value="spellslot")
            .md-layout-item(v-if="spellsLvl(2) != 0") lv.2
              md-checkbox(v-for="spellslot in spellsLvl(2)" v-bind:key="spellslot" v-model="character.spellslots[2]" v-bind:value="spellslot")
            .md-layout-item(v-if="spellsLvl(3) != 0") lv.3
              md-checkbox(v-for="spellslot in spellsLvl(3)" v-bind:key="spellslot" v-model="character.spellslots[3]" v-bind:value="spellslot")
            .md-layout-item(v-if="spellsLvl(4) != 0") lv.4
              md-checkbox(v-for="spellslot in spellsLvl(4)" v-bind:key="spellslot" v-model="character.spellslots[4]" v-bind:value="spellslot")
            .md-layout-item(v-if="spellsLvl(5) != 0") lv.5
              md-checkbox(v-for="spellslot in spellsLvl(5)" v-bind:key="spellslot" v-model="character.spellslots[5]" v-bind:value="spellslot")
            .md-layout-item(v-if="spellsLvl(6) != 0") lv.6
              md-checkbox(v-for="spellslot in spellsLvl(6)" v-bind:key="spellslot" v-model="character.spellslots[6]" v-bind:value="spellslot")
            .md-layout-item(v-if="spellsLvl(7) != 0") lv.7
              md-checkbox(v-for="spellslot in spellsLvl(7)" v-bind:key="spellslot" v-model="character.spellslots[7]" v-bind:value="spellslot")
            .md-layout-item(v-if="spellsLvl(8) != 0") lv.8
              md-checkbox(v-for="spellslot in spellsLvl(8)" v-bind:key="spellslot" v-model="character.spellslots[8]" v-bind:value="spellslot")
            .md-layout-item(v-if="spellsLvl(9) != 0") lv.9
              md-checkbox(v-for="spellslot in spellsLvl(9)" v-bind:key="spellslot" v-model="character.spellslots[9]" v-bind:value="spellslot")

      .md-layout.md-layout-item.md-small-size-100.md-large-size-50.md-xlarge-size-50.align-top.pr-1
        .md-layout-item.md-large-size-25.md-xlarge-size-25.money-wrap
          md-field.money-input.copper-coin
            label Copper
            md-input(v-model="character.copper")
        .md-layout-item.md-large-size-25.md-xlarge-size-25.money-wrap
          md-field.money-input.silver-coin
            label Silver
            md-input(v-model="character.silver")
        .md-layout-item.md-large-size-25.md-xlarge-size-25.money-wrap
          md-field.money-input.gold-coin
            label Gold
            md-input(v-model="character.gold")
        .md-layout-item.md-large-size-25.md-xlarge-size-25.money-wrap
          md-field.money-input.platinum-coin
            label Platinum
            md-input(v-model="character.platinum")
        .md-layout-item.md-xlarge-size-100
          md-field
            label Items
            md-textarea(v-model="character.items" @change="updateLocalCharacter()" md-autogrow)
      .md-layout.md-layout-item.md-small-size-100.md-large-size-50.md-xlarge-size-50.align-top
          md-field
            label Combat Proficiencies
            md-textarea(v-model="character.proficienciesCombat" md-autogrow)
          md-field
            label Tool Proficiencies
            md-textarea(v-model="character.tools" md-autogrow)
          md-field
            label Languages
            md-textarea(v-model="character.languages" md-autogrow)
          md-field
            label Notes
            md-textarea(v-model="character.notes" md-autogrow) Slot
          md-field
            label Flavor: backstory, ideals, flaws, bonds, goals
            md-textarea(v-model="character.flavor" md-autogrow)

      .md-layout-item.md-xlarge-size-100
        .md-title Feats
        ul.feat-list
          li.feat-list-item(v-for="feat in character.feats")
            .feat-name {{ feats[feat].title }}
            .feat-description {{ feats[feat].description }}
