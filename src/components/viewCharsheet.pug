.container.view-charsheet.golden-border
  .md-layout.mt-1(v-if="isLoading")
    template
      spinner

  .character-sheet(v-if="!isLoading")
    .character-bar
      .character-name {{ Character.name | capitalize }}
      .character-race-class 
        span Lvl. {{ Character.level }} 
        span(v-if="!Character.subrace") {{ Character.race | capitalize }}
        span(v-if="Character.subrace")  {{ Character.subrace | capitalize }} 
        span {{ Character.clas | capitalize }}

    .roll-queue
      .queue-item(v-for="roll in rollQueue") 
        span.roll-date {{ roll.date }} 
        span.roll-string {{ roll.string }} 
        span.roll-note {{ roll.note }}

    .md-layout
      .md-layout-item.character-attributes.md-medium-size-100.md-large-size-100.md-xlarge-size-100
        .attribute-column
          .attribute-bg
            a.attribute-name(@click="rollAttribute('strength')") STR
            .attribute-value {{ Character.strength }}
            .attribute-modifier {{ Character.strength | getModifier | decoratePositive }}
          .attribute-skills
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('strength') ? 'skillStar' : '' ]")
              a(@click="roll('strength', 'strength')") Saving Throw {{ getSkillBonus('strength', 'strength') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('athletics') ? 'skillStar' : '' ]")
              a(@click="roll('strength', 'athletics')") Athletics {{ getSkillBonus('strength', 'athletics') | decoratePositive }}

        .attribute-column
          .attribute-bg
            a.attribute-name(@click="rollAttribute('dexterity')") DEX
            .attribute-value {{ Character.dexterity }}
            .attribute-modifier {{ Character.dexterity | getModifier | decoratePositive }}
          .attribute-skills
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('dexterity') ? 'skillStar' : '' ]")
              a(@click="roll('dexterity', 'dexterity')") Saving Throw {{ getSkillBonus('dexterity', 'dexterity') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('acrobatics') ? 'skillStar' : '' ]")
              a(@click="roll('dexterity', 'acrobatics')") Acrobatics {{ getSkillBonus('dexterity', 'acrobatics') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('sleightOfHand') ? 'skillStar' : '' ]")
              a(@click="roll('dexterity', 'sleightOfHand')") Sleight of Hand {{ getSkillBonus('dexterity', 'sleightOfHand') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('stealth') ? 'skillStar' : '' ]")
              a(@click="roll('dexterity', 'stealth')") Stealth {{ getSkillBonus('dexterity', 'stealth') | decoratePositive }}

        .attribute-column
          .attribute-bg
            a.attribute-name(@click="rollAttribute('constitution')") CON
            .attribute-value {{ Character.constitution }}
            .attribute-modifier {{ Character.constitution | getModifier | decoratePositive }}
          .attribute-skills
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('constitution') ? 'skillStar' : '' ]")
              a(@click="roll('constitution', 'constitution')") Saving Throw {{ getSkillBonus('constitution', 'constitution') | decoratePositive }}

        .attribute-column
          .attribute-bg
            a.attribute-name(@click="rollAttribute('intelligence')") INT
            .attribute-value {{ Character.intelligence }}
            .attribute-modifier {{ Character.intelligence | getModifier | decoratePositive }}
          .attribute-skills
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('intelligence') ? 'skillStar' : '' ]")
              a(@click="roll('intelligence', 'intelligence')") Saving Throw {{ getSkillBonus('intelligence', 'intelligence') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('arcana') ? 'skillStar' : '' ]")
              a(@click="roll('intelligence', 'arcana')") Arcana {{ getSkillBonus('intelligence', 'arcana') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('history') ? 'skillStar' : '' ]")
              a(@click="roll('intelligence', 'history')") History {{ getSkillBonus('intelligence', 'history') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('investigation') ? 'skillStar' : '' ]")
              a(@click="roll('intelligence', 'investigation')") Investigation {{ getSkillBonus('intelligence', 'investigation') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('nature') ? 'skillStar' : '' ]")
              a(@click="roll('intelligence', 'nature')") Nature {{ getSkillBonus('intelligence', 'nature') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('religion') ? 'skillStar' : '' ]")
              a(@click="roll('intelligence', 'religion')") Religion {{ getSkillBonus('intelligence', 'religion') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('insight') ? 'skillStar' : '' ]")
              a(@click="roll('intelligence', 'insight')") Insight {{ getSkillBonus('intelligence', 'insight') | decoratePositive }}

        .attribute-column
          .attribute-bg
            a.attribute-name(@click="rollAttribute('wisdom')") WIS
            .attribute-value {{ Character.wisdom }}
            .attribute-modifier {{ Character.wisdom | getModifier | decoratePositive }}
          .attribute-skills
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('wisdom') ? 'skillStar' : '' ]")
              a(@click="roll('wisdom', 'wisdom')") Saving Throw {{ getSkillBonus('wisdom', 'wisdom') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('animalHandling') ? 'skillStar' : '' ]")
              a(@click="roll('wisdom', 'animalHandling')") Animal Handling {{ getSkillBonus('wisdom', 'animalHandling') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('medicine') ? 'skillStar' : '' ]")
              a(@click="roll('wisdom', 'medicine')") Medicine {{ getSkillBonus('wisdom', 'medicine') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('perception') ? 'skillStar' : '' ]")
              a(@click="roll('wisdom', 'perception')") Perception {{ getSkillBonus('wisdom', 'perception') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('survival') ? 'skillStar' : '' ]")
              a(@click="roll('wisdom', 'survival')") Survival {{ getSkillBonus('wisdom', 'survival') | decoratePositive }}

        .attribute-column
          .attribute-bg
            a.attribute-name(@click="rollAttribute('charisma')") CHA
            .attribute-value {{ Character.charisma }}
            .attribute-modifier {{ Character.charisma | getModifier | decoratePositive }}
          .attribute-skills
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('charisma') ? 'skillStar' : '' ]")
              a(@click="roll('charisma', 'charisma')") Saving Throw {{ getSkillBonus('charisma', 'charisma') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('deception') ? 'skillStar' : '' ]")
              a(@click="roll('charisma', 'deception')") Deception {{ getSkillBonus('charisma', 'deception') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('intimidation') ? 'skillStar' : '' ]")
              a(@click="roll('charisma', 'intimidation')") Intimidation {{ getSkillBonus('charisma', 'intimidation') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('performance') ? 'skillStar' : '' ]")
              a(@click="roll('charisma', 'performance')") Performance {{ getSkillBonus('charisma', 'performance') | decoratePositive }}
            .attribute-skills-item(v-bind:class="[ Character.skills.includes('persuasion') ? 'skillStar' : '' ]")
              a(@click="roll('charisma', 'persuasion')") Persuasion {{ getSkillBonus('charisma', 'persuasion') | decoratePositive }}

      .md-layout.md-layout-item.md-small-size-100.md-large-size-50.md-xlarge-size-50.align-top.pr-1
        .md-layout-item.combat-stats.md-medium-size-100
          .armor-class
            .armor-class-value {{ armorClass }}
          .hp
            .hp-wrap
              .hp-controls
                .hp-controls-plus(@click="Character.currentHealth++")
                .hp-controls-minus(@click="Character.currentHealth--")
              .hp-value-current     
                input(v-model="Character.currentHealth")
              .hp-value {{ maxHealth }}
          .initiative
            .initiative-value.roll-link(@click="rollAttribute('dexterity', 'Initiative')") {{ Character.dexterity | getModifier | decoratePositive }}
        .md-layout-item.md-medium-size-100
          table(width="100%")
            tr
              td(colspan="2")
                md-field
                  label(for="charArmor") Armor
                  md-select(v-model="Character.armor" name="charArmor")
                    md-option(v-for="(armor, key) in armors" v-bind:key="armors[armor]" v-bind:value="key") {{ armor.title }} (AC: {{ armor.ac }})
            tr
              td
                md-field
                  label(for="charWeapon1") Melee Weapon
                  md-select(v-model="Character.weaponMelee" name="charWeapon1")
                    md-option(v-for="(weapon, key) in weaponsM" v-bind:key="weaponsM[weapon]" v-bind:value="key") {{ weapon.title }} ({{ weapon.damage }})
              td
                a.roll-link(@click="rollAttack('weaponMelee')") {{ weaponMeleeAttack | decoratePositive }} Attack
                | , 
                a.roll-link(@click="rollDamage('weaponMelee')") {{ this.weaponsM[this.Character.weaponMelee].damage }} + {{ weaponMeleeAttack }} Damage
            tr
              td
                md-field
                  label(for="charWeapon2") Alternative Melee Weapon
                  md-select(v-model="Character.weaponMelee2" name="charWeapon2")
                    md-option(v-for="(weapon, key) in weaponsM" v-bind:key="weaponsM[weapon]" v-bind:value="key") {{ weapon.title }} ({{ weapon.damage }})
              td
                a.roll-link(@click="rollAttack('weaponMelee2')") {{ weaponMeleeAttack | decoratePositive }} Attack
                | , 
                a.roll-link(@click="rollDamage('weaponMelee2')") {{ this.weaponsM[this.Character.weaponMelee2].damage }} + {{ weaponMeleeAttack }} Damage
            tr
              td
                md-field
                  label(for="charWeaponRanged") Ranged Weapon
                  md-select(v-model="Character.weaponRanged" name="charWeaponRanged")
                    md-option(v-for="(weapon, key) in weaponsR" v-bind:key="weaponsR[weapon]" v-bind:value="key") {{ weapon.title }} ({{ weapon.damage }})
              td
                a.roll-link(@click="rollAttackRanged('weaponRanged')") {{ weaponRangedAttack | decoratePositive }} Attack
                | , 
                a.roll-link(@click="rollDamageRanged('weaponRanged')") {{ this.weaponsR[this.Character.weaponRanged].damage }} + {{ weaponRangedAttack }} Damage

      .md-layout.md-layout-item.md-small-size-100.md-large-size-50.md-xlarge-size-50.align-top
        .md-layout-item.md-large-size-25.md-xlarge-size-25.money-wrap
          md-field.money-input.copper-coin
            label Copper
            md-input(v-model="Character.copper")
        .md-layout-item.md-large-size-25.md-xlarge-size-25.money-wrap
          md-field.money-input.silver-coin
            label Silver
            md-input(v-model="Character.silver")
        .md-layout-item.md-large-size-25.md-xlarge-size-25.money-wrap
          md-field.money-input.gold-coin
            label Gold
            md-input(v-model="Character.gold")
        .md-layout-item.md-large-size-25.md-xlarge-size-25.money-wrap
          md-field.money-input.platinum-coin
            label Platinum
            md-input(v-model="Character.platinum")
        .md-layout-item.md-xlarge-size-100
          md-field
            label Items
            md-textarea(v-model="Character.items" md-autogrow)
          md-field
            label Combat Proficiencies
            md-textarea(v-model="Character.proficienciesCombat" md-autogrow)
          md-field
            label Tool Proficiencies
            md-textarea(v-model="Character.tools" md-autogrow)
          md-field
            label Languages
            md-textarea(v-model="Character.languages" md-autogrow)

      .md-layout-item.md-xlarge-size-50
        .md-title Feats
        ul.feat-list
          li.feat-list-item(v-for="feat in Character.feats")
            .feat-name {{ feats[feat].title }}
            .feat-description {{ feats[feat].description }}

    .md-layout
      .md-layout-item
        md-button.md-primary.md-raised(type="button" @click="updateAPI") Update
