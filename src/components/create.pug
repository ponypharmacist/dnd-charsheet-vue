.container
  #navigation
    md-button.md-dense.md-raised(to="/home") Tavern
    md-button.md-dense.md-raised.md-accent(type="button" @click="addToAPI") Save Character

  .md-layout(v-if="isLoading")
    .md-layout-item.text-center
      .error-message {{ errorMessage }}
      template
        spinner

  // Class skills dialog
  md-dialog.dialog(:md-active.sync="skillsDialog" :md-fullscreen="false")
    md-dialog-title Select {{ skillsAllowed }} skills from Class
    .md-layout(md-dynamic-height)
      .md-layout-item
        md-checkbox(v-if="skillsChoice.includes('athletics')" v-model="characterSkills" value="athletics") Athletics (Str)
        md-checkbox(v-if="skillsChoice.includes('animalHandling')" v-model="characterSkills" value="animalHandling") Animal Handling (Wis)
        md-checkbox(v-if="skillsChoice.includes('medicine')" v-model="characterSkills" value="medicine") Medicine (Wis)
        md-checkbox(v-if="skillsChoice.includes('perception')" v-model="characterSkills" value="perception") Perception (Wis)
        md-checkbox(v-if="skillsChoice.includes('survival')" v-model="characterSkills" value="survival") Survival (Wis)
        md-checkbox(v-if="skillsChoice.includes('deception')" v-model="characterSkills" value="deception") Deception (Cha)
        md-checkbox(v-if="skillsChoice.includes('intimidation')" v-model="characterSkills" value="intimidation") Intimidation (Cha)
        md-checkbox(v-if="skillsChoice.includes('performance')" v-model="characterSkills" value="performance") Performance (Cha)
        md-checkbox(v-if="skillsChoice.includes('persuasion')" v-model="characterSkills" value="persuasion") Persuasion (Cha)
        md-checkbox(v-if="skillsChoice.includes('acrobatics')" v-model="characterSkills" value="acrobatics") Acrobatics (Dex)
        md-checkbox(v-if="skillsChoice.includes('sleightOfHand')" v-model="characterSkills" value="sleightOfHand") Sleight of Hand (Dex)
        md-checkbox(v-if="skillsChoice.includes('stealth')" v-model="characterSkills" value="stealth") Stealth (Dex)
        md-checkbox(v-if="skillsChoice.includes('arcana')" v-model="characterSkills" value="arcana") Arcana (Int)
        md-checkbox(v-if="skillsChoice.includes('history')" v-model="characterSkills" value="history") History (Int)
        md-checkbox(v-if="skillsChoice.includes('investigation')" v-model="characterSkills" value="investigation") Investigation (Int)
        md-checkbox(v-if="skillsChoice.includes('nature')" v-model="characterSkills" value="nature") Nature (Int)
        md-checkbox(v-if="skillsChoice.includes('religion')" v-model="characterSkills" value="religion") Religion (Int)
        md-checkbox(v-if="skillsChoice.includes('insight')" v-model="characterSkills" value="insight") Insight (Int)
      
    md-dialog-actions
      md-button.md-primary(@click="skillsDialog = false") Close
      md-button.md-primary(v-if="skillpoints == 0" @click="skillsDialog = false") Confirm
      md-button.md-primary(v-if="skillpoints > 0" @click="skillsDialog = false, skillsDialogNext = true") Next  

  // Remaining skills dialog
  md-dialog.dialog(:md-active.sync="skillsDialogNext" :md-fullscreen="false")
    md-dialog-title Select {{ skillpoints }} skills
    .md-layout
      .md-layout-item.overflow-scroll
        md-checkbox(v-model="characterSkills" value="athletics") Athletics (Str)
        md-checkbox(v-model="characterSkills" value="animalHandling") Animal Handling (Wis)
        md-checkbox(v-model="characterSkills" value="medicine") Medicine (Wis)
        md-checkbox(v-model="characterSkills" value="perception") Perception (Wis)
        md-checkbox(v-model="characterSkills" value="survival") Survival (Wis)
        md-checkbox(v-model="characterSkills" value="deception") Deception (Cha)
        md-checkbox(v-model="characterSkills" value="intimidation") Intimidation (Cha)
        md-checkbox(v-model="characterSkills" value="performance") Performance (Cha)
        md-checkbox(v-model="characterSkills" value="persuasion") Persuasion (Cha)
        md-checkbox(v-model="characterSkills" value="acrobatics") Acrobatics (Dex)
        md-checkbox(v-model="characterSkills" value="sleightOfHand") Sleight of Hand (Dex)
        md-checkbox(v-model="characterSkills" value="stealth") Stealth (Dex)
        md-checkbox(v-model="characterSkills" value="arcana") Arcana (Int)
        md-checkbox(v-model="characterSkills" value="history") History (Int)
        md-checkbox(v-model="characterSkills" value="investigation") Investigation (Int)
        md-checkbox(v-model="characterSkills" value="nature") Nature (Int)
        md-checkbox(v-model="characterSkills" value="religion") Religion (Int)
        md-checkbox(v-model="characterSkills" value="insight") Insight (Int)

    md-dialog-actions
      md-button.md-primary(v-if="skillsAllowed" @click="skillsDialogNext = false, skillsDialog = true") Back
      md-button.md-primary(@click="skillsDialogNext = false") Confirm
  
  h3(v-if="submitted") Thanks for adding your character!
  
  form(v-if="!submitted || isLoading")
    .md-layout
      .md-layout-item.golden-border.md-xsmall-size-100.md-small-size-100.md-medium-size-50.md-large-size-33.md-xlarge-size-33
        .md-title Rejoice, for it is...
        md-field
          label Character Name
          md-input(v-model="name")

        md-field
          label(for="charRace") Race
          md-select(v-model="race" name="charRace")
            md-option(v-for="(race, key) in races" v-bind:key="races[race]" v-bind:value="key") {{ race.title }}

        md-field(v-if="race && races[race].subraces")
          label(for="charSubrace") Subrace
          md-select(v-model="subrace" name="charSubrace")
            md-option(v-for="(subrace, key) in races[race].subraces" v-bind:key="races[race].subraces[subrace]" v-bind:value="key") {{ subrace.title }}

        md-field
          label(for="charClass") Class
          md-select(v-model="clas" name="charClass")
            md-option(v-for="(aClass, key) in classes" v-bind:key="classes[aClass]" v-bind:value="key") {{ aClass.title }}

        md-field
          label(for="charBackground") Background
          md-select(v-model="background" name="charBackground")
            md-option(v-for="(background, key) in backgrounds" v-bind:key="backgrounds[background]" v-bind:value="key") {{ background.title }}

        .feat-checkbox
          md-checkbox(v-model="extraFeat") Extra feat instead of stat bonus
        
        md-field(v-if="extraFeat")
          label(for="bonusFeatList") Extra Feat
          md-select(v-model="extraFeatList" name="bonusFeatList")
            md-option(v-for="(feat, key) in customfeats" v-bind:key="customfeats[feat]" v-bind:value="key") {{ feat.title }}
        
        .md-layout.ability.md-layout-item
          .md-layout-item.mt-1
            .md-layout.md-alignment-top-left
              .md-layout-item
                md-button.md-dense.md-raised(@click="roll4d6") Roll attributes (4d6)
              .md-layout-item
                .md-subheading.mt-1 
                  | Total: {{ sumOfStats }} 
                  span (70-80 is ok)
        
            .md-layout
              .md-layout-item
                md-field.ability-input
                  label(v-if="strengthBonus > 0") {{ strengthBonus | decoratePositive }}
                  md-input(v-model="characterStrength")
                  span.md-helper-text
                    | Str 
                    span.modifier-bubble {{ strength | getModifier | decoratePositive }}
                .ability-swap-container
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterStrength', 'characterCharisma')")
                    md-icon keyboard_arrow_left
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterStrength', 'characterDexterity')")
                    md-icon keyboard_arrow_right
                  
              .md-layout-item
                md-field.ability-input
                  label(v-if="dexterityBonus > 0") {{ dexterityBonus | decoratePositive }}
                  md-input(v-model="characterDexterity")
                  span.md-helper-text
                    | Dex 
                    span.modifier-bubble {{ dexterity | getModifier | decoratePositive }}
                .ability-swap-container
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterDexterity', 'characterStrength')")
                    md-icon keyboard_arrow_left
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterDexterity', 'characterConstitution')")
                    md-icon keyboard_arrow_right
        
              .md-layout-item
                md-field.ability-input
                  label(v-if="constitutionBonus > 0") {{ constitutionBonus | decoratePositive }}
                  md-input(v-model="characterConstitution")
                  span.md-helper-text
                    | Con 
                    span.modifier-bubble {{ constitution | getModifier | decoratePositive }}
                .ability-swap-container
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterConstitution', 'characterDexterity')")
                    md-icon keyboard_arrow_left
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterConstitution', 'characterIntelligence')")
                    md-icon keyboard_arrow_right
        
              .md-layout-item
                md-field.ability-input
                  label(v-if="intelligenceBonus > 0") {{ intelligenceBonus | decoratePositive }}
                  md-input(v-model="characterIntelligence")
                  span.md-helper-text
                    | Int 
                    span.modifier-bubble {{ intelligence | getModifier | decoratePositive }}
                .ability-swap-container
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterIntelligence', 'characterConstitution')")
                    md-icon keyboard_arrow_left
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterIntelligence', 'characterWisdom')")
                    md-icon keyboard_arrow_right
        
              .md-layout-item
                md-field.ability-input
                  label(v-if="wisdomBonus > 0") {{ wisdomBonus | decoratePositive }}
                  md-input(v-model="characterWisdom")
                  span.md-helper-text
                    | Wis 
                    span.modifier-bubble {{ wisdom | getModifier | decoratePositive }}
                .ability-swap-container
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterWisdom', 'characterIntelligence')")
                    md-icon keyboard_arrow_left
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterWisdom', 'characterCharisma')")
                    md-icon keyboard_arrow_right
        
              .md-layout-item
                md-field.ability-input
                  label(v-if="charismaBonus > 0") {{ charismaBonus | decoratePositive }}
                  md-input(v-model="characterCharisma")
                  span.md-helper-text
                    | Cha 
                    span.modifier-bubble {{ charisma | getModifier | decoratePositive }}
                .ability-swap-container
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterCharisma', 'characterWisdom')")
                    md-icon keyboard_arrow_left
                  md-button.md-icon-button.md-dense.md-primary.ability-swap(@click="swap('characterCharisma', 'characterStrength')")
                    md-icon keyboard_arrow_right

      .md-layout.md-layout-item.golden-border.md-small-size-100.md-medium-size-50.md-large-size-33.md-xlarge-size-33
        .combat-stat-title
          md-icon security 
          |  AC: {{ armorClass }}
        .combat-stat-title
          md-icon favorite 
          |  Health: {{ maxHealth }}
        .combat-stat-title
          md-icon track_changes 
          |  Initiative: {{ dexterity | getModifier | decoratePositive }}
        .combat-stat-title
          md-icon verified_user 
          |  Speed: {{ characterSpeed }}
          
        md-field
          md-icon sms
          label Languages
          md-input(v-model="totalLanguages")
        md-field.mt-0
          label Combat proficiencies
          md-textarea(v-model="characterProficienciesCombat" rows="3")  
        md-field.mt-0
          label Tool proficiencies
          md-textarea(v-model="characterToolsList")           
        md-field.money-input.gold-coin
          label Gold
          md-input(v-model="characterGold")
        md-field.mt-0.equipment-textarea
          label Equipment and loot
          md-textarea(v-model="characterItemsList")

      .md-layout.md-layout-item.golden-border.align-top.md-small-size-100.md-medium-size-50.md-large-size-33.md-xlarge-size-33
        .md-title Armor &amp; Weapons
        md-field
          label(for="charArmor") Armor
          md-select(v-model="characterArmor" name="charArmor")
            md-option(v-for="(armor, key) in armors" v-bind:key="armors[armor]" v-bind:value="key") (AC: {{ armor.ac }}) {{ armor.title }}
        
        md-field
          label(for="charWeapon1") Weapon Melee
          md-select(v-model="characterWeaponMelee" name="charWeapon1")
            md-option(v-for="(weapon, key) in meleeWeapons" v-bind:key="weapons[weapon]" v-bind:value="key") {{ weapon.title }} ({{ weapon.damage }})
        
        md-field
          label(for="charWeapon2") Weapon Melee Alternative
          md-select(v-model="characterWeaponMelee2" name="charWeapon2")
            md-option(v-for="(weapon, key) in meleeWeapons" v-bind:key="weapons[weapon]" v-bind:value="key") {{ weapon.title }} ({{ weapon.damage }})
        
        md-field
          label(for="charWeapon3") Weapon Ranged
          md-select(v-model="characterWeaponRanged" name="charWeapon3")
            md-option(v-for="(weapon, key) in rangedWeapons" v-bind:key="weapons[weapon]" v-bind:value="key") {{ weapon.title }} ({{ weapon.damage }})
        
        md-checkbox(v-model="characterShield" v-bind:disabled="wieldsTwohanded") Shield
          span(v-if="wieldsTwohanded")  (you wield a twohanded weapon)
            
        .md-title.mt-1 Skills
        .skill-plain-list
          li(v-bind:class="{ starskill: characterSkills.includes('athletics') }") Athletics (str)
          li(v-bind:class="{ starskill: characterSkills.includes('acrobatics') }") Acrobatics (dex)
          li(v-bind:class="{ starskill: characterSkills.includes('sleightOfHand') }") Sleight of Hand (dex)
          li(v-bind:class="{ starskill: characterSkills.includes('stealth') }") Stealth (dex)
          li(v-bind:class="{ starskill: characterSkills.includes('animalHandling') }") Animal Handling (wis)
          li(v-bind:class="{ starskill: characterSkills.includes('insight') }") Insight (wis)
          li(v-bind:class="{ starskill: characterSkills.includes('medicine') }") Medicine (wis)
          li(v-bind:class="{ starskill: characterSkills.includes('perception') }") Perception (wis)
          li(v-bind:class="{ starskill: characterSkills.includes('survival') }") Survival (wis)
          li(v-bind:class="{ starskill: characterSkills.includes('arcana') }") Arcana (int)
          li(v-bind:class="{ starskill: characterSkills.includes('history') }") History (int)
          li(v-bind:class="{ starskill: characterSkills.includes('investigation') }") Investigation (int)
          li(v-bind:class="{ starskill: characterSkills.includes('nature') }") Nature (int)
          li(v-bind:class="{ starskill: characterSkills.includes('religion') }") Religion (int)
          li(v-bind:class="{ starskill: characterSkills.includes('deception') }") Deception (cha)
          li(v-bind:class="{ starskill: characterSkills.includes('intimidation') }") Intimidation (cha)
          li(v-bind:class="{ starskill: characterSkills.includes('performance') }") Performance (cha)
          li(v-bind:class="{ starskill: characterSkills.includes('persuasion') }") Persuasion (cha)
  
      .md-layout-item.golden-border.md-small-size-100.md-medium-size-50.md-large-size-100
        .md-title Feats
        ul.feat-list
          li.feat-list-item(v-for="feat in characterFeats")
            .feat-name {{ feats[feat].title }}
            .feat-description {{ feats[feat].description }}
