%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: dice_poly_orange.eps
%%Creator: Adobe Illustrator(R) 19.2
%%For: Irina Mir
%%CreationDate: 21/09/2016
%%BoundingBox: 0 0 600 600
%%HiResBoundingBox: 0 0 600 600
%%CropBox: 0 0 600 600
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 19.2.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 19.2.1 x147 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c111 79.158366, 2015/09/25-01:12:00        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Game dice set</rdf:li>
            </rdf:Alt>
         </dc:title>
         <dc:description>
            <rdf:Alt>
               <rdf:li xml:lang="x-repair">Set of dice for fantasy RPG tabletop games. Cube and polyhedrons with numbers. Flat vector icons.</rdf:li>
            </rdf:Alt>
         </dc:description>
         <dc:subject>
            <rdf:Bag>
               <rdf:li>dice, set, d20, d12, d8, game, icon, flat, rpg, sided, side, die, board, isolated, roll, graphic, d4, cartoon, fantasy, 8, 12, 20, website, numbers, wargame, triangle, app, playing, role, tabletop, polyhedral, chance, creative, decahedron, leisure, concept, cube, symbol, element, different, gaming, polyhedron, illustration, object, luck, collection, random, play, vector, blue</rdf:li>
            </rdf:Bag>
         </dc:subject>
         <xmp:MetadataDate>2016-09-21T19:10:20-03:00</xmp:MetadataDate>
         <xmp:ModifyDate>2016-09-21T19:10:20-03:00</xmp:ModifyDate>
         <xmp:CreateDate>2016-09-21T19:10:20-03:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2015 (Macintosh)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEBLAEsAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABABLAAAAAEA&#xA;AQEsAAAAAQAB/+IMWElDQ19QUk9GSUxFAAEBAAAMSExpbm8CEAAAbW50clJHQiBYWVogB84AAgAJ&#xA;AAYAMQAAYWNzcE1TRlQAAAAASUVDIHNSR0IAAAAAAAAAAAAAAAAAAPbWAAEAAAAA0y1IUCAgAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARY3BydAAAAVAAAAAz&#xA;ZGVzYwAAAYQAAABsd3RwdAAAAfAAAAAUYmtwdAAAAgQAAAAUclhZWgAAAhgAAAAUZ1hZWgAAAiwA&#xA;AAAUYlhZWgAAAkAAAAAUZG1uZAAAAlQAAABwZG1kZAAAAsQAAACIdnVlZAAAA0wAAACGdmlldwAA&#xA;A9QAAAAkbHVtaQAAA/gAAAAUbWVhcwAABAwAAAAkdGVjaAAABDAAAAAMclRSQwAABDwAAAgMZ1RS&#xA;QwAABDwAAAgMYlRSQwAABDwAAAgMdGV4dAAAAABDb3B5cmlnaHQgKGMpIDE5OTggSGV3bGV0dC1Q&#xA;YWNrYXJkIENvbXBhbnkAAGRlc2MAAAAAAAAAEnNSR0IgSUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAS&#xA;c1JHQiBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#xA;AAAAAAAAAAAAAFhZWiAAAAAAAADzUQABAAAAARbMWFlaIAAAAAAAAAAAAAAAAAAAAABYWVogAAAA&#xA;AAAAb6IAADj1AAADkFhZWiAAAAAAAABimQAAt4UAABjaWFlaIAAAAAAAACSgAAAPhAAAts9kZXNj&#xA;AAAAAAAAABZJRUMgaHR0cDovL3d3dy5pZWMuY2gAAAAAAAAAAAAAABZJRUMgaHR0cDovL3d3dy5p&#xA;ZWMuY2gAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZGVzYwAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAuSUVDIDYxOTY2LTIuMSBEZWZhdWx0IFJHQiBjb2xvdXIgc3BhY2UgLSBzUkdCAAAAAAAA&#xA;AAAAAAAAAAAAAAAAAAAAAGRlc2MAAAAAAAAALFJlZmVyZW5jZSBWaWV3aW5nIENvbmRpdGlvbiBp&#xA;biBJRUM2MTk2Ni0yLjEAAAAAAAAAAAAAACxSZWZlcmVuY2UgVmlld2luZyBDb25kaXRpb24gaW4g&#xA;SUVDNjE5NjYtMi4xAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB2aWV3AAAAAAATpP4AFF8uABDP&#xA;FAAD7cwABBMLAANcngAAAAFYWVogAAAAAABMCVYAUAAAAFcf521lYXMAAAAAAAAAAQAAAAAAAAAA&#xA;AAAAAAAAAAAAAAKPAAAAAnNpZyAAAAAAQ1JUIGN1cnYAAAAAAAAEAAAAAAUACgAPABQAGQAeACMA&#xA;KAAtADIANwA7AEAARQBKAE8AVABZAF4AYwBoAG0AcgB3AHwAgQCGAIsAkACVAJoAnwCkAKkArgCy&#xA;ALcAvADBAMYAywDQANUA2wDgAOUA6wDwAPYA+wEBAQcBDQETARkBHwElASsBMgE4AT4BRQFMAVIB&#xA;WQFgAWcBbgF1AXwBgwGLAZIBmgGhAakBsQG5AcEByQHRAdkB4QHpAfIB+gIDAgwCFAIdAiYCLwI4&#xA;AkECSwJUAl0CZwJxAnoChAKOApgCogKsArYCwQLLAtUC4ALrAvUDAAMLAxYDIQMtAzgDQwNPA1oD&#xA;ZgNyA34DigOWA6IDrgO6A8cD0wPgA+wD+QQGBBMEIAQtBDsESARVBGMEcQR+BIwEmgSoBLYExATT&#xA;BOEE8AT+BQ0FHAUrBToFSQVYBWcFdwWGBZYFpgW1BcUF1QXlBfYGBgYWBicGNwZIBlkGagZ7BowG&#xA;nQavBsAG0QbjBvUHBwcZBysHPQdPB2EHdAeGB5kHrAe/B9IH5Qf4CAsIHwgyCEYIWghuCIIIlgiq&#xA;CL4I0gjnCPsJEAklCToJTwlkCXkJjwmkCboJzwnlCfsKEQonCj0KVApqCoEKmAquCsUK3ArzCwsL&#xA;Igs5C1ELaQuAC5gLsAvIC+EL+QwSDCoMQwxcDHUMjgynDMAM2QzzDQ0NJg1ADVoNdA2ODakNww3e&#xA;DfgOEw4uDkkOZA5/DpsOtg7SDu4PCQ8lD0EPXg96D5YPsw/PD+wQCRAmEEMQYRB+EJsQuRDXEPUR&#xA;ExExEU8RbRGMEaoRyRHoEgcSJhJFEmQShBKjEsMS4xMDEyMTQxNjE4MTpBPFE+UUBhQnFEkUahSL&#xA;FK0UzhTwFRIVNBVWFXgVmxW9FeAWAxYmFkkWbBaPFrIW1hb6Fx0XQRdlF4kXrhfSF/cYGxhAGGUY&#xA;ihivGNUY+hkgGUUZaxmRGbcZ3RoEGioaURp3Gp4axRrsGxQbOxtjG4obshvaHAIcKhxSHHscoxzM&#xA;HPUdHh1HHXAdmR3DHeweFh5AHmoelB6+HukfEx8+H2kflB+/H+ogFSBBIGwgmCDEIPAhHCFIIXUh&#xA;oSHOIfsiJyJVIoIiryLdIwojOCNmI5QjwiPwJB8kTSR8JKsk2iUJJTglaCWXJccl9yYnJlcmhya3&#xA;JugnGCdJJ3onqyfcKA0oPyhxKKIo1CkGKTgpaymdKdAqAio1KmgqmyrPKwIrNitpK50r0SwFLDks&#xA;biyiLNctDC1BLXYtqy3hLhYuTC6CLrcu7i8kL1ovkS/HL/4wNTBsMKQw2zESMUoxgjG6MfIyKjJj&#xA;Mpsy1DMNM0YzfzO4M/E0KzRlNJ402DUTNU01hzXCNf02NzZyNq426TckN2A3nDfXOBQ4UDiMOMg5&#xA;BTlCOX85vDn5OjY6dDqyOu87LTtrO6o76DwnPGU8pDzjPSI9YT2hPeA+ID5gPqA+4D8hP2E/oj/i&#xA;QCNAZECmQOdBKUFqQaxB7kIwQnJCtUL3QzpDfUPARANER0SKRM5FEkVVRZpF3kYiRmdGq0bwRzVH&#xA;e0fASAVIS0iRSNdJHUljSalJ8Eo3Sn1KxEsMS1NLmkviTCpMcky6TQJNSk2TTdxOJU5uTrdPAE9J&#xA;T5NP3VAnUHFQu1EGUVBRm1HmUjFSfFLHUxNTX1OqU/ZUQlSPVNtVKFV1VcJWD1ZcVqlW91dEV5JX&#xA;4FgvWH1Yy1kaWWlZuFoHWlZaplr1W0VblVvlXDVchlzWXSddeF3JXhpebF69Xw9fYV+zYAVgV2Cq&#xA;YPxhT2GiYfViSWKcYvBjQ2OXY+tkQGSUZOllPWWSZedmPWaSZuhnPWeTZ+loP2iWaOxpQ2maafFq&#xA;SGqfavdrT2una/9sV2yvbQhtYG25bhJua27Ebx5veG/RcCtwhnDgcTpxlXHwcktypnMBc11zuHQU&#xA;dHB0zHUodYV14XY+dpt2+HdWd7N4EXhueMx5KnmJeed6RnqlewR7Y3vCfCF8gXzhfUF9oX4BfmJ+&#xA;wn8jf4R/5YBHgKiBCoFrgc2CMIKSgvSDV4O6hB2EgITjhUeFq4YOhnKG14c7h5+IBIhpiM6JM4mZ&#xA;if6KZIrKizCLlov8jGOMyo0xjZiN/45mjs6PNo+ekAaQbpDWkT+RqJIRknqS45NNk7aUIJSKlPSV&#xA;X5XJljSWn5cKl3WX4JhMmLiZJJmQmfyaaJrVm0Kbr5wcnImc951kndKeQJ6unx2fi5/6oGmg2KFH&#xA;obaiJqKWowajdqPmpFakx6U4pammGqaLpv2nbqfgqFKoxKk3qamqHKqPqwKrdavprFys0K1Erbiu&#xA;La6hrxavi7AAsHWw6rFgsdayS7LCszizrrQltJy1E7WKtgG2ebbwt2i34LhZuNG5SrnCuju6tbsu&#xA;u6e8IbybvRW9j74KvoS+/796v/XAcMDswWfB48JfwtvDWMPUxFHEzsVLxcjGRsbDx0HHv8g9yLzJ&#xA;Osm5yjjKt8s2y7bMNcy1zTXNtc42zrbPN8+40DnQutE80b7SP9LB00TTxtRJ1MvVTtXR1lXW2Ndc&#xA;1+DYZNjo2WzZ8dp22vvbgNwF3IrdEN2W3hzeot8p36/gNuC94UThzOJT4tvjY+Pr5HPk/OWE5g3m&#xA;lucf56noMui86Ubp0Opb6uXrcOv77IbtEe2c7ijutO9A78zwWPDl8XLx//KM8xnzp/Q09ML1UPXe&#xA;9m32+/eK+Bn4qPk4+cf6V/rn+3f8B/yY/Sn9uv5L/tz/bf///+4ADkFkb2JlAGTAAAAAAf/bAIQA&#xA;BgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoKDBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8f&#xA;Hx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f&#xA;Hx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwERAAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQF&#xA;AwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAAAQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMB&#xA;AgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPBUtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdU&#xA;ZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eX&#xA;p7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZqbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUE&#xA;BQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEyobHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PS&#xA;NeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG&#xA;1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/a&#xA;AAwDAQACEQMRAD8A9U4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7F&#xA;XYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq&#xA;7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7&#xA;FXYq7FXYq7FXYq7FUPDqFlNO0EUyPKu5QHent4/RmLh1uHJIxhIGQ/Hx+DbLDOIsjZEZlNTsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVQd3rOmWlRPcKGH7A+JvuWpzB1HaWDD9cxfdzPyDkYtLk&#xA;nyCTXXnOPdbSAsezyGg/4Ef1zRan2oiNscb85fqH63Px9lH+I/JI7zzxrdtcI49N42FTEyfD9BBD&#xA;fjmvxe0Op4rPCR3V+D9rsMfZOGUa3vvTGw/MnTpKLfW727dC6fvE+Z6MPuObnB7Q45bTiY+7cOJm&#xA;7DmPoIl9jJLDWdK1AVs7qOY9eCt8Y+amjD7s3WDV4sv0SB/Hc6rNpsmP6okIzMhodirsVdirsVdi&#xA;rsVdiqFu9St7ZhHvJO2yQJuxPy7Zr9X2jjwnh+rIeUY7n9jdjwSlvyj3pJfy6vdpKXCwQxgsYQ4q&#xA;VXYnY1b9Wcx2hPW6iMjKscIgnh4tyB9/3dzsMMcUCK3J6sVvnkW7j9MkSUHAqaGtTSmc5hJG4527&#xA;nEAYm+TKLHWddsZfqupWz3KogkM0I5uqmo3p9rp8/nnZ6TtHU4jwZo8Yq7HP9v3+902bTYcg4sZ4&#xA;d+RZBZ31pewia1lWWM916j2I6jOhwaiGWPFA2HW5cUoGpClfLmt2KuxV2KuxV2KuxV2KuxV2KuxV&#xA;2KuxVhWu6xdalfCzsGdoQSiJGSPVbuflt/HOH7T7QyarN4WEnh5bfxfs/td/pNNHDDjnz+5EWvlC&#xA;NrWR3uDJdICBHDx4BwPslmG+/XpmRi9nInHImXFkHdyvu8/Nqn2mRIUKj586SSW2kgmeGQUkQ8WF&#xA;Qd/ozlc2KWOZhL6omnZRyCQBHIpPrYpJH/qn9eSwuZpuRQFraXF5cx21unOaU0RagVNK9TQZlY8Z&#xA;nIRHMt+TJGETKXIMmufy+mis4ZY71Y71wo9CWigykV4K4J3qDTxzby7KIiDxVL9LqIdsgyIMbh3j&#xA;u76R3knzJdwXr6FrDOLgMRA0xJYP/vsk169V/tGbLsjXyjLwcp36X936mjtPRRlAZsXLrX3/AK2d&#xA;50rzzsVdirsVdiqlcXUFunOZwi9q9T8hmNqdXiwR4skuEfjkzhjlI0AkN/r88tUth6Uf8/7Z/pnG&#xA;doe0mTJccPoj3/xfs+/zdnh0UY7y3KD0+5S2eWdmYzMOCgeDH4mJ9qbZr+zNdDTmWSRJmdvgfqPv&#xA;7vNuz4zOh0VdR1KCX1Et1KCXj6jPSvFBsigdFy/tPtaGUSjiBAnXETzocojuHVjgwGNGXRiGuTRp&#xA;eIpcA+mNqjxOarCNndaWJMfimWl+YbYWsFtezTIIpSTJHvyib4uJP2tnAO3bNzptZEREZmWx6d39&#xA;riajRS4jKAG469/9iG1HVFttYkvdJugFmPMemrJQk7qysKHxyvNqfDzHJhlz7tvnfNtwafixCGWP&#xA;Jkei+fbabjDqQEEnQTr/AHZ/1h1X9XyzodD7QRl6c3pPf0/Z+OTq9V2RKO+Pcd3VlkckciB42Dow&#xA;qrKagj2Izo4yEhY3DpiCDRbwodirsVdirsVdirsVdirsVdirHvNWsehEbGBv30o/esP2UPb5t+rO&#xA;a9oO0/Dj4MD6pc/Ift+52nZ2l4jxy5DkkGhy3MV0UtvTSaZTGJ5dgi9WI39s5vsrPkjkMYGMZTFc&#xA;UunudlrIxMblZA6DqnUmpJpsQjS7+u3KII4wo4woB3IBPJvp+7N1m7TjpI8Mcni5AKHSMflzPz+D&#xA;r46c5TZjwRu/MsXuL0l2IPORiSznfc9c5M3Iky5l3MMVDyQcgWUEOOQPWuEbN425IApc2U6XVsxD&#xA;RMHRh1UjxzIxZSCCNiG64ziYy6s10fzVpuoTpLd3X1SXgEuLSYgwORurxs32DX/PvnSafXQyG5Hh&#xA;PUHkfMdzoNT2fkxiojiHQj6h5HvYr541SG815ntgg+rKsa3MT8udPiDVFPslqZr+0M4nluPTqHb9&#xA;lacww+r+LoejPPJfmZda0/hMw+v2wCzjpyHaQD37++dV2Xr/AB4Ufrjz/W892nofAnY+iXL9TIs2&#xA;jrHYq7FUv1/UZNO017qMAsrKo5dPiPH+Oa/tTUzw4DOH1BytHgGXIIlhE2sXlxIXkILHud883z5J&#xA;5ZcUyZSehhpoRFBpJ7qQMVLME+2VGy/Og2yEcMiCQCQEmMBs4O56sT9OVqQF7SLGhdugwVaALNMf&#xA;1eA3URl6ypVh7juMysRo05+CXCa6JGrEdMyXOKIha4kdUj5O7bKi1Yn5DAI3sA1yoCyrM1xE5SVS&#xA;jr9pGFCPmDglCtixHCRYTLSfNGp6Q3KCSsJPxQNuhJ26dvozN0Gty4ZAQOx6dHD1Whx5R6hv39Xs&#xA;OehPEuxV2KuxV2KuxV2KuxV2KobVLz6lp1zd8eXoRtJx8eIrlGqynHilMc4glu0+LxJiPeXmi6rb&#xA;3szStMDNIasH2JJ+f8M8vzmc5GUtyXrPAMBQGwRLMka8nNBlHNrFlBzXbP8ACvwp4eOWCNN0cdKQ&#xA;5FSwUlVIDMASAT0BPQZYMciLrZkSLrq5eTMFVSzt9lVBJPyA3xhAyNAWVJAFldNDcQMFnhkhZvsi&#xA;VGQn5cgMnl0+TH9cTH3imMMkZfSQfcl91Yq9Wi+Fu69jgjPvcmGSuaVyKykhhQjqDlwcoG1TSddm&#xA;0jUYr22askZ+JOzqftKfnmXpc88MxOPRq1OmjmgYS6veI35xq9KcgDT5iuehA2LfPpCjS7Ch2Ksf&#xA;89mnluc/5cf/ABMZqO3P8Wl8Pvdl2T/fj4/cwaGQvCHG5IrT3zzwjd6KQo09Ihgi02w4KqvYww1Y&#xA;KC0kjnqfDf8AGuekxxx0+KgAcUY8gLMj927ykpHLOz9ZPwCQ+YrayhNo1vCLd5ELSRABaDbjUDav&#xA;XOT9ocGKBxmEeCUo7jl3Vt383Z6HJOQlxG6LGr64q3pqdl6/PNDCPV2+KHVC8sm20kmoW/oz8lH7&#xA;t9x7HuMyISsOZinYZz5W0TS7rS7bU9MkNtqtrUSyOS6GSlGDoT9llP7NOub/AEenhKAnA1OLz2v1&#xA;WSGQ48g4scvu8j3r/N9hdSeXReaqIRqdtKESSCtHjdqcdwD35fRjr8Ujh4slcYPRj2dmiM/Djvgk&#xA;OvQvOb2akltEOryqT8gR/HNRpx6rejrY+59B56Q+duxV2KuxV2KuxV2KuxV2KpZ5m/5R7Uf+YeT/&#xA;AIjmH2j/AIvP+qXL0P8Afw/rB4pIM89D3gRel3D82hdiRSqAnYU60yGSPVqzR6sg0PTk1LUorR5f&#xA;SRqlm/aIUVIWvc5kdnaQZ8whI0PxydbrM5xYzIC3oN/aWtp5fvLe3jEcMdvLxUePAmvzr3zudVhh&#xA;j0s4xFREJfcXmcOSU88TI78Q+9KvKtvZ6foL6rItZJFeSR6VYIhICL/wNfnmt7Gx48GlOY8yCT7h&#xA;0+xzO0Jyy5/DHLYI7T76z8yabOktuUi5GNg1DvQEMrU+0K/RmZpdTDXYZcUajy/scfPhlpcgo783&#xA;nM6GGaSImpjYoSO/E0zgckOGRj3GnqYHiiD3sX1y4Mt8UB+CIBadq9T+vMnDGoudhjUUIgywtz6O&#xA;tv8AeaL/AFF/VnosPpD5tP6iqZJi7FWPefjTyzcf68f/ABMZqO3P8Wl8Pvdn2R/jA+P3MEsoLmCN&#xA;EnjMfqIJoeX7SN0Izgs+KUasVYejnOMjcTdbfFP9K128sA6oBIrgUV6kCnSlDmZoO18umBEakD3u&#xA;u1OjhlonZCanqU0rPcztylbZfAeAA8BmDn1E8+QzmbJb8GCMRwjkirfyNqk1us0s8cM0g5CBwSfH&#xA;4mHQ+OxzocXs5klAEyEZHo40+14RlQBI70BpvlvU76+mtABC1saXDvuFPYCnWvbMLS9kZcuSUPp4&#xA;Obk59fjxwEufFyUvMvla70+3Qyuk0MppHMlRR6VAIPiPfDruy56WpXxRPVnoe0I5ZUBRHRJ/LnmC&#xA;bRbqUtH69vMpjuLYmgbw7HpkdLqTiN8weYczW6MZ4jepDkUHPf3VwAkk0jQoSYondnVB2C8iemUT&#xA;ySlzOzfDDGPIC++uaTyM0mpxtQ8FdVQ9jRt/xy7CKptP0l9HZ6I+cOxV2KuxV2KuxV2KuxV2Kpb5&#xA;l/5R/UP+MEn/ABHMLtH/ABef9UuVof7+H9YMB8q6NodzY3F9e/vJLVj6kbH4FQKGDlRue/XwzkdD&#xA;p8coGcuj0ev1WWMxCGwkkGsXOnnWmn08AWpI2C8B0o1F22zD1RhKR4OTsdNCfhVP6kSrlSGU0I3B&#xA;HXMEbMCHoGksT5DkYmpNvdEn/ZSZ2uj/AOM0/wBSf++ea1A/wwf1o/oSTyzoWo6pbH1bqWDSgxBi&#xA;Rz+8PUgL9kCvUkZquyezsmeHqlIYe6+fw5Ofr9XDFLaIOTv7mT6hJJpGnC00ewkkkoRGI1qiE/tu&#xA;x+0fvr3zodSZafFwYIEnpXIeZ7/xbqMIGafFllQeZ3Mjw+q04ZXj5GVWBDAjqCD3zgJQkJUfqt62&#xA;FECuSQQ6LqN1pdzrSgNbxS8ZevKpoSwHgOQrmyjhJhxDkG+WphHIMZ5kN3enSWa23qMC9zCJwg6q&#xA;rEha/OmV5MZiBfVnizCZNfwmn0Bbf7zxf6i/qz0OH0h88n9RVMkxdiqR+cvqv6EP1uv1X14BNQ0+&#xA;D1V5b/LNb2tw+AeL6bj97n9m8Xi+n6qNfJjmvQenaaeY5BKloqwyuDUUdEROO3f0+R8K5yvamK8c&#xA;a34f2fqdropXKViuLf5Xf3peuc8XMKXXV1zmqp+FPs/R3y6ApyIQoM9sbHU7i4g1vWDwkt4z6Fnb&#xA;qxO4O7gFjyNfsj+zO8wabLOcdRn+qI2jG/t8/J5rLmxxicWLlI7kqdtPcX9jr5SCSG8kY8YXBWTh&#xA;6QWMcT/MFOV4pzzY8/pMZnoedcND50znGOOeLcGI69OdlLr2Oe28hRR3atHMZB6ccgIYVkLAEHcf&#xA;DXMHUY5Y+zRGe0r5H339zlYpCetJjuK/QwC/io3qr0OzfPOcgej0eKXRCSSiOJn/AJRX6csAsttM&#xA;mj0yLT9BW3vCkk4TnbzEAUd5V9WIGu7Kw+f3ZuBARhR+H6nSnMZ5bjy6/LYvXM7R5F2KuxV2KuxV&#xA;2KuxV2KuxVB6zay3ek3dtFT1ZonRAdhUjbMbWYjkxSiOZiW/TZBDJGR5AvKNFh1QauLSzZYbqYSQ&#xA;yJLUKRxJdWHXbj9+cHpY5PE4I7SNjd7HVyx+Hxy3iKOytrvkybTNNa7a4EroyiRFWgAY0qCT4kds&#xA;vz6A44cV216XtMZZ8NUlltLzgUnqBQ/RtmqkN3MnGiyC282XdvobaSsSGNkeMSmvILISW26ftHNp&#xA;i7WyQ05wgCqIv3utydnRlm8Wze32K2j+db3TbFLMQRyxx14MaggMSSDT3OWaPtrJgxiAAIDDU9lw&#xA;yz4rIJRv/Kx73/lji/4Jsy/9EmX+bH7XH/kSH84sJ8z6lJcmaZ6LLdyFmVdgBWpp+rNKchy5DOXM&#xA;7u70uEQAiOUQjvId768d5oly1bW4iYonShPwuB81NfozZaOd3A8i4vaeKuHIPqBS65W413zFJHZp&#xA;zaaT0bZR0EcfwqfZaDllE4yzZeGPXYOViMcGHil0Fl7pEhSJEO5VQK/IUzvoihTwUjZtdhQ7FWN/&#xA;mGaeVbn/AF4v+TgzU9tf4tL4fe7Tsb/GB8fuefT6lavodhZ25ZHiZ3uYyNmc04vXv3p4ZyGbLE4o&#xA;xHS7elx4JDLKUuvL9SInvR9UQqfjlG/t2OasQ3Yxx+r3IAPQgg0I6Zc5FMgXz55gCgGSNiO5jFT9&#xA;2bgdu6nvHyDrD2Rg7j80GvmnWF1F9QWek8gCuAo4lR0BXptmMO084ynIJeo/jk3ns/EYcFbBS1XX&#xA;9S1Rl+ty8lT7EagKoJ70GV6vXZc9cZumen0ePD9IS5wrqVPQ5iByhskWpkoBCepO/wAhmVj33cmO&#xA;+7KNa8y2eradpcUQ43XrCW7iAoqMvIbEgV58+W2bLNqBOMR1vd1Ol0csU5k/TW3n/Y9jzt3jHYq7&#xA;FXYq7FXYq7FXYq7FXYqwnzzoM0Mq69p1UnhIa449QV+zJT8G/wBvOa7a0JifHx8x9X6/1u+7K1Yk&#xA;PBnyPL9X6mGeYtZbVblLijpWNRLEWJQSDZigqaA5z+p1Hiyt3ui03gxrbnz8vNJf0pb2XwS8jy3A&#xA;UVyjwjLk5coW7/Edh4Sf8CP64/l5MfCLv8SWP8sn/Aj+uP5eS+EXf4ksf5ZP+BH9cfy8l8IoO8v4&#xA;72RWjrwQUAbY1PXLIQ4Ru2QjTdvJLE4eJ2jcVoykgiux3GGyOSZRBFF67+XnlP8ARViL+6Sl9cqO&#xA;CEbxRHcL7E9T92db2RoPCjxy+uX2B5DtjX+LLgj9EftLMc3TpXYq7FWO+f4J5/K90kETyuDG3CNS&#xA;zUVwSaCp2Ga3tbHKenIiLO33uy7InGOoBkaG/wBzwu51qdKrbx8SNub9fuzi44R1e5EAUHBqmotK&#xA;RJLKwap2JAFOpoO2WnFGtgkwijRc3Z3E8lP9dv65VwjuY8ITG70rWbaxt71p2eG5AKBHcsOS8hy2&#xA;HbLJYKANDdx4Z4SkY9QpabZ6tqF2LWGZlk4liZHYAAfKpwQxcRoAM8uSEI8RULk39tcS28k7l4mK&#xA;MVdiKqaGmRlAA1TOBjIAgc0PLfXMSF2nkp2HM7/jiIA9GQiO5BTz6osyvcLIpcAoJQ269qcu3yy/&#xA;wwAyjwnknGgGe9voIIoHknLAhI1L1ANSaDfIQwylMCO7VnlGECZGg+jc9BfOHYq7FXYq7FXYq7FX&#xA;Yq7FXYq06I6MjgMjAhlO4IOxBwEAiikEg2HkHnfQf0FeNIgJsZqtbnwPeP5j9WcN2l2ecGTb6Jcv&#xA;1Padma3x4b/WOf62BSq8sjSPuzZjDZ2ybeVdLurvVQltIkTIhZ3dFk+HYGisCCd8uwxMpbOLrMkY&#xA;Q3ZpJZrE7wwL9euIxWSNRaIy16VUqpGZhhWw3+TqRkvc+kf5zz3VElfULhpozFJzIaMhQVptQ8Qq&#xA;/cMwJy3LvMIHAKNoeNSjVHTuMgTbY9D/AC28qfpG6Gq3aVsbZv3KnpJKN/8AgV7+/wBObbsjQeJL&#xA;xJfTH7T+x0fbOv8ADj4cfql9g/a9azrXkHYq7FXYq7FWM+Y/IGiay/1pV+p6kpDpdxKN2BqDIn2X&#xA;/X75r9V2djy7/TLv/W7LSdqZcI4T6odx/QejG9dgGh2Nb60eIRGRoZbdfUgMshLFlb7SVLH4WoKE&#xA;j4hmn1OGWEeobd45fsdnpZ+NL0m/fsa/T7x9jza8uNONwkloDFFMOUluRtFJ3VT3Q9s0+UA7h6LF&#xA;GYFS6de9lVr5khh0G0torl4byKRVl4x8v3XI1ILKy/Zp75dHUAQAvd189ITlkSLiR9qMbzRpL68s&#xA;7SMLKG3ZI5AjVaR2UnanKlFp0yz8xDxL6ANP5PIMVV6ifsYvr13ps11JcWkTxRklpGkarOzGpNN6&#xA;ffmJllGUvS7PTQnGNSKD0fU7CKXleaWt8/qBoSZCvEClBxowbf78txyjHpac+KcvplwvSYvKOq+Z&#xA;oYmvhNpemu3qzW8zLJK524+mCtYh16/8Dm5w9nzzC5eiP2/s/Gzzs9fj0xPDU5945fHv/G7N9E8v&#xA;aPotv6GnWywg/bk6yP8A6znc5vMGmhiFQFOk1OryZjczaY5e47sVdirsVdirsVdirsVdirsVdiqy&#xA;aCGeNopo1libZkcBlPzByMoiQoiwyjIxNg0WL6r+Wnle+q0ULWUp/atzRf8AgDVfuAzW5+yME+Q4&#xA;T5fqdng7Zz4+Z4h5/rYnfflb5g0+X6xpN0twU3Uoxgm/E8f+GzUZexc0DeM8X2H8fF2+LtvDkFZB&#xA;w/aPx8EvS0/MSeY2YS8DjY1UIP8AkaQo+nlmIMOqJ4eGV/jq5Jno4jiuNe/9Ca6b+Umozt6uq3iw&#xA;8jydI6yyEnryY0AP35nYewpy3ySr3buJm7ehHbHG/sH4+TL9K/L7ytp3FltBcyj/AHbc/vDt/kn4&#xA;B9C5uMHZeDH0s+e/7HT5+1s+T+LhHlt+1kSqqqFUBVGwA2AGbACnXE23ih2KuxV2KuxV2KtOiSIy&#xA;SKHRgQysKgg9QQcBAOxSCQbDAPNH5Tabfc7nRytlcnc25r6LH27p9G3tml1fY8Zb4/Se7p+x32i7&#xA;dnD05PUO/r+15veaVqekXX1LU4GgkH92zfZYD+Vhsw+Wc1qdPPHKpCi9Ph1EMseKBsLGUKCzbAdT&#xA;mM2phoPkjXfMcqyRRfV7AH/eqWoT/Yjq5+WbPR9n5MvIVHvLg6vtLFpxRNy7h+NnrHlnyHoWgqsk&#xA;Uf1i9HW7lALA/wCQOifRv750+k7Ox4dxvLvP42eT1namXPsTUe4fp72R5nuudirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdiqG1HTLDUrZra+gS4gbqjitD4g&#xA;9QfcZXlwxyDhkLDbhzTxy4oGixzT/wAtPL1retcSh7uMGsFvMQUT/Wp9v25fj1zW4exsMJmX1dwP&#xA;43dnm7azThwj095H42ZWqqqhVACgUAGwAGbYB05Nt4q7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FX&#xA;Yq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXYq7FXY&#xA;q7FUHqGr6fp6BrqUKT0QfE1PHiN6Zh6rX4cH1yq/m34dNPL9IV7a6trqFZreRZYm6OhqMyMeWM48&#xA;UTYa8mOUDUhRVcsYOxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2KuxV2K&#xA;uxV2KuxVTnuILeMyTOI0HVjlWbPDFHimRGLKEDI0BZY1qnmyRqx2I4L0MzD4j/qjtnI6/wBpDL04&#xA;BQ/nHn8A7fT9mgbz+TE7meSWVmdi7n7TMakn6c5qU5SPFI2S7qEABQQcOpajpF161jMYg+5Tqjez&#xA;Kdjmbo9Zkwm4Gm2eCGaNTFs30Tz5Z3aRpqSGxlkqI5mqIJCNjxc9Ke/352Gi7ahkAGQcB7/4T8fx&#xA;73ntV2TKBPhnjA6fxD4MqBBAINQdwRm7dQ7FXYq7FWndERnchUUFmY7AAbknIykIgk7AJAJNBLf8&#xA;S6H/AMta/c39M1v8taX+ePt/U5X5DN/Nd/iXQ/8AlrX/AIFv6Y/y1pf54+39S/kM3813+JdD/wCW&#xA;tf8AgW/pj/LWl/nj7f1L+QzfzXf4l0P/AJa1/wCBb+mP8taX+ePt/Uv5DN/NbXzHojMFF2tSaCoY&#xA;D7yMI7Z0pNcY+1Tocw/hTLNm4jsVdirsVdirsVQVnrFhd3M1tBJylhryFNjQ0JB775haftDFmnKE&#xA;D6o/jZyMumnCIkRsUbma47sVdirsVdirsVdirsVdiqE1W9ezs2mRQz1AAPTfNb2rrZabAZxFnk36&#xA;bEMk6LGrX1dQvPrV+xezt6tOzGijb4VAHcmmwzkNFx6rL42oN4oc75eQA9/QO2y1jjww+o8kr1vU&#xA;IJpS8EKQQqOMSIoWvuaZha/VRz5LhEQgNgAK+dOZpMJiKkbKRvMi7uwWviaZigOfSydVmiIBB7qf&#xA;fCDRZRNFO9N+p+YdEt9EeQWlxYvzYBQeagMKruKGr/FnQacxz4hjvhMftdbnEtNmOUDiEvs/HRL4&#xA;dc13ypdJAsy3unSAtCpJMbrWh4HcowPUfryWHWZtIaB4ofZ8O5yJaXDrI2Rwz69/7XrGdq8e7FXY&#xA;qhNX/wCOTe/8YJf+IHMTtD/F8n9SX3Fv0397H+sPveYcs8weup3LFaaaVF+0wX5mmGlpsSBhVTUe&#xA;IxpadywLT1rPWninYq7FXYq7FUp8yanJaWiwW/xXt2fSgUdd9iR99B75qe19WcWMQh/eZNo/rc3Q&#xA;4BOXFL6I7lh9lBrOm3b3Yt2X6iw+sgsmwYdD8W9Qf2a5yOn0+o02Q5BH+6Pq3HX9Yd5lyYssRG/r&#xA;5PQra4iubeO4iPKOVQyn2Od/hyxyQE48i8zkgYSMTzCplrB2KuxV2KuxV2KuxV2KpX5j/wCOY3+s&#xA;uaD2k/xU/wBYOZof7xi9zeyyW8VuKJBEoAReham7t4knOK1GunkhGH0wiOQ7+8+ZdzjwiJMuZLHr&#xA;u49SU0+yuw/rlUY0HZY40HoOnw2ujaLBPbWj3MsqxmUwLzlcuKk+PEfhnoWlxw02njKEDIkC65m3&#xA;l80pZspEpcIF8+SU+e9Ns4oYb+JBFcSP6cgUAcwVJ5EDuKdc1ftHpcYjHIBUia97ndkZpEmB3FWw&#xA;K5MsEy3MDtHIDUOpoQfGozmsUyDtzeigBIcJ3C7VNaS80iysvR4y2zMXl/m5d/m1at75m5NRxY4x&#xA;rcMcGlMMsp3tL8f2Pbc9DeCdirsVQes/8ci+/wCYeX/iBzE1/wDi+T+pL7i36X+9j/WH3vLOWeZP&#xA;Y0jtH02XU79LVDxU1aWTrxQdT/Ae+ZvZ+iOoyiA5dfc42q1AxQMvkzhpPLvl6JEISF2G1F5Sv7k7&#xA;n787WeXS6GIG0T8yXnowz6k3z+5hnmLUrS/1N7i1UrGVUEkULMO9M4/tXVQz5jOAoU77RYJY8fDL&#xA;mlnLNa5lPX89YeHdirsVdirTukaM7kKiAszHoANycEpCIs8gkAk0GBRa3bXvmiK9u5PTtImPpcq0&#xA;AUHh08W3zhodoQy60ZchrGOX6Pt3eklpJY9MYRFyPP8ASm12bR9J1q5t7tbr1yGbiKcKUCr1Nds2&#xA;2fw5afPOE+Pi+zycDHxjLjjKPDX2oTyRrPGRtNmb4Xq9uT/N1Zfp65iezuuonDLrvH9I/S5Ha2ls&#xA;eIPizPOvdC7FXYq7FXYq7FXYq7FUr8x/8cxv9Zc0HtJ/ip/rBzND/eME1S59KLgp+N9vkO+cDjjZ&#xA;ekwQs2k3LMinMeo3k1xo+kWyabaPfcOEQVSSeNPtmlTvnoeaU9PhiMMeOqHw73kMUY5shOSXD1Sv&#xA;z3Ck2i215IpinjdQEJrT1F+JPA0IH3ZrvaDGJYIzIqQP38w5fZEiMpiNwR9zAHCuhU9DnHDZ6UbJ&#xA;RMhRip6jLwXLibfQOemvm7sVdiqD1r/jjX//ADDy/wDEDmJr/wDF8n9SX3Fv0v8Aex/rD73k/LPN&#xA;KezpmP5eIpe+kIHNREoPcA8if1DOq9mIi8h6+n9Lo+2ifSPf+hPJ28tX2pPYzxwz3wFGDR1b4RWg&#xA;cjqB4HN1Oely5TikIyye79P7XWxjnx4xMEiHv/QwjzLpCaTqRgiYtBIokiDGpUEkcSe9CM4/tfQx&#xA;0+bhj9JFh6HQak5sdnmNkp5Zq6c2nsmerPCuxV2KuxVinnnWvQgXTYW/eTDlOR2TsP8AZH8PnnNe&#xA;0Ou4Y+DHnLn7v2/jm7nsnS8UvEPIcvewblnHU9DSvFqN3DbS20chWCenqoKfFTpv1y6GonGBgDUZ&#xA;c2uWGMpCRG45KcU8kMqSxsVkjYMjDqCDUHK4TMZCQ2IZygJCjyL1PRdUj1PTorpKBj8MqD9lx1Ge&#xA;kaDVjUYhMfH3vHarTnFMxP4COzMcd2KuxV2KuxV2KuxVKvMzqmku7GiqwJPsM0PtGL0p/rBzdALy&#xA;gPLbq6aedpD0OyjwHbOIjGg9fCHCKUeWFnTItL886pY2627qlzGgpGXqGAHQVHUZutJ25mwx4dpA&#xA;crdXqOyceSXELiUBrXmPUNXdTckLEm8cKCig+O9STmJre0MupPr5DoOTk6XRQwj08+9LOWYDl0hb&#xA;6PkvqDqvX5ZZAtmM9Hu+eoPnjsVdiqC1v/ji3/8AzDTf8mzmJr/7jJ/Ul9zkaT+9h/WH3vI+Weav&#xA;a0nHljXxpN+XlBa2mHCYDqKGoYfLNp2Vr/y2Sz9Mtj+twdfo/GhQ+ocmYnXvJ6THURJD9aK0Mqxn&#xA;1SKUp9nl7Z1B7S0QPiWOLvrf7nRfktURwUeH37MK8xa3+ltRNwqlIUURwqevEEmpp3JOcn2lrfzO&#xA;XjqhyHud/otL4OPh69Ur5Zr3Mp7TnqrwTsVdiqH1C+gsbOW7nNI4l5HxJ7Ae5O2U6jPHFAzlyDbh&#xA;xHJMRHMsEh8va5q10uqXcHK3uHWR05hZGiJH2B2HHpUjORh2Zn1ExmyD0yN1e9eXw5PQz1uLDHw4&#xA;HeIrltaE816ENJvh6AP1OccoKktxI+0hJ3298xe2Ozxp8lx+iXL9Td2dq/Ghv9Q5pJyzUOxpkqeX&#xA;NPg0iG4vZp21C9jaSztbdeZNF5AcQrseoLdKZ0Eey8UcAlMyOWYJiI+6+75uolrpyykQA4Incn8f&#xA;Jd5RvrzS7mH61G0enaieMcrfZ5g0B9vDD2PlyaeQ4xWLL180do44ZonhNzh9z0LO0eadirsVdirs&#xA;VdirsVQmqaXaanZPZ3YYwvSvBmRgR0IKkZRqNPDNHhmLDdgzyxS4o83lvmX8uNf07ncaZcS39mKk&#xA;oGProPdR9v5r92cxq+xZY94Dij9v7XqdH2xiybTHDL7P2fjdhRmvASDNICNiCzf1zT8I7ndUE28t&#xA;aVfatfiNpZhaxjlcSK5FBTYAmu5OW4MAnKq2cXV544o3txdELrDRQ6jNFYXUsltGQqyGQtyIHxEE&#xA;U2rkcsICVDk26e5QBkN1KwttZ1C5W2svXnnfoiFifmd9h7nHFgOQ8MY2WWXJDHHikQA9J8tflg8Y&#xA;W4165eZ+oso5GCD/AF3Bq3yX7znRaTsKI9WX5D9bzes7bvbEK8z+h6FnQvOuxV2KoTWY3k0i+jjU&#xA;vI9vKqKNySUIAGY2siZYZgczGX3N+mIGWJPLiH3vI/qV9/yzy/8AAN/TPOvy+T+afk9p4sO8fN31&#xA;O+/5Z5f+Ab+mP5fJ/NPyXxYd4+bvqd9/yzy/8A39Mfy+T+afkviw7x83fU77/lnl/wCAb+mP5fJ/&#xA;NPyXxYd4+ba2GoOwVbaUsxoAEbcn6MI02QmhGXyU5oDqPm9mz014R2KuxVg35hX9288OnpG4gVRK&#xA;7AGjsagdOy5yftDnmZDGAeHn7/7HoexsMREzJ35L59a0m8s4bp7i7s9Rt4SiQQhwpemx+yykV8SN&#xA;uuWZNbhywEyZwyxjVC+f3fjdhDSZYSMQIyhI8zXJj2qa7rWp28cF4OaRHkCI+JLUpUkD3zSarW6j&#xA;PERnuB5O10+kw4pEx6+aWelP/vtv+BOYPhy7nK4h3sp0Tzle2otra8tvUt4R6frBW9UJTb22oPoz&#xA;f6HtnJjEYTjcY7XW9On1fZkJ8UompHp0tQ8za1b3lrb2GnwzC2hZpWkkDVZ2r0rU/tHKu09ZHLCO&#xA;PGJcETe/f+CWzQaU45GcyOI7bMx8qahc32ixSXKMs0ZMTM23Ph0b+vvnS9k6iWXADIeobe+uv46u&#xA;k7Rwxx5SI8jv7k3zZOC7FXYq7FXYq7FXYq7FWP8AmPyPomuBpJI/q96el1EAGP8Arjo307++a/V9&#xA;m4s+52l3j8bux0faeXBsDce4/jZhV3Y+ZvK9k1gbGC90+Rj/AKQEdw/M0o4VhQ9tx9+aDNp82mHC&#xA;Y8Ue93ePJg1UuPiMZ9232K2m/l7e6zLFealbxaRahQPq1uvGR9yakMW4Hfv92XafsieUiUxwR7hz&#xA;/YwzdrRwgxgTkl3nl+16FpOi6XpNv9X0+3WBP2iN2YjuzHc/TnRYNPDEKgKedz6nJllczaNy9odi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;VdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsV&#xA;dirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVd&#xA;irsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdi&#xA;rsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdir&#xA;sVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirsVdirs&#xA;Vf/Z</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:4e184244-752b-43c9-869d-d3731dbef784</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:4e184244-752b-43c9-869d-d3731dbef784</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:945d4df8-bb42-440e-b239-2310b7191486</stRef:instanceID>
            <stRef:documentID>xmp.did:945d4df8-bb42-440e-b239-2310b7191486</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:945d4df8-bb42-440e-b239-2310b7191486</stEvt:instanceID>
                  <stEvt:when>2016-07-20T11:46:11-04:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:4e184244-752b-43c9-869d-d3731dbef784</stEvt:instanceID>
                  <stEvt:when>2016-09-21T19:10:20-03:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>600.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>White</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Black</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=216 B=185</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>216</xmpG:green>
                           <xmpG:blue>185</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=254 B=210</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>254</xmpG:green>
                           <xmpG:blue>210</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 10.01</pdf:Producer>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -600 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 600 li
600 600 li
600 0 li
cp
clp
600 600 mo
0 600 li
0 0 li
600 0 li
600 600 li
false sop
/0 
[/DeviceRGB] /CSA add_res
1 1 1 rgb
f
351.644 467.269 mo
264.817 467.269 li
262.283 467.269 260.229 465.215 260.229 462.682 cv
260.229 375.855 li
260.229 373.321 262.283 371.267 264.817 371.267 cv
351.644 371.267 li
354.177 371.267 356.231 373.321 356.231 375.855 cv
356.231 462.682 li
356.231 465.215 354.177 467.269 351.644 467.269 cv
318.954 391.958 mo
310.18 391.958 303.262 394.944 298.199 400.918 cv
293.134 406.892 290.603 414.335 290.603 423.248 cv
290.603 429.407 292.143 434.436 295.223 438.333 cv
298.304 442.23 302.877 444.178 308.943 444.178 cv
313.75 444.178 317.845 442.592 321.228 439.418 cv
324.611 436.244 326.304 432.302 326.304 427.588 cv
326.304 423.762 324.659 420.319 321.369 417.263 cv
318.079 414.207 314.124 412.678 309.504 412.678 cv
307.776 412.678 306.05 413.074 304.324 413.867 cv
304.674 412.888 li
305.139 411.348 306.399 409.622 308.454 407.708 cv
309.479 406.775 310.892 405.981 312.688 405.327 cv
314.484 404.675 316.34 404.348 318.254 404.348 cv
320.167 404.348 321.519 404.208 322.313 403.928 cv
322.92 403.741 323.387 403.438 323.714 403.018 cv
324.04 402.598 324.319 401.991 324.554 401.197 cv
324.787 400.404 324.903 399.332 324.903 397.978 cv
324.903 396.625 324.764 395.505 324.483 394.617 cv
324.204 393.731 323.654 393.066 322.839 392.623 cv
322.021 392.18 320.726 391.958 318.954 391.958 cv
308.664 432.697 mo
306.33 432.697 304.837 432.162 304.183 431.088 cv
303.856 430.527 303.635 430.015 303.518 429.548 cv
303.401 429.082 303.344 428.404 303.344 427.518 cv
303.344 426.632 303.821 425.757 304.778 424.893 cv
305.734 424.029 307.111 423.598 308.909 423.598 cv
310.705 423.598 312.012 424.064 312.829 424.998 cv
313.644 425.932 314.054 426.935 314.054 428.008 cv
314.054 431.135 312.257 432.697 308.664 432.697 cv
level3{
gsave
clp
[4.31016e-09 96.0019 -96.0019 4.31016e-09 308.23 371.267 ]ct
/0 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.968627 .72549 0 ]
/C1 [.94902 .607843 0 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.31016e-09 96.0019 -96.0019 4.31016e-09 308.23 371.267 ]ct
clp
/0 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~p\+=Sp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp@e4Rp%A"Np%A"Np%A"N
p%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Np%A"Mo^qeJo^qeJo^qeJo^qeJo^qeJo^qeJ
o^qeJo^qeJo^qeJo^qeJo^qeJo^qeJo^qbHoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSFoCMSF
oCMSFoCMSFoCMSFoCDJCo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()ABo()AB
~>
<~\[]/Z\@B&Y\@8rV\$riU\$rfS[^NWQ[^NTO[C*EM[C*EL['[3I['[3HZa7!EZa7!EZEgdAZEgdAZ*CR=
Z*CR=Z*:I:Yct@9Yck76YHP.5YHP+3Y-+q1Y-+n/Xf\_-Xf\_,XK8M)XK8M(X/i;%X/i;%WiE)!WiE)!
Wi;tsWMukrWMlboW2QYnW2QVlVl-GjVl-DhVP^5fVP^5eV5:#bV5:#aUnjf^Unjf^USFTZUSFTZU8"BV
U8"BVU7n9STqS0RTqJ'OTV.sNTV.pLT:_aJT:_^HSt;OFSt;OESXl=BSXl=AS=H+>S=H+>S"#n:S"#n:
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /0 /Gradient get_res exec grestore
}if
np
308.943 444.178 mo
302.877 444.178 298.304 442.23 295.223 438.333 cv
292.143 434.436 290.603 429.407 290.603 423.248 cv
290.603 414.335 293.134 406.892 298.199 400.918 cv
303.262 394.944 310.18 391.958 318.954 391.958 cv
320.726 391.958 322.021 392.18 322.839 392.623 cv
323.654 393.066 324.204 393.731 324.483 394.617 cv
324.764 395.505 324.903 396.625 324.903 397.978 cv
324.903 399.332 324.787 400.404 324.554 401.197 cv
324.319 401.991 324.04 402.598 323.714 403.018 cv
323.387 403.438 322.92 403.741 322.313 403.928 cv
321.519 404.208 320.167 404.348 318.254 404.348 cv
316.34 404.348 314.484 404.675 312.688 405.327 cv
310.892 405.981 309.479 406.775 308.454 407.708 cv
306.399 409.622 305.139 411.348 304.674 412.888 cv
304.324 413.867 li
306.05 413.074 307.776 412.678 309.504 412.678 cv
314.124 412.678 318.079 414.207 321.369 417.263 cv
324.659 420.319 326.304 423.762 326.304 427.588 cv
326.304 432.302 324.611 436.244 321.228 439.418 cv
317.845 442.592 313.75 444.178 308.943 444.178 cv
308.909 423.598 mo
307.111 423.598 305.734 424.029 304.778 424.893 cv
303.821 425.757 303.344 426.632 303.344 427.518 cv
303.344 428.404 303.401 429.082 303.518 429.548 cv
303.635 430.015 303.856 430.527 304.183 431.088 cv
304.837 432.162 306.33 432.697 308.664 432.697 cv
312.257 432.697 314.054 431.135 314.054 428.008 cv
314.054 426.935 313.644 425.932 312.829 424.998 cv
312.012 424.064 310.705 423.598 308.909 423.598 cv
level3{
gsave
clp
[4.31016e-09 96.0019 -96.0019 4.31016e-09 308.23 371.267 ]ct
/1 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~j.-21SH.]?!99RLj-p&/RfMK;!90FIigBf+R/l66!90@Gig9`*QiQ-4!90=Fig'T(Q2op0!9'1CiKO?$
PQ9[,!9'+AiKF9#P5sR*!9'(@iK=3"OT=@&!9'">i/drsNr\+!!8rk;i/RfqN<%mr!8rh:i/I`pMu_dp
!8re9i/7TmMZDXl!8iY6hh_?jM#cFh!8iS4hhV9iL]H=f!8iP3hhD-fL&g(a!8`D0hLkmcKE0k]!8`>.
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.31016e-09 96.0019 -96.0019 4.31016e-09 308.23 371.267 ]ct
clp
/1 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~io8tWio8tWio8tWio8tWio8tWio8tWio8tWio/kTiSibSiSibSiSibSiSibSiSibSiSibSiSibSiSibS
iSibSiSibSiSibSiSi_Qi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPOi8EPO
i8EPNhr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>Khr!>JhVR,GhVR,G
hVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,GhVR,Gh;-oCh;-oCh;-oCh;-oCh;-oCh;-oC
~>
<~S=H+>S=H+>S=?";S"#n:S!oe7R[T\6R[KS3R@0J2R@'A/R$a8.R$X/+Q^=&*Q^=&*Q^=&*Q^3r'QBmi&
QBmf$Q'IW"Q'ISuPa%DsPa%AqPEV2oPEV2oPEV/mP*1ukP*1ukP*1ukP*1riOcbcgOcb`eOH>QcOH>Na
O,o?_O,o?^NfK-[NfK-ZNK&pWNK&pVN/W^SN/W^SN/W^SN/W^RMi3LOMi3LOMi3LNMMd:KMMd:JM2@(G
M2@(GLkpkCLkpkCLPLY?LPLY?LPLY?LPLY?L5(G;L5(G;KnY57KnY57KS5#3KS5#3K7ef/K7ef/JqAT+
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /1 /Gradient get_res exec grestore
}if
np
308.664 434.697 mo
312.257 434.697 314.054 433.135 314.054 430.008 cv
314.054 428.935 313.644 427.932 312.829 426.998 cv
312.012 426.065 310.705 425.598 308.909 425.598 cv
307.111 425.598 305.734 426.029 304.778 426.893 cv
303.821 427.757 303.344 428.632 303.344 429.518 cv
303.344 430.404 303.401 431.082 303.518 431.548 cv
303.635 432.015 303.856 432.527 304.184 433.088 cv
304.837 434.162 306.33 434.697 308.664 434.697 cv
cp
326.304 429.588 mo
326.304 434.302 324.611 438.244 321.228 441.418 cv
317.845 444.592 313.75 446.178 308.943 446.178 cv
302.877 446.178 298.304 444.23 295.223 440.333 cv
292.143 436.437 290.603 431.407 290.603 425.248 cv
290.603 416.335 293.134 408.892 298.199 402.918 cv
303.262 396.944 310.18 393.958 318.954 393.958 cv
320.726 393.958 322.021 394.18 322.839 394.623 cv
323.654 395.067 324.204 395.732 324.483 396.617 cv
324.764 397.505 324.903 398.625 324.903 399.978 cv
324.903 401.332 324.787 402.404 324.554 403.197 cv
324.319 403.991 324.04 404.598 323.714 405.018 cv
323.387 405.438 322.92 405.741 322.313 405.928 cv
321.519 406.208 320.167 406.348 318.254 406.348 cv
316.34 406.348 314.484 406.675 312.688 407.327 cv
310.891 407.982 309.479 408.774 308.454 409.708 cv
306.399 411.622 305.139 413.348 304.674 414.888 cv
304.324 415.867 li
306.05 415.074 307.776 414.678 309.504 414.678 cv
314.124 414.678 318.079 416.207 321.369 419.263 cv
324.659 422.319 326.304 425.762 326.304 429.588 cv
cp
1 1 1 rgb
f
529.481 468.05 mo
420.815 468.05 li
418.586 468.05 417.193 465.637 418.307 463.707 cv
472.641 369.599 li
473.198 368.634 474.173 368.152 475.148 368.152 cv
476.123 368.152 477.098 368.634 477.655 369.599 cv
531.988 463.707 li
533.102 465.637 531.709 468.05 529.481 468.05 cv
442.018 442.142 mo
441.741 442.142 441.458 442.152 441.168 442.171 cv
439.756 442.269 438.433 442.671 437.203 443.382 cv
434.89 444.717 433.301 446.714 432.432 449.376 cv
431.565 452.036 431.882 454.669 433.384 457.272 cv
434.886 459.874 436.994 461.467 439.705 462.046 cv
440.543 462.226 441.359 462.316 442.152 462.316 cv
443.926 462.316 445.589 461.867 447.141 460.971 cv
447.897 460.534 448.416 460.164 448.7 459.854 cv
449.359 459.102 449.25 457.968 448.379 456.455 cv
447.592 455.095 446.847 454.401 446.143 454.376 cv
445.74 454.379 445.409 454.433 445.154 454.537 cv
444.898 454.642 444.533 454.831 444.056 455.105 cv
443.863 455.217 li
443.042 455.519 li
442.771 455.631 442.465 455.688 442.126 455.688 cv
441.796 455.688 441.434 455.635 441.04 455.528 cv
440.241 455.314 439.639 454.862 439.24 454.171 cv
438.842 453.48 438.626 452.883 438.597 452.383 cv
438.568 451.882 438.612 451.474 438.734 451.159 cv
438.854 450.845 439.049 450.509 439.318 450.152 cv
439.588 449.795 439.82 449.561 440.012 449.449 cv
440.638 449.087 441.337 448.907 442.11 448.907 cv
442.54 448.907 442.992 448.963 443.468 449.074 cv
444.801 449.385 446.137 449.916 447.477 450.667 cv
448.819 451.42 450.172 452.165 451.534 452.905 cv
452.898 453.645 454.303 454.135 455.754 454.379 cv
456.137 454.443 456.511 454.475 456.875 454.475 cv
457.887 454.474 458.822 454.227 459.68 453.731 cv
460.457 453.283 460.976 452.611 461.234 451.712 cv
461.493 450.813 461.398 449.975 460.949 449.198 cv
453.635 436.529 li
453.137 435.666 452.62 435.07 452.087 434.745 cv
451.847 434.578 451.568 434.493 451.251 434.493 cv
451.121 434.493 450.985 434.507 450.842 434.536 cv
450.351 434.631 449.764 434.877 449.085 435.269 cv
448.405 435.661 447.89 436.045 447.544 436.417 cv
447.198 436.79 447.032 437.225 447.044 437.722 cv
447.057 438.217 447.319 438.909 447.831 439.794 cv
451.254 445.723 li
451.092 445.816 li
450.3 445.194 li
449.081 444.227 447.296 443.358 444.947 442.583 cv
444.069 442.289 443.092 442.142 442.018 442.142 cv
500.762 455.21 mo
500.988 455.341 li
500.859 457.512 501.738 459.143 503.628 460.234 cv
504.805 460.914 506.08 461.254 507.454 461.254 cv
508.286 461.254 509.155 461.129 510.059 460.88 cv
512.456 460.22 514.422 458.561 515.955 455.905 cv
516.604 454.781 517.042 453.672 517.271 452.581 cv
517.497 451.488 517.574 450.582 517.499 449.863 cv
517.426 449.142 517.258 448.448 516.996 447.778 cv
516.734 447.11 516.531 446.675 516.388 446.476 cv
515.551 445.332 514.96 444.66 514.614 444.46 cv
514.288 444.271 513.928 444.177 513.534 444.177 cv
512.936 444.177 512.261 444.394 511.508 444.826 cv
510.745 445.25 510.208 445.732 509.897 446.271 cv
509.359 447.201 509.488 448.224 510.283 449.345 cv
510.559 449.765 li
510.755 450.021 510.853 450.453 510.849 451.057 cv
510.846 451.658 510.625 452.344 510.182 453.111 cv
509.74 453.877 509.188 454.358 508.528 454.554 cv
508.247 454.637 507.984 454.679 507.74 454.679 cv
507.412 454.679 507.118 454.603 506.857 454.453 cv
506.014 453.967 506.068 452.903 507.015 451.261 cv
507.452 450.505 507.723 449.912 507.825 449.483 cv
508.008 448.521 507.34 447.604 505.829 446.731 cv
504.924 446.209 504.183 445.948 503.606 445.948 cv
503.301 445.948 503.042 446.02 502.83 446.166 cv
502.481 446.368 502.212 446.587 502.02 446.821 cv
501.826 447.055 501.522 447.535 501.104 448.258 cv
500.686 448.981 500.102 449.48 499.354 449.754 cv
499.019 449.876 498.7 449.938 498.398 449.938 cv
498.026 449.938 497.679 449.845 497.357 449.659 cv
496.775 449.323 496.406 448.75 496.253 447.941 cv
496.1 447.133 496.355 446.157 497.016 445.011 cv
497.302 444.516 497.629 444.099 497.996 443.764 cv
498.728 443.14 499.431 442.827 500.105 442.827 cv
500.264 442.827 500.423 442.845 500.579 442.88 cv
501.081 442.982 501.52 443.034 501.894 443.034 cv
502.269 443.034 502.579 442.982 502.826 442.88 cv
503.204 442.724 503.643 442.215 504.141 441.351 cv
505.364 439.234 505.347 437.814 504.095 437.091 cv
503.642 436.829 502.99 436.611 502.139 436.437 cv
501.777 436.315 li
501.524 436.255 501.176 436.211 500.73 436.185 cv
500.553 436.177 500.378 436.173 500.206 436.173 cv
499.181 436.173 498.258 436.307 497.438 436.574 cv
494.928 437.428 492.926 439.153 491.43 441.745 cv
489.921 444.357 489.417 446.961 489.922 449.556 cv
490.425 452.15 491.831 454.116 494.143 455.451 cv
495.054 455.975 496.01 456.239 497.014 456.239 cv
497.296 456.239 497.581 456.218 497.871 456.176 cv
498.365 456.115 498.913 455.979 499.512 455.763 cv
500.113 455.548 500.528 455.363 500.762 455.21 cv
469.134 387.496 mo
468.61 387.496 468.179 387.634 467.843 387.908 cv
467.507 388.183 467.282 388.47 467.169 388.769 cv
467.057 389.069 466.926 389.505 466.776 390.078 cv
463.672 402.611 li
463.596 402.936 463.56 403.434 463.56 404.107 cv
463.56 404.781 463.621 405.318 463.746 405.716 cv
464.07 406.665 465.105 407.137 466.852 407.137 cv
476.99 407.137 li
476.99 411.702 li
476.99 412.575 477.064 413.224 477.214 413.648 cv
477.314 413.972 477.476 414.221 477.701 414.396 cv
477.925 414.571 478.249 414.719 478.673 414.845 cv
479.097 414.969 479.67 415.031 480.395 415.031 cv
481.117 415.031 481.722 414.957 482.208 414.807 cv
482.695 414.657 483.056 414.353 483.293 413.89 cv
483.531 413.43 483.649 412.712 483.649 411.739 cv
483.649 390.939 li
483.649 390.366 483.631 389.928 483.593 389.629 cv
483.555 389.33 483.437 388.999 483.237 388.637 cv
483.038 388.277 482.701 388.015 482.228 387.852 cv
481.754 387.69 481.124 387.61 480.338 387.61 cv
479.552 387.61 478.916 387.678 478.431 387.814 cv
477.943 387.952 477.601 388.196 477.402 388.545 cv
477.202 388.894 477.084 389.205 477.046 389.48 cv
477.008 389.754 476.99 390.178 476.99 390.752 cv
476.99 400.965 li
470.892 400.965 li
473.174 391.837 li
473.211 391.725 li
473.385 391.076 473.473 390.552 473.473 390.152 cv
473.473 389.031 472.6 388.233 470.855 387.758 cv
470.231 387.584 469.657 387.496 469.134 387.496 cv
level3{
gsave
clp
[4.48507e-09 99.8978 -99.8978 4.48507e-09 475.148 368.152 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48507e-09 99.8978 -99.8978 4.48507e-09 475.148 368.152 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
480.395 415.031 mo
479.67 415.031 479.097 414.969 478.673 414.845 cv
478.249 414.719 477.925 414.571 477.701 414.396 cv
477.476 414.221 477.314 413.972 477.214 413.648 cv
477.064 413.224 476.99 412.575 476.99 411.702 cv
476.99 407.137 li
466.852 407.137 li
465.105 407.137 464.07 406.665 463.746 405.716 cv
463.621 405.318 463.56 404.781 463.56 404.107 cv
463.56 403.434 463.596 402.936 463.672 402.611 cv
466.776 390.078 li
466.926 389.505 467.057 389.069 467.169 388.769 cv
467.282 388.47 467.507 388.183 467.843 387.908 cv
468.179 387.634 468.61 387.496 469.134 387.496 cv
469.657 387.496 470.231 387.584 470.855 387.758 cv
472.6 388.233 473.473 389.031 473.473 390.152 cv
473.473 390.552 473.385 391.076 473.211 391.725 cv
473.174 391.837 li
470.892 400.965 li
476.99 400.965 li
476.99 390.752 li
476.99 390.178 477.008 389.754 477.046 389.48 cv
477.084 389.205 477.202 388.894 477.402 388.545 cv
477.601 388.196 477.943 387.952 478.431 387.814 cv
478.916 387.678 479.552 387.61 480.338 387.61 cv
481.124 387.61 481.754 387.69 482.228 387.852 cv
482.701 388.015 483.038 388.277 483.237 388.637 cv
483.437 388.999 483.555 389.33 483.593 389.629 cv
483.631 389.928 483.649 390.366 483.649 390.939 cv
483.649 411.739 li
483.649 412.712 483.531 413.43 483.293 413.89 cv
483.056 414.353 482.695 414.657 482.208 414.807 cv
481.722 414.957 481.117 415.031 480.395 415.031 cv
level3{
gsave
clp
[4.48507e-09 99.8978 -99.8978 4.48507e-09 475.148 368.152 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48507e-09 99.8978 -99.8978 4.48507e-09 475.148 368.152 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
442.152 462.316 mo
441.359 462.316 440.543 462.226 439.705 462.046 cv
436.994 461.467 434.886 459.874 433.384 457.272 cv
431.882 454.669 431.565 452.036 432.432 449.376 cv
433.301 446.714 434.89 444.717 437.203 443.382 cv
438.433 442.671 439.756 442.269 441.168 442.171 cv
441.458 442.152 441.741 442.142 442.018 442.142 cv
443.092 442.142 444.069 442.289 444.947 442.583 cv
447.296 443.358 449.081 444.227 450.3 445.194 cv
451.092 445.816 li
451.254 445.723 li
447.831 439.794 li
447.319 438.909 447.057 438.217 447.044 437.722 cv
447.032 437.225 447.198 436.79 447.544 436.417 cv
447.89 436.045 448.405 435.661 449.085 435.269 cv
449.764 434.877 450.351 434.631 450.842 434.536 cv
450.985 434.507 451.121 434.493 451.251 434.493 cv
451.568 434.493 451.847 434.578 452.087 434.745 cv
452.62 435.07 453.137 435.666 453.635 436.529 cv
460.949 449.198 li
461.398 449.975 461.493 450.813 461.234 451.712 cv
460.976 452.611 460.457 453.283 459.68 453.731 cv
458.822 454.227 457.887 454.474 456.875 454.475 cv
456.511 454.475 456.137 454.443 455.754 454.379 cv
454.303 454.135 452.898 453.645 451.534 452.905 cv
450.172 452.165 448.819 451.42 447.477 450.667 cv
446.137 449.916 444.801 449.385 443.468 449.074 cv
442.992 448.963 442.54 448.907 442.11 448.907 cv
441.337 448.907 440.638 449.087 440.012 449.449 cv
439.82 449.561 439.588 449.795 439.318 450.152 cv
439.049 450.509 438.854 450.845 438.734 451.159 cv
438.612 451.474 438.568 451.882 438.597 452.383 cv
438.626 452.883 438.842 453.48 439.24 454.171 cv
439.639 454.862 440.241 455.314 441.04 455.528 cv
441.434 455.635 441.796 455.688 442.126 455.688 cv
442.465 455.688 442.771 455.631 443.042 455.519 cv
443.863 455.217 li
444.056 455.105 li
444.533 454.831 444.898 454.642 445.154 454.537 cv
445.409 454.433 445.74 454.379 446.143 454.376 cv
446.847 454.401 447.592 455.095 448.379 456.455 cv
449.25 457.968 449.359 459.102 448.7 459.854 cv
448.416 460.164 447.897 460.534 447.141 460.971 cv
445.589 461.867 443.926 462.316 442.152 462.316 cv
level3{
gsave
clp
[4.48507e-09 99.8978 -99.8978 4.48507e-09 475.148 368.152 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48507e-09 99.8978 -99.8978 4.48507e-09 475.148 368.152 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
507.454 461.254 mo
506.08 461.254 504.805 460.914 503.628 460.234 cv
501.738 459.143 500.859 457.512 500.988 455.341 cv
500.762 455.21 li
500.528 455.363 500.113 455.548 499.512 455.763 cv
498.913 455.979 498.365 456.115 497.871 456.176 cv
497.581 456.218 497.296 456.239 497.014 456.239 cv
496.01 456.239 495.054 455.975 494.143 455.451 cv
491.831 454.116 490.425 452.15 489.922 449.556 cv
489.417 446.961 489.921 444.357 491.43 441.745 cv
492.926 439.153 494.928 437.428 497.438 436.574 cv
498.258 436.307 499.181 436.173 500.206 436.173 cv
500.378 436.173 500.553 436.177 500.73 436.185 cv
501.176 436.211 501.524 436.255 501.777 436.315 cv
502.139 436.437 li
502.99 436.611 503.642 436.829 504.095 437.091 cv
505.347 437.814 505.364 439.234 504.141 441.351 cv
503.643 442.215 503.204 442.724 502.826 442.88 cv
502.579 442.982 502.269 443.034 501.894 443.034 cv
501.52 443.034 501.081 442.982 500.579 442.88 cv
500.423 442.845 500.264 442.827 500.105 442.827 cv
499.431 442.827 498.728 443.14 497.996 443.764 cv
497.629 444.099 497.302 444.516 497.016 445.011 cv
496.355 446.157 496.1 447.133 496.253 447.941 cv
496.406 448.75 496.775 449.323 497.357 449.659 cv
497.679 449.845 498.026 449.938 498.398 449.938 cv
498.7 449.938 499.019 449.876 499.354 449.754 cv
500.102 449.48 500.686 448.981 501.104 448.258 cv
501.522 447.535 501.826 447.055 502.02 446.821 cv
502.212 446.587 502.481 446.368 502.83 446.166 cv
503.042 446.02 503.301 445.948 503.606 445.948 cv
504.183 445.948 504.924 446.209 505.829 446.731 cv
507.34 447.604 508.008 448.521 507.825 449.483 cv
507.723 449.912 507.452 450.505 507.015 451.261 cv
506.068 452.903 506.014 453.967 506.857 454.453 cv
507.118 454.603 507.412 454.679 507.74 454.679 cv
507.984 454.679 508.247 454.637 508.528 454.554 cv
509.188 454.358 509.74 453.877 510.182 453.111 cv
510.625 452.344 510.846 451.658 510.849 451.057 cv
510.853 450.453 510.755 450.021 510.559 449.765 cv
510.283 449.345 li
509.488 448.224 509.359 447.201 509.897 446.271 cv
510.208 445.732 510.745 445.25 511.508 444.826 cv
512.261 444.394 512.936 444.177 513.534 444.177 cv
513.928 444.177 514.288 444.271 514.614 444.46 cv
514.96 444.66 515.551 445.332 516.388 446.476 cv
516.531 446.675 516.734 447.11 516.996 447.778 cv
517.258 448.448 517.426 449.142 517.499 449.863 cv
517.574 450.582 517.497 451.488 517.271 452.581 cv
517.042 453.672 516.604 454.781 515.955 455.905 cv
514.422 458.561 512.456 460.22 510.059 460.88 cv
509.155 461.129 508.286 461.254 507.454 461.254 cv
level3{
gsave
clp
[4.48507e-09 99.8978 -99.8978 4.48507e-09 475.148 368.152 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.48507e-09 99.8978 -99.8978 4.48507e-09 475.148 368.152 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
477.402 390.128 mo
477.601 389.779 477.943 389.535 478.431 389.398 cv
478.917 389.261 479.552 389.193 480.338 389.193 cv
481.124 389.193 481.754 389.273 482.228 389.435 cv
482.702 389.599 483.038 389.86 483.237 390.221 cv
483.437 390.583 483.555 390.914 483.593 391.212 cv
483.631 391.512 483.649 391.949 483.649 392.523 cv
483.649 413.323 li
483.649 414.296 483.531 415.013 483.293 415.474 cv
483.056 415.936 482.695 416.241 482.208 416.391 cv
481.722 416.54 481.117 416.615 480.395 416.615 cv
479.67 416.615 479.097 416.552 478.673 416.428 cv
478.249 416.303 477.925 416.154 477.701 415.979 cv
477.476 415.805 477.314 415.555 477.214 415.231 cv
477.064 414.807 476.99 414.158 476.99 413.285 cv
476.99 408.721 li
466.852 408.721 li
465.105 408.721 464.07 408.248 463.746 407.299 cv
463.621 406.901 463.56 406.364 463.56 405.691 cv
463.56 405.017 463.596 404.519 463.672 404.194 cv
466.776 391.661 li
466.926 391.088 467.057 390.652 467.169 390.352 cv
467.281 390.053 467.507 389.767 467.843 389.491 cv
468.179 389.217 468.61 389.08 469.134 389.08 cv
469.658 389.08 470.231 389.167 470.855 389.342 cv
472.6 389.817 473.473 390.614 473.473 391.736 cv
473.473 392.135 473.385 392.659 473.211 393.308 cv
473.174 393.42 li
470.892 402.549 li
476.99 402.549 li
476.99 392.335 li
476.99 391.761 477.008 391.338 477.046 391.064 cv
477.084 390.788 477.202 390.478 477.402 390.128 cv
cp
1 1 1 rgb
f
447.831 441.378 mo
447.319 440.492 447.057 439.801 447.044 439.305 cv
447.032 438.808 447.198 438.373 447.544 438.001 cv
447.89 437.628 448.405 437.244 449.085 436.852 cv
449.764 436.46 450.351 436.214 450.842 436.119 cv
451.333 436.022 451.749 436.092 452.087 436.329 cv
452.62 436.654 453.137 437.249 453.635 438.113 cv
460.949 450.782 li
461.398 451.559 461.493 452.396 461.234 453.295 cv
460.976 454.194 460.457 454.866 459.68 455.314 cv
458.513 455.989 457.205 456.203 455.754 455.962 cv
454.303 455.719 452.898 455.228 451.534 454.489 cv
450.172 453.748 448.819 453.003 447.477 452.25 cv
446.137 451.499 444.801 450.968 443.468 450.657 cv
442.136 450.346 440.985 450.47 440.012 451.033 cv
439.82 451.145 439.588 451.378 439.318 451.735 cv
439.049 452.092 438.854 452.428 438.733 452.742 cv
438.612 453.058 438.568 453.466 438.597 453.966 cv
438.626 454.467 438.842 455.063 439.24 455.754 cv
439.639 456.446 440.241 456.898 441.04 457.112 cv
441.841 457.327 442.508 457.324 443.042 457.102 cv
443.863 456.8 li
444.056 456.688 li
444.533 456.414 444.898 456.225 445.154 456.12 cv
445.409 456.016 445.74 455.962 446.143 455.96 cv
446.847 455.984 447.592 456.678 448.379 458.039 cv
449.25 459.551 449.359 460.685 448.7 461.438 cv
448.416 461.747 447.897 462.117 447.141 462.554 cv
444.894 463.851 442.416 464.211 439.705 463.63 cv
436.994 463.05 434.886 461.457 433.384 458.856 cv
431.882 456.252 431.565 453.619 432.432 450.959 cv
433.301 448.297 434.89 446.3 437.203 444.965 cv
438.433 444.254 439.756 443.852 441.168 443.755 cv
442.582 443.66 443.842 443.796 444.947 444.167 cv
447.296 444.941 449.081 445.81 450.3 446.778 cv
451.092 447.4 li
451.254 447.306 li
447.831 441.378 li
cp
f
510.059 462.463 mo
507.662 463.124 505.517 462.909 503.628 461.818 cv
501.738 460.726 500.859 459.096 500.988 456.924 cv
500.762 456.793 li
500.528 456.946 500.113 457.131 499.512 457.347 cv
498.913 457.562 498.365 457.699 497.871 457.76 cv
496.552 457.95 495.31 457.706 494.143 457.034 cv
491.831 455.699 490.425 453.734 489.922 451.14 cv
489.417 448.544 489.921 445.941 491.43 443.329 cv
492.926 440.736 494.928 439.011 497.438 438.158 cv
498.396 437.846 499.493 437.716 500.73 437.768 cv
501.176 437.795 501.524 437.839 501.777 437.898 cv
502.139 438.02 li
502.99 438.194 503.642 438.412 504.095 438.674 cv
505.347 439.398 505.364 440.818 504.141 442.934 cv
503.643 443.799 503.203 444.308 502.826 444.464 cv
502.333 444.668 501.584 444.668 500.579 444.464 cv
499.763 444.28 498.902 444.576 497.996 445.348 cv
497.629 445.683 497.302 446.099 497.016 446.595 cv
496.354 447.741 496.1 448.716 496.253 449.525 cv
496.406 450.333 496.775 450.906 497.357 451.242 cv
497.941 451.579 498.606 451.611 499.354 451.337 cv
500.102 451.063 500.686 450.565 501.104 449.841 cv
501.522 449.118 501.826 448.638 502.02 448.404 cv
502.212 448.171 502.481 447.951 502.83 447.749 cv
503.446 447.328 504.447 447.517 505.829 448.314 cv
507.34 449.188 508.008 450.104 507.825 451.067 cv
507.723 451.495 507.452 452.088 507.015 452.845 cv
506.068 454.486 506.014 455.551 506.857 456.036 cv
507.311 456.298 507.868 456.332 508.528 456.138 cv
509.188 455.942 509.74 455.461 510.182 454.695 cv
510.625 453.927 510.846 453.242 510.849 452.64 cv
510.853 452.036 510.755 451.605 510.559 451.348 cv
510.283 450.928 li
509.489 449.807 509.359 448.784 509.897 447.854 cv
510.208 447.316 510.745 446.833 511.508 446.41 cv
512.758 445.691 513.794 445.569 514.614 446.043 cv
514.96 446.243 515.551 446.915 516.388 448.06 cv
516.531 448.258 516.735 448.693 516.996 449.362 cv
517.258 450.031 517.426 450.726 517.499 451.447 cv
517.574 452.165 517.497 453.071 517.271 454.165 cv
517.042 455.256 516.604 456.364 515.955 457.488 cv
514.422 460.144 512.456 461.803 510.059 462.463 cv
cp
f
424.364 302.364 mo
476.264 245.848 li
503.143 165.447 li
503.143 165.447 li
476.264 245.848 li
424.364 302.364 li
424.364 302.364 li
476.264 245.848 mo
361.637 245.848 li
476.108 245.758 li
418.95 146.758 li
418.95 146.758 li
476.264 245.848 li
375.657 152.522 mo
418.95 146.758 li
375.657 152.522 li
level3{
gsave
clp
[8.62015e-09 192 -192 8.62015e-09 418.95 112.084 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[8.62015e-09 192 -192 8.62015e-09 418.95 112.084 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
418.95 308.259 mo
418.95 308.259 li
418.95 308.259 li
418.95 308.259 li
418.95 308.259 mo
361.637 245.848 li
476.264 245.848 li
424.364 302.364 li
418.95 308.259 li
405.678 268.675 mo
412.863 268.675 li
410.667 274.976 li
410.63 275.049 li
410.472 275.469 410.401 275.805 410.422 276.061 cv
410.48 276.772 411.47 277.271 413.383 277.566 cv
414.065 277.673 414.688 277.727 415.255 277.727 cv
415.821 277.727 416.284 277.643 416.646 277.473 cv
417.008 277.302 417.249 277.123 417.369 276.936 cv
417.488 276.748 417.628 276.473 417.788 276.108 cv
421.398 267.457 li
421.493 267.214 421.546 266.838 421.558 266.326 cv
421.571 265.81 421.505 265.396 421.361 265.086 cv
420.98 264.341 419.716 263.966 417.571 263.966 cv
405.119 263.966 li
404.674 260.219 li
404.585 259.474 404.423 258.916 404.186 258.547 cv
404.024 258.263 403.787 258.045 403.479 257.892 cv
403.168 257.738 402.731 257.605 402.166 257.495 cv
401.602 257.384 400.849 257.329 399.909 257.329 cv
398.97 257.329 398.195 257.395 397.587 257.528 cv
396.981 257.661 396.562 257.93 396.331 258.335 cv
396.102 258.737 396.066 259.357 396.224 260.187 cv
399.135 275.557 li
399.205 275.925 399.278 276.204 399.355 276.394 cv
399.431 276.583 399.6 276.791 399.86 277.018 cv
400.119 277.244 400.515 277.407 401.046 277.507 cv
401.577 277.608 402.268 277.658 403.118 277.658 cv
403.969 277.658 404.651 277.615 405.167 277.531 cv
405.684 277.446 406.037 277.294 406.227 277.077 cv
406.418 276.858 406.524 276.661 406.544 276.488 cv
406.564 276.314 406.553 276.045 406.509 275.678 cv
405.678 268.675 li
429.882 257.229 mo
427.808 257.229 426.524 257.528 426.036 258.121 cv
425.76 258.449 425.591 258.737 425.53 258.985 cv
425.468 259.233 425.425 259.602 425.398 260.092 cv
424.555 275.509 li
424.523 276.085 424.569 276.504 424.69 276.772 cv
424.813 277.007 424.992 277.174 425.231 277.275 cv
425.468 277.376 425.815 277.465 426.268 277.542 cv
426.723 277.619 427.361 277.658 428.184 277.658 cv
429.009 277.658 429.793 277.457 430.542 277.053 cv
430.67 277.007 li
438.003 273.419 li
439.118 272.881 439.724 272.38 439.814 271.918 cv
439.904 271.451 439.556 270.911 438.761 270.294 cv
437.958 269.67 437.129 269.356 436.281 269.356 cv
435.435 269.356 434.373 269.634 433.106 270.187 cv
432.502 270.506 li
433.795 260.156 li
433.859 259.645 433.884 259.255 433.869 258.985 cv
433.855 258.715 433.74 258.417 433.522 258.089 cv
433.106 257.517 431.892 257.229 429.882 257.229 cv
level3{
gsave
clp
[3.8049e-09 -84.5532 84.5532 3.8049e-09 418.95 299.333 ]ct
/2 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .509804 0 ]
/C1 [.831373 .388235 0 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8049e-09 -84.5532 84.5532 3.8049e-09 418.95 299.333 ]ct
clp
/2 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHj3+m-O**m-O*)lg*m&lg*m&lg!d#lK[["lK[[!l07Hsl07Hsl0.?pkih6okih6okND$kkND$kkND!i
k2tggk2tggjlPUcjlPUcjlPRajQ,C_jQ,C_jQ#:\j5]1[j5]1Zio8tWio8tWio/kTiSibSiSibRi8EPO
i8EPOi8EMMhr!>Khr!>KhVR,GhVR,GhVR)Eh;-oCh;-oCgt^]?gt^]?gt^]>gY:K;gY:K;gY1B8g=k97
g=k96g"G'3g"G'3g"=s0f\"j/f\"j/f@SX+f@SX+f@SU)f%/F'f%/F'e^`4#e^`4#e^`1!eC<!teC<!t
~>
<~Jq8K(JUrB'JUi9$J:N0#J:E&uIt)rtIsuiqIXZ`pIXZ]nI=6NlI=6KjI!g<hI!g9fH[C*dH[C'bH?sm`
H?sm_H$O[\H$O[[G^+IXG^+IWGB\7TGB\7SG'8%PG'8%PF`hhLF`hhLFEDVHFEDVHF)uDDF)uDDEcQ2@
EcQ2@EcH)=EH,u<EH#l9E,]c8E,TZ5Df9Q4Df0H1DJj?0DJj<.D/F-,D/F**Ci!p(Ci!m&CMR^$CMR["
C2.KuC2.KtBk_9qBk_9pBP;'mBP;'lB4kjiB4kjhAnGXeAnGXeAS#FaAS#FaA7T4]A7T4]@q0"Y@q0"Y
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /2 /Gradient get_res exec grestore
}if
np
361.637 245.848 mo
418.95 146.758 li
418.95 146.758 li
476.108 245.758 li
361.637 245.848 li
432.349 195.951 mo
430.325 195.951 428.543 196.355 427.003 197.161 cv
425.463 197.968 424.267 198.965 423.417 200.153 cv
422.565 201.341 421.796 202.977 421.106 205.059 cv
420.417 207.142 420.073 209.65 420.073 212.583 cv
420.073 215.781 420.498 218.64 421.349 221.163 cv
421.906 222.747 422.617 224.111 423.482 225.255 cv
424.347 226.399 425.551 227.36 427.091 228.137 cv
428.631 228.914 430.397 229.303 432.393 229.303 cv
434.388 229.303 436.14 228.921 437.651 228.159 cv
439.161 227.397 440.342 226.428 441.193 225.255 cv
443.48 222.146 444.625 217.937 444.625 212.627 cv
444.625 209.664 444.184 206.863 443.305 204.223 cv
442.777 202.639 442.08 201.26 441.215 200.087 cv
440.349 198.915 439.161 197.931 437.651 197.139 cv
436.14 196.347 434.373 195.951 432.349 195.951 cv
404.848 203.739 mo
405.787 203.739 406.521 203.871 407.049 204.135 cv
407.577 204.399 407.966 204.685 408.215 204.993 cv
408.464 205.301 408.691 205.697 408.897 206.181 cv
409.101 206.665 409.205 207.039 409.205 207.303 cv
409.205 208.622 408.655 209.871 407.555 211.043 cv
406.455 212.216 405.127 213.265 403.573 214.189 cv
402.017 215.113 400.464 216.052 398.909 217.005 cv
397.353 217.959 396.027 219.103 394.927 220.437 cv
393.827 221.772 393.277 223.231 393.277 224.815 cv
393.277 225.871 393.658 226.795 394.421 227.587 cv
395.183 228.379 396.093 228.775 397.149 228.775 cv
414.352 228.775 li
415.525 228.775 416.435 228.599 417.081 228.247 cv
417.521 228.042 417.836 227.661 418.027 227.103 cv
418.218 226.546 418.313 225.805 418.313 224.881 cv
418.313 223.956 418.224 223.21 418.049 222.637 cv
417.873 222.065 417.528 221.64 417.015 221.361 cv
416.501 221.082 415.643 220.943 414.441 220.943 cv
406.389 220.943 li
406.389 220.723 li
407.489 220.283 li
409.189 219.609 411.126 218.303 413.297 216.367 cv
414.323 215.459 415.203 214.255 415.936 212.759 cv
416.67 211.263 417.037 209.679 417.037 208.007 cv
417.037 204.869 415.936 202.075 413.737 199.626 cv
411.537 197.176 408.67 195.951 405.135 195.951 cv
401.599 195.951 398.74 197.161 396.555 199.581 cv
394.369 202.001 393.277 204.737 393.277 207.787 cv
393.277 208.814 393.349 209.562 393.497 210.031 cv
393.878 211.146 395.096 211.703 397.149 211.703 cv
398.997 211.703 400.14 211.351 400.581 210.647 cv
400.815 210.237 400.955 209.871 400.999 209.547 cv
401.043 209.224 401.065 208.741 401.065 208.095 cv
401.065 207.83 li
401.241 206.819 li
401.329 206.145 401.718 205.462 402.407 204.773 cv
403.096 204.085 403.91 203.739 404.848 203.739 cv
432.305 221.471 mo
429.342 221.471 427.861 218.516 427.861 212.605 cv
427.861 206.695 429.356 203.739 432.349 203.739 cv
435.341 203.739 436.837 206.687 436.837 212.583 cv
436.837 212.847 li
436.837 218.596 435.326 221.471 432.305 221.471 cv
level3{
gsave
clp
[4.4488e-09 99.09 -99.09 4.4488e-09 418.872 146.758 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.4488e-09 99.09 -99.09 4.4488e-09 418.872 146.758 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
476.264 245.848 mo
476.264 245.848 li
418.95 146.758 li
505.537 158.286 li
503.143 165.447 li
476.264 245.848 li
457.396 173.25 mo
456.672 173.25 456.014 173.409 455.422 173.727 cv
454.704 174.113 454.284 174.783 454.164 175.74 cv
454.043 176.702 454.276 177.649 454.864 178.581 cv
464.674 194.129 li
465.36 195.216 466.015 195.989 466.636 196.444 cv
466.98 196.724 467.358 196.863 467.772 196.863 cv
467.84 196.863 467.908 196.859 467.978 196.852 cv
468.471 196.799 469.033 196.582 469.663 196.201 cv
470.29 195.821 470.744 195.432 471.027 195.036 cv
471.31 194.641 471.393 194.151 471.278 193.566 cv
471.164 192.983 470.755 192.143 470.051 191.048 cv
465.399 183.799 li
465.547 183.715 li
466.472 184.526 li
467.9 185.784 469.89 187.012 472.437 188.204 cv
473.636 188.771 474.944 189.09 476.356 189.162 cv
476.496 189.169 476.634 189.173 476.77 189.173 cv
478.01 189.173 479.118 188.879 480.094 188.292 cv
482.112 187.078 483.246 185.039 483.509 182.196 cv
483.769 179.389 482.88 176.491 480.857 173.496 cv
478.852 170.527 476.488 168.563 473.746 167.579 cv
472.416 167.102 471.18 166.863 470.036 166.863 cv
468.817 166.863 467.704 167.134 466.693 167.677 cv
466.029 168.033 465.584 168.354 465.361 168.642 cv
464.846 169.353 465.158 170.58 466.301 172.327 cv
467.334 173.906 468.206 174.76 468.913 174.883 cv
469.073 174.904 469.22 174.915 469.354 174.915 cv
469.553 174.915 469.723 174.892 469.863 174.844 cv
470.097 174.765 470.423 174.61 470.841 174.377 cv
471.012 174.282 li
471.763 174.068 li
471.922 174.014 472.1 173.986 472.296 173.986 cv
472.697 173.986 473.177 174.1 473.735 174.329 cv
474.565 174.668 475.248 175.239 475.782 176.041 cv
476.317 176.846 476.652 177.525 476.785 178.076 cv
476.919 178.628 476.959 179.069 476.905 179.398 cv
476.851 179.728 476.728 180.072 476.535 180.431 cv
476.342 180.788 476.161 181.018 475.99 181.117 cv
475.576 181.357 475.097 181.477 474.553 181.477 cv
473.979 181.477 473.334 181.343 472.617 181.074 cv
471.221 180.551 469.776 179.782 468.286 178.77 cv
466.796 177.757 465.299 176.754 463.794 175.755 cv
462.291 174.758 460.79 174.029 459.286 173.563 cv
458.613 173.355 457.983 173.25 457.396 173.25 cv
level3{
gsave
clp
[-76.4936 38.2468 -38.2468 -76.4936 516.043 162.085 ]ct
/3 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.94902 .607843 0 ]
/C1 [.929412 .509804 0 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-76.4936 38.2468 -38.2468 -76.4936 516.043 162.085 ]ct
clp
/3 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~o'u8?naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>naZ/>nF5r:nF5r:nF5r:
nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r:nF5r9n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6
n*f`6n*f`6n*f`6n*f`6n*f`6n*f`6n*f]4mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2mdBN2
mdBN2mdBN2mdBN2md9E/mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.mHs<.
~>
<~S!oe7R[T\6R[T\5R@0J2R@0J2R@'A/R$a8.R$a8-Q^=&*Q^=&*Q^3r'QBmi&QBmi&Q'IW"Q'IW"Q'ISu
Pa%DsPa%DsPEV2oPEV2oPEV/mP*1ukP*1ukP*(lhOcbcgOcbcfOH>QcOH>QcOH5H`O,o?_O,o?^NfK-[
NfK-[NfK*YNK&pWNK&pWN/W^SN/W^SN/W[QMi3LOMi3LOMMd:KMMd:KMMd:JM2@(GM2@(GM26tDLkpkC
LkpkBLPLY?LPLY?LPCP<L5(G;L5(G;KnY57KnY57KnY25KS5#3KS5#3K7ef/K7ef/K7ec-JqAT+JqAT+
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /3 /Gradient get_res exec grestore
}if
np
361.637 245.848 mo
361.637 245.848 li
332.364 158.287 li
332.364 158.286 li
332.364 158.286 li
375.657 152.522 li
418.95 146.758 li
418.95 146.758 li
361.637 245.848 li
363.306 186.7 mo
363.324 187.928 li
363.334 188.71 363.553 189.629 363.983 190.688 cv
364.413 191.752 365.047 192.541 365.887 193.057 cv
366.984 193.731 368.141 194.067 369.358 194.067 cv
370.656 194.067 372.023 193.684 373.455 192.917 cv
376.226 191.435 378.484 189.237 380.228 186.334 cv
381.961 183.45 382.815 180.472 382.799 177.405 cv
382.783 174.362 381.66 172.196 379.439 170.896 cv
378.789 170.516 378.032 170.326 377.166 170.326 cv
376.925 170.326 376.676 170.341 376.418 170.37 cv
375.235 170.506 374.398 170.677 373.907 170.887 cv
373.416 171.096 373.026 171.283 372.737 171.446 cv
372.643 170.559 li
372.581 169.968 372.367 169.299 372.002 168.552 cv
371.639 167.807 371.164 167.261 370.579 166.918 cv
369.612 166.351 368.583 166.067 367.493 166.067 cv
366.371 166.067 365.183 166.368 363.929 166.969 cv
361.454 168.157 359.379 170.07 357.701 172.719 cv
356.014 175.382 355.146 178.108 355.104 180.898 cv
355.06 183.708 355.999 185.708 357.923 186.887 cv
358.547 187.27 359.265 187.462 360.077 187.462 cv
360.186 187.462 360.296 187.458 360.408 187.451 cv
361.357 187.394 362.017 187.286 362.389 187.125 cv
362.76 186.966 363.065 186.825 363.306 186.7 cv
371.516 185.888 mo
371.168 185.888 370.858 185.805 370.586 185.641 cv
370.028 185.303 369.712 184.673 369.638 183.749 cv
369.565 182.828 369.899 181.763 370.64 180.558 cv
371.378 179.356 372.175 178.588 373.031 178.252 cv
373.467 178.08 373.862 177.995 374.217 177.995 cv
374.56 177.995 374.866 178.075 375.134 178.234 cv
375.681 178.559 376.008 179.168 376.116 180.06 cv
376.223 180.956 375.906 182.015 375.161 183.24 cv
374.414 184.468 373.604 185.26 372.733 185.615 cv
372.286 185.797 371.88 185.888 371.516 185.888 cv
363.159 179.619 mo
362.912 179.619 362.694 179.561 362.503 179.446 cv
362.102 179.204 361.873 178.763 361.815 178.123 cv
361.757 177.484 362.016 176.706 362.59 175.789 cv
363.163 174.875 363.764 174.289 364.395 174.029 cv
364.727 173.893 365.026 173.825 365.292 173.825 cv
365.531 173.825 365.743 173.88 365.928 173.99 cv
366.319 174.224 366.55 174.67 366.623 175.331 cv
366.696 175.993 366.454 176.77 365.901 177.661 cv
365.345 178.555 364.741 179.137 364.088 179.405 cv
363.743 179.548 363.434 179.619 363.159 179.619 cv
level3{
gsave
clp
[-74.6667 -1.33333 1.33333 -74.6667 416.052 196.763 ]ct
/4 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .835294 0 ]
/C1 [.968627 .72549 0 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-74.6667 -1.33333 1.33333 -74.6667 416.052 196.763 ]ct
clp
/4 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr)forVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVZTkr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtg0cqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYBs_q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q=sa[q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"OOWp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
<~e^W*ueC<!teC;sre'ldpe'ldodaHRldaHRldF$@hdF$@hdEp7ed*U.dd*U+bcd0q`cd0q_cHa_\cHa_\
cHXVYc-=MXc-=JVbfn;Tbfn;SbKJ)PbKJ)Pb0%lLb0%lLb/qcIaiVZHaiVWFaN2HDaN2HCa2c6@a2c6@
a2Z-=`l?$<`l?!:`Pog8`Pog7`5KU4`5KU4_o'C0_o'C0_ns:-_SX1,_SX.*_83t(_83t'^qdb$^qdb$
^q[Y!^V@Ou^V@Ls^:q=q^:q=p]tM+m]tM+m]Y(ni]Y(ni]Xtef]=Y\e]=YYc]"5Ja]"5J`\[f8]\[f8]
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /4 /Gradient get_res exec grestore
}if
np
505.537 158.286 mo
505.537 158.286 li
505.537 158.286 mo
418.95 146.758 li
418.95 108.296 li
418.95 108.296 li
505.537 158.286 li
446.937 130.669 mo
447.057 130.669 447.188 130.686 447.331 130.72 cv
447.813 130.836 448.213 130.994 448.535 131.196 cv
448.855 131.396 449.108 131.591 449.296 131.78 cv
449.482 131.969 449.676 132.199 449.875 132.473 cv
450.074 132.745 450.2 132.949 450.254 133.086 cv
450.519 133.764 450.499 134.346 450.191 134.833 cv
449.88 135.324 449.428 135.731 448.829 136.053 cv
448.224 136.38 447.615 136.718 447.001 137.067 cv
446.381 137.421 445.915 137.904 445.609 138.516 cv
445.299 139.133 445.314 139.873 445.654 140.731 cv
445.881 141.303 446.285 141.834 446.863 142.323 cv
447.437 142.808 448 143.089 448.553 143.169 cv
456.926 144.386 li
457.123 144.415 457.299 144.429 457.453 144.429 cv
457.714 144.429 457.915 144.388 458.054 144.305 cv
458.211 144.234 458.278 144.068 458.257 143.808 cv
458.236 143.548 458.138 143.192 457.962 142.74 cv
457.786 142.286 457.605 141.914 457.417 141.619 cv
457.229 141.325 456.992 141.089 456.708 140.911 cv
456.421 140.733 456.003 140.595 455.45 140.498 cv
451.615 139.824 li
451.57 139.711 li
452.02 139.581 li
452.71 139.384 453.379 138.891 454.025 138.109 cv
454.328 137.747 454.504 137.226 454.555 136.549 cv
454.604 135.874 454.468 135.122 454.144 134.289 cv
453.535 132.722 452.473 131.197 450.938 129.694 cv
449.373 128.163 447.689 127.147 445.871 126.659 cv
445.24 126.49 444.674 126.405 444.176 126.405 cv
443.197 126.405 442.475 126.733 442.021 127.397 cv
441.324 128.415 441.305 129.77 441.97 131.447 cv
442.194 132.011 442.397 132.43 442.581 132.705 cv
443.035 133.36 443.826 133.805 444.943 134.04 cv
445.328 134.122 445.644 134.162 445.89 134.162 cv
446.277 134.162 446.496 134.062 446.547 133.864 cv
446.584 133.673 446.58 133.494 446.536 133.328 cv
446.492 133.161 446.402 132.907 446.267 132.564 cv
446.212 132.424 li
446.092 131.907 li
445.998 131.559 446.059 131.244 446.277 130.964 cv
446.431 130.767 446.65 130.669 446.937 130.669 cv
436.024 130.799 mo
439.619 139.761 li
439.779 140.16 439.914 140.465 440.023 140.677 cv
440.133 140.889 440.306 141.129 440.544 141.398 cv
440.973 141.866 441.715 142.176 442.757 142.327 cv
443.051 142.37 443.305 142.391 443.521 142.391 cv
444.084 142.391 444.383 142.246 444.423 141.957 cv
444.456 141.735 444.449 141.534 444.4 141.353 cv
444.351 141.173 444.253 140.898 444.106 140.527 cv
438.706 126.96 li
438.471 126.37 438.254 125.923 438.058 125.621 cv
437.873 125.351 437.682 125.143 437.483 124.994 cv
437.283 124.845 437.019 124.69 436.688 124.528 cv
436.356 124.365 435.92 124.212 435.378 124.067 cv
435.204 124.021 435.043 123.997 434.894 123.997 cv
434.575 123.997 434.314 124.104 434.112 124.319 cv
434.05 124.348 li
430.986 127.008 li
430.52 127.402 430.38 127.836 430.571 128.309 cv
430.762 128.781 431.283 129.39 432.13 130.131 cv
432.97 130.865 433.657 131.287 434.195 131.402 cv
434.321 131.429 434.448 131.442 434.575 131.442 cv
434.982 131.442 435.389 131.303 435.794 131.025 cv
436.024 130.799 li
level3{
gsave
clp
[2.24442e-09 49.9908 -49.9908 2.24442e-09 462.244 108.296 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.24442e-09 49.9908 -49.9908 2.24442e-09 462.244 108.296 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
332.364 158.286 mo
332.364 158.286 li
418.95 108.296 li
418.95 146.758 li
375.657 152.522 li
332.364 158.286 li
389.175 132.571 mo
383.255 141.524 li
382.961 141.968 382.749 142.307 382.619 142.538 cv
382.489 142.771 382.398 143.02 382.347 143.288 cv
382.294 143.645 382.578 143.825 383.201 143.825 cv
383.391 143.825 383.612 143.808 383.865 143.775 cv
384.988 143.627 385.839 143.274 386.409 142.72 cv
386.728 142.414 386.967 142.151 387.128 141.929 cv
387.288 141.709 387.501 141.384 387.766 140.956 cv
396.002 127.63 li
396.306 127.139 396.49 126.787 396.556 126.572 cv
396.605 126.384 396.589 126.259 396.508 126.195 cv
396.428 126.132 396.282 126.089 396.071 126.065 cv
396.022 126.059 395.966 126.057 395.903 126.057 cv
395.699 126.057 395.424 126.086 395.08 126.143 cv
394.63 126.219 394.104 126.46 393.497 126.868 cv
393.405 126.919 li
387.683 130.579 li
386.822 131.126 386.252 131.597 385.974 131.993 cv
385.693 132.392 385.608 132.817 385.721 133.271 cv
385.821 133.671 386.049 133.873 386.404 133.873 cv
386.457 133.873 386.513 133.868 386.572 133.859 cv
387.025 133.79 387.732 133.466 388.69 132.892 cv
389.175 132.571 li
406.351 124.166 mo
405.963 124.166 405.53 124.207 405.053 124.287 cv
403.995 124.465 402.967 124.802 401.963 125.299 cv
400.954 125.8 400.067 126.36 399.303 126.985 cv
398.528 127.617 397.66 128.465 396.689 129.541 cv
395.696 130.642 394.734 131.961 393.796 133.519 cv
392.735 135.282 391.993 136.884 391.593 138.309 cv
391.349 139.228 391.271 140.016 391.366 140.668 cv
391.464 141.331 391.838 141.858 392.496 142.244 cv
392.968 142.521 393.586 142.66 394.352 142.66 cv
394.67 142.66 395.013 142.636 395.382 142.588 cv
396.646 142.422 397.892 142.018 399.112 141.38 cv
400.322 140.746 401.38 140.009 402.282 139.177 cv
404.634 137.022 406.493 134.397 407.851 131.405 cv
408.57 129.821 408.973 128.415 409.08 127.177 cv
409.142 126.454 409.064 125.858 408.85 125.384 cv
408.639 124.917 408.215 124.573 407.584 124.349 cv
407.239 124.227 406.828 124.166 406.351 124.166 cv
397.656 137.6 mo
396.231 137.6 396.43 135.97 398.157 132.867 cv
399.877 129.776 401.502 128.18 403.129 127.917 cv
403.264 127.896 403.389 127.885 403.503 127.885 cv
404.772 127.885 404.729 129.239 403.304 132.074 cv
403.232 132.217 li
401.599 135.468 399.816 137.317 397.988 137.575 cv
397.869 137.592 397.758 137.6 397.656 137.6 cv
level3{
gsave
clp
[1 -39.5 39.5 1 375.301 166.577 ]ct
/5 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .890196 .0588235 ]
/C1 [1 .835294 0 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /5 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 -39.5 39.5 1 375.301 166.577 ]ct
clp
/5 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
255 <~j5T(Xio8tWio8tWio8tWio8tViSibSiSibSiSibSiSibSiS`YPi8EPOi8EPOi8EPOi8EPNhr!>Khr!>K
hr!>Khr!>Khr!;IhVR,GhVR,GhVR,GhVR,Gh;-oCh;-oCh;-oCh;-oCh;-lAgt^]?gt^]?gt^]?gt^]?
gtUT<gY:K;gY:K;gY:K;gY:K:g=k97g=k97g=k97g=k97g=b04g"G'3g"G'3g"G'3g"G'2f\"j/f\"j/
f\"j/f\"j/f\"g-f@SX+f@SX+f@SX+f@SX+f%/F'f%/F'f%/F'f%/F'f%/C%e^`4#e^`4#e^`4#e^`4#
~>
<~%h9'Z%LrsY%LrsY%LrsY%LrpW%1NaU%1NaU%1NaU%1NaT$k*OQ$k*OQ$k*OQ$k*OQ$O[=M$O[=M$O[=M
$O[=M$OR4J$47+I$47+I$47+I$47(G#mgnE#mgnE#mgnE#mgnD#RC\A#RC\A#RC\A#RC\A#6tJ=#6tJ=
#6tJ=#6tJ=#6kA:"pP89"pP89"pP89"pP57"U,&5"U,&5"U,&5"U,&4"9\i1"9\i1"9\i1"9\i1!s8W-
!s8W-!s8W-!s8W-!s/N*!WiE)!WiE)!WiE)!WiB'!<E3%!<E3%!<E3%!<E3$zzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /5 /Gradient get_res exec grestore
}if
np
418.951 308.259 mo
424.364 302.364 li
476.264 245.848 li
505.537 258.268 li
418.951 308.259 li
462.852 266.525 mo
462.731 266.525 462.617 266.53 462.511 266.538 cv
462.177 266.556 461.869 266.621 461.585 266.735 cv
461.3 266.849 460.972 267.029 460.6 267.277 cv
460.224 267.528 459.802 267.887 459.33 268.361 cv
458.847 268.845 458.505 269.267 458.31 269.624 cv
458.112 269.986 458.149 270.282 458.424 270.509 cv
458.701 270.736 459.304 270.908 460.226 271.022 cv
475.978 272.833 li
476.416 272.888 476.753 272.916 476.991 272.918 cv
476.996 272.918 477.002 272.918 477.007 272.918 cv
477.242 272.918 477.521 272.868 477.845 272.769 cv
478.173 272.668 478.466 272.468 478.722 272.171 cv
478.975 271.877 479.21 271.482 479.426 270.989 cv
479.637 270.506 479.757 270.116 479.79 269.814 cv
479.823 269.516 479.747 269.292 479.562 269.142 cv
479.378 268.992 479.198 268.892 479.022 268.843 cv
478.845 268.793 478.562 268.739 478.17 268.679 cv
471.901 267.813 li
474.128 264.55 li
479.539 266.74 li
479.603 266.772 li
479.98 266.932 480.298 267.034 480.557 267.077 cv
480.647 267.091 480.737 267.099 480.826 267.099 cv
481.457 267.099 482.075 266.732 482.669 266.019 cv
482.907 265.737 483.078 265.475 483.185 265.23 cv
483.29 264.988 483.295 264.777 483.2 264.595 cv
483.106 264.414 482.983 264.283 482.83 264.2 cv
482.677 264.117 482.447 264.012 482.141 263.882 cv
475.328 261.096 li
475.148 261.025 474.847 260.949 474.424 260.865 cv
474.008 260.783 473.654 260.741 473.363 260.741 cv
473.357 260.741 473.352 260.741 473.346 260.741 cv
472.63 260.756 471.969 261.133 471.349 261.896 cv
467.132 267.088 li
464.27 266.652 li
463.715 266.568 463.243 266.525 462.852 266.525 cv
level3{
gsave
clp
[-12.3333 -24.3333 24.3333 -12.3333 467.126 292.895 ]ct
/6 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [.929412 .509804 0 ]
/C1 [.819608 .341176 0 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-12.3333 -24.3333 24.3333 -12.3333 467.126 292.895 ]ct
clp
/6 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~mHj3+m-O**m-O'(lg*m&lg*m%lK[["lK[["l07Hsl07Hsl0.?pkih6okih3mkND$kkND$jk2tggk2tgg
k2k^djlPUcjlPRajQ,C_jQ,C^j5]1[j5]1[io8tWio8tWio/kTiSibSiSi_Qi8EPOi8EPNhr!>Khr!>K
hqm5HhVR,GhVR)Eh;-oCh;-oBgt^]?gt^]?gY:K;gY:K;gY1B8g=k97g=k65g"G'3g"G'2f\"j/f\"j/
f[na,f@SX+f@SU)f%/F'f%/F&e^`4#e^`4#eC<!teC<!teC2mqe'ldpe'landaHRldaHRkdF$@hdF$@h
~>
<~Jq8K(JUr?%J:N0#It)rtIt)orIXZ`pI=6NlI=6KjI!g<hH[C*dH[C'bH?sm`H$O[\H$OXZG^+IXGB\7T
GB\4RG'8%PF`hhLF`heJFEDVHF)uDDF)uABEcQ2@EH,u<EH,r:E,]c8Df9Q4Df9N2DJj?0D/F-,D/F**
Ci!p'CMR^$CMIU!C2.KtBk_9qBkV0nBP;'lB4kjiB4bafAnGXdAS#FaARo=^A7T4\@q0"Y@q&nV@U`eT
@:<SQ@:3JN?smAL?XI/I?X@&F?=$rD?!U`A?!LW>>[1N<>?b<9>?Y36>$>*4=]nm1=]ed.=BJ[,='&I)
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /6 /Gradient get_res exec grestore
}if
np
418.95 308.259 mo
418.95 308.259 li
332.364 258.268 li
361.637 245.848 li
418.95 308.259 li
369.602 261.431 mo
369.462 261.431 369.322 261.438 369.185 261.453 cv
368.298 261.549 367.833 261.939 368.145 262.328 cv
377.987 274.598 li
378.526 275.271 380.049 275.853 381.385 275.876 cv
381.413 275.877 381.44 275.877 381.468 275.877 cv
382.774 275.877 383.352 275.32 382.741 274.634 cv
371.472 261.989 li
371.173 261.653 370.385 261.431 369.602 261.431 cv
354.742 263.344 mo
354.627 263.344 354.504 263.351 354.372 263.365 cv
354.061 263.397 353.822 263.463 353.654 263.562 cv
353.486 263.66 353.4 263.828 353.395 264.067 cv
353.391 264.309 353.496 264.685 353.713 265.205 cv
354.871 267.973 356.703 270.389 359.305 272.339 cv
362.23 274.531 365.368 275.762 368.575 275.824 cv
368.641 275.825 368.705 275.826 368.768 275.826 cv
370.984 275.826 372.345 275.068 372.772 273.586 cv
373.198 272.109 372.382 270.044 370.491 267.562 cv
369.125 265.769 367.551 264.39 365.785 263.375 cv
364.353 262.553 363.092 262.158 361.962 262.158 cv
361.79 262.158 361.621 262.167 361.455 262.185 cv
360.457 262.294 359.854 262.861 359.625 263.912 cv
359.39 264.996 359.677 266.304 360.536 267.891 cv
360.873 268.513 361.336 269.147 361.931 269.795 cv
361.564 269.672 li
361.012 269.512 360.261 269.061 359.333 268.34 cv
358.89 267.991 358.428 267.514 357.95 266.918 cv
357.487 266.339 357.112 265.753 356.82 265.157 cv
356.536 264.578 356.305 264.18 356.124 263.955 cv
355.994 263.785 355.856 263.658 355.71 263.576 cv
355.566 263.494 355.385 263.43 355.167 263.383 cv
355.041 263.357 354.9 263.344 354.742 263.344 cv
366.435 270.035 mo
366.146 270.035 365.746 269.851 365.243 269.489 cv
364.738 269.125 364.278 268.603 363.866 267.931 cv
363.466 267.278 363.32 266.806 363.418 266.502 cv
363.516 266.201 363.722 266.04 364.039 266.017 cv
364.085 266.014 364.132 266.012 364.178 266.012 cv
365.061 266.012 365.916 266.616 366.765 267.872 cv
367.374 268.772 367.598 269.374 367.416 269.651 cv
367.318 269.791 367.207 269.888 367.082 269.941 cv
366.959 269.994 366.75 270.025 366.457 270.035 cv
366.45 270.035 366.442 270.035 366.435 270.035 cv
level3{
gsave
clp
[14 -28.6667 28.6667 14 369.368 296.141 ]ct
/6 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14 -28.6667 28.6667 14 369.368 296.141 ]ct
clp
/6 /Gradient get_res exec grestore
}if
np
505.537 258.268 mo
505.537 258.268 li
476.264 245.848 li
503.143 165.447 li
505.537 158.286 li
505.537 258.268 li
492.479 234.564 mo
492.504 235.364 li
492.52 235.897 492.594 236.535 492.725 237.277 cv
492.857 238.021 493.035 238.616 493.259 239.057 cv
493.836 240.19 494.484 240.76 495.205 240.76 cv
495.439 240.76 495.681 240.7 495.931 240.579 cv
496.966 240.078 497.849 238.798 498.572 236.731 cv
499.302 234.646 499.68 232.32 499.701 229.773 cv
499.723 227.232 499.328 225.258 498.524 223.862 cv
498.232 223.354 497.891 223.044 497.502 222.93 cv
497.27 222.862 497.081 222.828 496.934 222.828 cv
496.837 222.828 496.758 222.843 496.697 222.873 cv
496.547 222.947 496.423 223.017 496.326 223.083 cv
496.327 222.02 li
496.329 221.346 496.248 220.521 496.085 219.548 cv
495.922 218.578 495.679 217.814 495.355 217.254 cv
494.804 216.301 494.213 215.829 493.583 215.829 cv
493.229 215.829 492.862 215.978 492.484 216.276 cv
491.449 217.089 490.601 218.544 489.931 220.638 cv
489.267 222.713 488.913 225.006 488.863 227.536 cv
488.813 230.07 489.176 232.105 489.96 233.654 cv
490.257 234.241 490.627 234.6 491.07 234.73 cv
491.348 234.811 491.577 234.852 491.756 234.852 cv
491.864 234.852 491.954 234.837 492.025 234.807 cv
492.215 234.728 492.367 234.647 492.479 234.564 cv
495.348 205.76 mo
495.046 205.762 494.682 206.431 494.256 207.761 cv
493.819 209.125 493.654 210.122 493.76 210.759 cv
493.817 211.117 493.883 211.386 493.959 211.563 cv
494.035 211.741 494.159 211.977 494.332 212.27 cv
501.009 223.605 li
501.315 224.125 501.561 224.453 501.746 224.591 cv
501.831 224.646 501.91 224.673 501.985 224.673 cv
502.057 224.673 502.124 224.648 502.186 224.596 cv
502.312 224.491 502.462 224.286 502.639 223.98 cv
502.815 223.673 503.022 223.178 503.261 222.494 cv
503.501 221.808 503.608 220.982 503.584 220.019 cv
503.593 219.875 li
503.568 211.162 li
503.569 209.901 503.451 209.089 503.215 208.726 cv
503.076 208.513 502.884 208.407 502.639 208.407 cv
502.467 208.407 502.27 208.459 502.046 208.563 cv
501.507 208.814 501.13 209.265 500.911 209.918 cv
500.693 210.569 500.559 211.559 500.511 212.892 cv
500.515 213.57 li
496.202 206.597 li
496.016 206.297 495.871 206.085 495.764 205.962 cv
495.657 205.84 495.519 205.772 495.348 205.76 cv
495.613 234.082 mo
495.439 234.082 495.293 233.973 495.177 233.754 cv
495.022 233.463 494.934 233.017 494.911 232.415 cv
494.888 231.814 494.991 231.176 495.22 230.501 cv
495.449 229.823 495.696 229.428 495.96 229.319 cv
496.033 229.288 496.102 229.273 496.167 229.273 cv
496.34 229.273 496.485 229.38 496.602 229.594 cv
496.765 229.889 496.856 230.329 496.876 230.914 cv
496.896 231.498 496.784 232.144 496.543 232.848 cv
496.303 233.55 496.054 233.948 495.795 234.046 cv
495.731 234.07 495.67 234.082 495.613 234.082 cv
492.221 228.656 mo
492 228.656 491.814 228.514 491.665 228.231 cv
491.466 227.855 491.353 227.28 491.326 226.508 cv
491.299 225.737 491.432 224.905 491.725 224.007 cv
492.019 223.105 492.331 222.577 492.662 222.423 cv
492.758 222.379 492.85 222.356 492.936 222.356 cv
493.147 222.356 493.326 222.49 493.474 222.757 cv
493.683 223.136 493.797 223.724 493.815 224.523 cv
493.834 225.323 493.694 226.175 493.395 227.074 cv
493.098 227.969 492.785 228.48 492.456 228.608 cv
492.373 228.64 492.295 228.656 492.221 228.656 cv
level3{
gsave
clp
[-36.8404 -13.8693 13.8693 -36.8404 517.296 212.704 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-36.8404 -13.8693 13.8693 -36.8404 517.296 212.704 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
332.364 258.268 mo
332.364 258.268 li
332.364 158.287 li
361.637 245.848 li
332.364 258.268 li
347.658 218.622 mo
347.645 218.622 347.632 218.624 347.619 218.626 cv
347.458 218.657 347.331 218.731 347.239 218.85 cv
347.145 218.968 347.016 219.178 346.848 219.481 cv
340.399 231.123 li
340.103 231.657 339.903 232.105 339.8 232.467 cv
339.713 232.8 339.676 233.111 339.689 233.403 cv
339.703 233.694 339.753 234.06 339.838 234.5 cv
339.924 234.94 340.08 235.486 340.307 236.136 cv
340.534 236.786 340.849 237.187 341.251 237.342 cv
341.309 237.391 li
344.813 239.161 li
345.007 239.262 345.178 239.313 345.326 239.313 cv
345.557 239.313 345.733 239.191 345.856 238.949 cv
346.058 238.551 346.182 237.777 346.227 236.627 cv
346.272 235.48 346.195 234.613 345.997 234.021 cv
345.799 233.428 345.442 232.932 344.924 232.532 cv
344.651 232.388 li
348.585 224.963 li
348.755 224.643 348.878 224.385 348.956 224.188 cv
349.035 223.992 349.1 223.715 349.153 223.355 cv
349.238 222.709 349.079 221.76 348.676 220.499 cv
348.276 219.25 347.937 218.622 347.658 218.622 cv
335.007 211.712 mo
334.894 211.712 334.764 211.757 334.618 211.849 cv
334.427 211.969 334.201 212.23 333.94 212.634 cv
333.679 213.041 333.486 213.449 333.361 213.856 cv
333.237 214.264 333.202 214.74 333.257 215.283 cv
333.312 215.824 333.493 216.536 333.799 217.413 cv
335.297 221.71 337.014 224.105 338.928 224.646 cv
339.232 224.732 339.531 224.775 339.825 224.775 cv
341.329 224.775 342.699 223.653 343.94 221.449 cv
344.943 219.67 345.523 217.548 345.694 215.071 cv
345.863 212.609 345.507 210.005 344.619 207.225 cv
343.909 205.002 343.037 203.508 341.996 202.751 cv
341.595 202.46 341.21 202.313 340.842 202.313 cv
340.24 202.313 339.683 202.705 339.17 203.496 cv
338.492 204.543 338.14 206.296 338.122 208.752 cv
338.104 211.214 338.468 213.559 339.21 215.765 cv
339.486 216.583 339.83 217.284 340.242 217.863 cv
340.015 217.987 li
339.888 218.074 339.739 218.117 339.568 218.117 cv
339.275 218.117 338.916 217.99 338.491 217.733 cv
338.157 217.522 337.783 217.082 337.37 216.414 cv
336.955 215.743 336.588 214.941 336.27 214.01 cv
335.952 213.075 335.699 212.454 335.513 212.146 cv
335.377 211.903 335.241 211.763 335.106 211.725 cv
335.074 211.717 335.041 211.712 335.007 211.712 cv
342.41 214.594 mo
342.309 214.594 342.194 214.55 342.065 214.462 cv
341.771 214.262 341.485 213.741 341.207 212.899 cv
340.928 212.054 340.805 211.305 340.838 210.657 cv
340.872 210.009 340.981 209.536 341.165 209.238 cv
341.345 208.946 341.526 208.8 341.707 208.8 cv
342.062 208.8 342.421 209.357 342.782 210.467 cv
343.135 211.552 343.271 212.392 343.191 212.993 cv
343.148 213.3 343.096 213.546 343.036 213.731 cv
342.977 213.916 342.873 214.134 342.725 214.384 cv
342.642 214.524 342.537 214.594 342.41 214.594 cv
level3{
gsave
clp
[-27.9301 11.323 -11.323 -27.9301 346.764 202.439 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-27.9301 11.323 -11.323 -27.9301 346.764 202.439 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
414.352 228.775 mo
397.149 228.775 li
396.093 228.775 395.183 228.379 394.421 227.587 cv
393.658 226.795 393.277 225.871 393.277 224.815 cv
393.277 223.231 393.827 221.772 394.927 220.437 cv
396.027 219.103 397.353 217.959 398.909 217.005 cv
400.464 216.052 402.017 215.113 403.573 214.189 cv
405.127 213.265 406.455 212.216 407.555 211.043 cv
408.655 209.871 409.205 208.622 409.205 207.303 cv
409.205 207.039 409.101 206.665 408.897 206.181 cv
408.691 205.697 408.464 205.301 408.215 204.993 cv
407.966 204.685 407.577 204.399 407.049 204.135 cv
406.521 203.871 405.787 203.739 404.848 203.739 cv
403.91 203.739 403.096 204.085 402.407 204.773 cv
401.718 205.462 401.329 206.145 401.241 206.819 cv
401.065 207.83 li
401.065 208.095 li
401.065 208.741 401.043 209.224 400.999 209.547 cv
400.955 209.871 400.815 210.237 400.581 210.647 cv
400.14 211.351 398.997 211.703 397.149 211.703 cv
395.096 211.703 393.878 211.146 393.497 210.031 cv
393.349 209.562 393.277 208.814 393.277 207.787 cv
393.277 204.737 394.369 202.001 396.555 199.581 cv
398.74 197.161 401.599 195.951 405.135 195.951 cv
408.67 195.951 411.537 197.176 413.737 199.626 cv
415.936 202.075 417.037 204.869 417.037 208.007 cv
417.037 209.679 416.67 211.263 415.936 212.759 cv
415.203 214.255 414.323 215.459 413.297 216.367 cv
411.126 218.303 409.189 219.609 407.489 220.283 cv
406.389 220.723 li
406.389 220.943 li
414.441 220.943 li
415.643 220.943 416.501 221.082 417.015 221.361 cv
417.528 221.64 417.873 222.065 418.049 222.637 cv
418.224 223.21 418.313 223.956 418.313 224.881 cv
418.313 225.805 418.218 226.546 418.027 227.103 cv
417.836 227.661 417.521 228.042 417.081 228.247 cv
416.435 228.599 415.525 228.775 414.352 228.775 cv
level3{
gsave
clp
[4.4488e-09 99.09 -99.09 4.4488e-09 418.872 146.758 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.4488e-09 99.09 -99.09 4.4488e-09 418.872 146.758 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
432.393 229.303 mo
430.397 229.303 428.631 228.914 427.091 228.137 cv
425.551 227.36 424.347 226.399 423.482 225.255 cv
422.617 224.111 421.906 222.747 421.349 221.163 cv
420.498 218.64 420.073 215.781 420.073 212.583 cv
420.073 209.65 420.417 207.142 421.106 205.059 cv
421.796 202.977 422.565 201.341 423.417 200.153 cv
424.267 198.965 425.463 197.968 427.003 197.161 cv
428.543 196.355 430.325 195.951 432.349 195.951 cv
434.373 195.951 436.14 196.347 437.651 197.139 cv
439.161 197.931 440.349 198.915 441.215 200.087 cv
442.08 201.26 442.777 202.639 443.305 204.223 cv
444.184 206.863 444.625 209.664 444.625 212.627 cv
444.625 217.937 443.48 222.146 441.193 225.255 cv
440.342 226.428 439.161 227.397 437.651 228.159 cv
436.14 228.921 434.388 229.303 432.393 229.303 cv
432.349 203.739 mo
429.356 203.739 427.861 206.695 427.861 212.605 cv
427.861 218.516 429.342 221.471 432.305 221.471 cv
435.326 221.471 436.837 218.596 436.837 212.847 cv
436.837 212.583 li
436.837 206.687 435.341 203.739 432.349 203.739 cv
level3{
gsave
clp
[4.4488e-09 99.09 -99.09 4.4488e-09 418.872 146.758 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.4488e-09 99.09 -99.09 4.4488e-09 418.872 146.758 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
467.772 196.863 mo
467.358 196.863 466.98 196.724 466.636 196.444 cv
466.015 195.989 465.36 195.216 464.674 194.129 cv
454.864 178.581 li
454.276 177.649 454.043 176.702 454.164 175.74 cv
454.284 174.783 454.704 174.113 455.422 173.727 cv
456.014 173.409 456.672 173.25 457.396 173.25 cv
457.983 173.25 458.613 173.355 459.286 173.563 cv
460.79 174.029 462.291 174.758 463.794 175.755 cv
465.299 176.754 466.796 177.757 468.286 178.77 cv
469.776 179.782 471.221 180.551 472.617 181.074 cv
473.334 181.343 473.979 181.477 474.553 181.477 cv
475.097 181.477 475.576 181.357 475.99 181.117 cv
476.161 181.018 476.342 180.788 476.535 180.431 cv
476.728 180.072 476.851 179.728 476.905 179.398 cv
476.959 179.069 476.919 178.628 476.785 178.076 cv
476.652 177.525 476.317 176.846 475.782 176.041 cv
475.248 175.239 474.565 174.668 473.735 174.329 cv
473.177 174.1 472.697 173.986 472.296 173.986 cv
472.1 173.986 471.922 174.014 471.763 174.068 cv
471.012 174.282 li
470.841 174.377 li
470.423 174.61 470.097 174.765 469.863 174.844 cv
469.723 174.892 469.553 174.915 469.354 174.915 cv
469.22 174.915 469.073 174.904 468.913 174.883 cv
468.206 174.76 467.334 173.906 466.301 172.327 cv
465.158 170.58 464.846 169.353 465.361 168.642 cv
465.584 168.354 466.029 168.033 466.693 167.677 cv
467.704 167.134 468.817 166.863 470.036 166.863 cv
471.18 166.863 472.416 167.102 473.746 167.579 cv
476.488 168.563 478.852 170.527 480.857 173.496 cv
482.88 176.491 483.769 179.389 483.509 182.196 cv
483.246 185.039 482.112 187.078 480.094 188.292 cv
479.118 188.879 478.01 189.173 476.77 189.173 cv
476.634 189.173 476.496 189.169 476.356 189.162 cv
474.944 189.09 473.636 188.771 472.437 188.204 cv
469.89 187.012 467.9 185.784 466.472 184.526 cv
465.547 183.715 li
465.399 183.799 li
470.051 191.048 li
470.755 192.143 471.164 192.983 471.278 193.566 cv
471.393 194.151 471.31 194.641 471.027 195.036 cv
470.744 195.432 470.29 195.821 469.663 196.201 cv
469.033 196.582 468.471 196.799 467.978 196.852 cv
467.908 196.859 467.84 196.863 467.772 196.863 cv
level3{
gsave
clp
[-76.4936 38.2468 -38.2468 -76.4936 516.043 162.085 ]ct
/7 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~hLbgbK)jb[!8`;-hLYaaJcOYZ!8W2+h15R^J,nDU!8W/*h1#F\IfS;R!8W)(h0o@[I/r)O!8Mu&gjK1X
I/r&M!8Mr%gj9%VHN;iJ!8Ml#gj/tUGlZWF!8Mi"gNW_QGQ?KC!8D\tgNNYPG6$BA!8D\tgNESOFo^9>
!8DVrgN<MMF9($:!8;Jog2d8JErap7!8;Gng2[2IEWFg6!8;Dmg2R,GDueR1!82;kfl$lDDZJI.!825i
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-76.4936 38.2468 -38.2468 -76.4936 516.043 162.085 ]ct
clp
/7 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~h;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;-oCh;$f@gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?gt^]?
gt^]?gt^]?gt^]?gt^Z=gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;gY:K;
gY:K:g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k97g=k96g"G'3g"G'3
g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3g"G'3f\"j/f\"j/f\"j/f\"j/f\"j/f\"j/
~>
<~JqAT+JqAT+Jq8K(JUrB'JUrB'JUrB'JUrB'JUi9$J:N0#J:E&uIt)rtIt)rtIsuiqIXZ`pIXQWmI=6Nl
I=6NlI=6KjI!g<hI!g<hI!g<hI!g<hI!g9fH[C*dH[C'bH?sm`H?sm`H?sj^H$O[\H$OXZG^+IXG^+IX
G^+IWGB\7TGB\7TGB\7SG'8%PG'8%PG'8%PG'8%PG'8%OF`hhLF`hhKFEDVHFEDVHFEDVGF)uDDF)uDC
EcQ2@EcQ2@EcQ2@EH,u<EH,u<EH,u<EH,u<EH,u<E,]c8E,]c8Df9Q4Df9Q4Df9Q4DJj?0DJj?0D/F-,
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /7 /Gradient get_res exec grestore
}if
np
369.358 194.067 mo
368.141 194.067 366.984 193.731 365.887 193.057 cv
365.047 192.541 364.413 191.752 363.983 190.688 cv
363.553 189.629 363.334 188.71 363.324 187.928 cv
363.306 186.7 li
363.065 186.825 362.76 186.966 362.389 187.125 cv
362.017 187.286 361.357 187.394 360.408 187.451 cv
360.296 187.458 360.186 187.462 360.077 187.462 cv
359.265 187.462 358.547 187.27 357.923 186.887 cv
355.999 185.708 355.06 183.708 355.104 180.898 cv
355.146 178.108 356.014 175.382 357.701 172.719 cv
359.379 170.07 361.454 168.157 363.929 166.969 cv
365.183 166.368 366.371 166.067 367.493 166.067 cv
368.583 166.067 369.612 166.351 370.579 166.918 cv
371.164 167.261 371.639 167.807 372.002 168.552 cv
372.367 169.299 372.581 169.968 372.643 170.559 cv
372.737 171.446 li
373.026 171.283 373.416 171.096 373.907 170.887 cv
374.398 170.677 375.235 170.506 376.418 170.37 cv
376.676 170.341 376.925 170.326 377.166 170.326 cv
378.032 170.326 378.789 170.516 379.439 170.896 cv
381.66 172.196 382.783 174.362 382.799 177.405 cv
382.815 180.472 381.961 183.45 380.228 186.334 cv
378.484 189.237 376.226 191.435 373.455 192.917 cv
372.023 193.684 370.656 194.067 369.358 194.067 cv
374.217 177.995 mo
373.862 177.995 373.467 178.08 373.031 178.252 cv
372.175 178.588 371.378 179.356 370.64 180.558 cv
369.899 181.763 369.565 182.828 369.638 183.749 cv
369.712 184.673 370.028 185.303 370.586 185.641 cv
370.858 185.805 371.168 185.888 371.516 185.888 cv
371.88 185.888 372.286 185.797 372.733 185.615 cv
373.604 185.26 374.414 184.468 375.161 183.24 cv
375.906 182.015 376.223 180.956 376.116 180.06 cv
376.008 179.168 375.681 178.559 375.134 178.234 cv
374.866 178.075 374.56 177.995 374.217 177.995 cv
365.292 173.825 mo
365.026 173.825 364.727 173.893 364.395 174.029 cv
363.764 174.289 363.163 174.875 362.59 175.789 cv
362.016 176.706 361.757 177.484 361.815 178.123 cv
361.873 178.763 362.102 179.204 362.503 179.446 cv
362.694 179.561 362.912 179.619 363.159 179.619 cv
363.434 179.619 363.743 179.548 364.088 179.405 cv
364.741 179.137 365.345 178.555 365.901 177.661 cv
366.454 176.77 366.696 175.993 366.623 175.331 cv
366.55 174.67 366.319 174.224 365.928 173.99 cv
365.743 173.88 365.531 173.825 365.292 173.825 cv
level3{
gsave
clp
[-74.6667 -1.33333 1.33333 -74.6667 416.052 196.763 ]ct
/8 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~lEgQVZiKBu!:$okl*CBSZN06q!9pchl*16QYlO$n!9p]fkcb'NY5mdi!9gQckcOpLXoR[g!9gQckH+aI
XT7Oc!9^E`kGnUGWrV=_!9^?^k,JFDW;u([!9U6\k,A@CVuYtY!9U0Zjei+?VZ>hU!9L'XjeVt=V#]VQ
!9L!VjJ)_9UB'AM!9BmTjJ)_9U&a8K!9BgRjIlS7TE+&G!9BdQjIZG5T)drD!9B^Oj.682ScIfA!99UM
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-74.6667 -1.33333 1.33333 -74.6667 416.052 196.763 ]ct
clp
/8 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~l07Hsl07Hsl07Hsl07Hsl0.?pkih6okih6okih6okih6okih6okih6okih6oki_-lkND$kkND$kkND$k
kND$kkND$kkND$kkND$kkND!ik2tggk2tggk2tggk2tggk2tggk2tggk2tggk2tdejlPUcjlPUcjlPUc
jlPUcjlPUcjlPUcjlPUcjlPUbjQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C_jQ,C^j5]1[j5]1[j5]1[
j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[j5]1[io8tWio8tWio8tW
~>
<~Za7!EZa7!EZa7!EZa7!EZa-mBZEgdAZE^[>Z*CR=Z*:I:Yct@9Yct@9Yck76YHP.5YHG%2Y-+q1Y-"h.
Xf\_-Xf\_-Xf\_-Xf\_-Xf\\+XK8M)XK8J'X/i;%X/i8#WiE)!WiE%tWMukrWMukrWMuhpW2QYnW2QYn
W2QYnW2QYmVl-GjVl-GiVP^5fVP^5fVP^5eV5:#bV5:#aUnjf^Unjf]USFTZUSFTYU8"BVU8"BVU8"BV
U8"BVU8"BVTqS0RTqS0RTV.sNTV.sNT:_aJT:_aJT:_aJSt;OFSt;OFSXl=BSXl=BSXl=BSXl=BS=H+>
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /8 /Gradient get_res exec grestore
}if
np
428.184 277.658 mo
427.361 277.658 426.723 277.619 426.268 277.542 cv
425.815 277.465 425.468 277.376 425.231 277.275 cv
424.992 277.174 424.813 277.007 424.69 276.772 cv
424.569 276.504 424.523 276.085 424.555 275.509 cv
425.398 260.092 li
425.425 259.602 425.468 259.233 425.53 258.985 cv
425.591 258.737 425.76 258.449 426.036 258.121 cv
426.524 257.528 427.808 257.229 429.882 257.229 cv
431.892 257.229 433.106 257.517 433.522 258.089 cv
433.74 258.417 433.855 258.715 433.869 258.985 cv
433.884 259.255 433.859 259.645 433.795 260.156 cv
432.502 270.506 li
433.106 270.187 li
434.373 269.634 435.435 269.356 436.281 269.356 cv
437.129 269.356 437.958 269.67 438.761 270.294 cv
439.556 270.911 439.904 271.451 439.814 271.918 cv
439.724 272.38 439.118 272.881 438.003 273.419 cv
430.67 277.007 li
430.542 277.053 li
429.793 277.457 429.009 277.658 428.184 277.658 cv
level3{
gsave
clp
[3.8049e-09 -84.5532 84.5532 3.8049e-09 418.95 299.333 ]ct
/9 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~fkpfCD?/@,!822hfPCQ?C]N+(!7u#ef4tB;CB2q#!7klbeS,$6B`QXr!7YZ^e7Sd1B)pCm!7GHZdUiL-
AcU4i!7>?Xct!.'A,std!7,-TcXHn"@K=\^!7#!Qc=$^u@0"S\!6nmOc!LIp?NA;V!6eaLb?Y+k>l`#P
!6SOHb$+kf>6)cL!6A@EaBASb=ocTG!684B``N5\=9-?B!6&">`DuuW<WL'=!5qn<_c6]S<<0p9!5hb9
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8049e-09 -84.5532 84.5532 3.8049e-09 418.95 299.333 ]ct
clp
/9 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f\"j/f\"j/f\"j/f\"j/f[na,f@SX+f@SX+f@JO(f%/F'f%&=$e^`4#e^`4#e^W*ueC<!teC2mqe'ldp
e'ldpe'landaHRldaHOjdF$@hdF$@hdF$=fd*U.dd*U+bcd0q`cd0q`cd0n^cHa_\cHa\Zc-=MXc-=MX
c-=MXc-=MXc-=MXc-=MWbfn;Tbfn;SbKJ)PbKJ)PbKJ)Ob0%lLb0%lKaiVZHaiVZHaiVZGaN2HDaN2HC
a2c6@a2c6@a2c6@`l?$<`l?$<`Pog8`Pog8`Pog8`5KU4`5KU4_o'C0_o'C0_o'C0_SX1,_SX1,_SX1,
~>
<~D/F-,D/F-,D/=$)Ci!p(Chmg%CMR^$CMR^$CMR^$CMIU!C2.KuC2%BrBk_9qBkV0nBP;'mBP1sjB4kji
B4kggAnGXeAnGUcAS#FaAS#FaAS#FaAS#C_A7T4]A7T1[@q0"Y@q/tW@U`eU@U`bS@:<SQ@:<PO?smAM
?smAM?smAM?smAL?XI/I?XI/H?=$rE?=$rD?!U`A?!U`@>[1N=>[1N<>?b<9>?b<8>$>*5>$>*5>$>*5
>$>*5=]nm1=]nm1=BJ[-=BJ[-='&I)='&I)<`W7%<`W7%<E3%!<E3%!<E3%!<E3%!<)cgr<)cgr;c?Un
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /9 /Gradient get_res exec grestore
}if
np
415.255 277.727 mo
414.688 277.727 414.065 277.673 413.383 277.566 cv
411.47 277.271 410.48 276.772 410.422 276.061 cv
410.401 275.805 410.472 275.469 410.63 275.049 cv
410.667 274.976 li
412.863 268.675 li
405.678 268.675 li
406.509 275.678 li
406.553 276.045 406.564 276.314 406.544 276.488 cv
406.524 276.661 406.418 276.858 406.227 277.077 cv
406.037 277.294 405.684 277.446 405.167 277.531 cv
404.651 277.615 403.969 277.658 403.118 277.658 cv
402.268 277.658 401.577 277.608 401.046 277.507 cv
400.515 277.407 400.119 277.244 399.86 277.018 cv
399.6 276.791 399.431 276.583 399.355 276.394 cv
399.278 276.204 399.205 275.925 399.135 275.557 cv
396.224 260.187 li
396.066 259.357 396.102 258.737 396.331 258.335 cv
396.562 257.93 396.981 257.661 397.587 257.528 cv
398.195 257.395 398.97 257.329 399.909 257.329 cv
400.849 257.329 401.602 257.384 402.166 257.495 cv
402.731 257.605 403.168 257.738 403.479 257.892 cv
403.787 258.045 404.024 258.263 404.186 258.547 cv
404.423 258.916 404.585 259.474 404.674 260.219 cv
405.119 263.966 li
417.571 263.966 li
419.716 263.966 420.98 264.341 421.361 265.086 cv
421.505 265.396 421.571 265.81 421.558 266.326 cv
421.546 266.838 421.493 267.214 421.398 267.457 cv
417.788 276.108 li
417.628 276.473 417.488 276.748 417.369 276.936 cv
417.249 277.123 417.008 277.302 416.646 277.473 cv
416.284 277.643 415.821 277.727 415.255 277.727 cv
level3{
gsave
clp
[3.8049e-09 -84.5532 84.5532 3.8049e-09 418.95 299.333 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.8049e-09 -84.5532 84.5532 3.8049e-09 418.95 299.333 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
383.201 143.825 mo
382.578 143.825 382.294 143.645 382.347 143.288 cv
382.398 143.02 382.489 142.771 382.619 142.538 cv
382.749 142.307 382.961 141.968 383.255 141.524 cv
389.175 132.571 li
388.69 132.892 li
387.732 133.466 387.025 133.79 386.572 133.859 cv
386.513 133.868 386.457 133.873 386.404 133.873 cv
386.049 133.873 385.821 133.671 385.721 133.271 cv
385.608 132.817 385.693 132.392 385.974 131.993 cv
386.252 131.597 386.822 131.126 387.683 130.579 cv
393.405 126.919 li
393.497 126.868 li
394.104 126.46 394.63 126.219 395.08 126.143 cv
395.424 126.086 395.699 126.057 395.903 126.057 cv
395.966 126.057 396.022 126.059 396.071 126.065 cv
396.282 126.089 396.428 126.132 396.508 126.195 cv
396.589 126.259 396.605 126.384 396.556 126.572 cv
396.49 126.787 396.306 127.139 396.002 127.63 cv
387.766 140.956 li
387.501 141.384 387.288 141.709 387.128 141.929 cv
386.967 142.151 386.728 142.414 386.409 142.72 cv
385.839 143.274 384.988 143.627 383.865 143.775 cv
383.612 143.808 383.391 143.825 383.201 143.825 cv
level3{
gsave
clp
[1 -39.5 39.5 1 375.301 166.577 ]ct
/10 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~lG*em^^KGC$gPJ6lG!\k^C'8@$L5A4lG!Yj^Bs2?$0o83lFmSi^'X)=$0o51lFdJg]a3o:#jT).lFdGf
]Ed`7#O8r,lF[Ae]*IW5#O8o+lFR8c]*@Q3#3rc(lFI/a\cqB1"mWZ&lFI,`\ch<0"R<N#lF@&_\HM3.
"R<K"lF6u^\-)$+"7!AulF-l\[fYj(!p[5rlF$cZ[K5[%!U@)olF$`Y[/oR#!U@&nlEpZXZiKBu!:$ok
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 -39.5 39.5 1 375.301 166.577 ]ct
clp
/10 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
233 <~^V@Ou^V@Ou^V@Ou^V7Fr^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q^:q=q^:h4n]tM+m]tM+m]tM+m
]tM(k]Y(ni]Y(ni]Y(ni]Y(ni]Y(kg]=Y\e]=Y\e]=Y\e]=YYc]"5Ja]"5Ja]"5Ja]"5Ja]"5G_\[f8]
\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8]\[f8\\@B&Y\@B&Y\@B&Y\@B&X\$riU\$riU\$riU\$riU
\$riU[^NWQ[^NWQ[^NWQ[^NWQ[C*EM[C*EM[C*EM[C*EM[C*EM['[3I['[3I['[3I['[3IZa7!EZa7!E
~>
<~$47+I$47+I$47+I$4."F#mgnE#mgnE#mgnE#m^eB#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#RC\A#R:S>
#6tJ=#6tJ=#6tJ=#6tG;"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP89"pP57"U,&5"U,&5"U,&5
"U,&4"9\i1"9\i1"9\i1"9\i0!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W-!s8W,!WiE)!WiE)
!WiE)!WiE)!<E3%!<E3%!<E3%!<E3%zzzzzzzzz!!!!!~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /10 /Gradient get_res exec grestore
}if
np
394.352 142.66 mo
393.586 142.66 392.968 142.521 392.496 142.244 cv
391.838 141.858 391.464 141.331 391.366 140.668 cv
391.271 140.016 391.349 139.228 391.593 138.309 cv
391.993 136.884 392.735 135.282 393.796 133.519 cv
394.734 131.961 395.696 130.642 396.689 129.541 cv
397.66 128.465 398.528 127.617 399.303 126.985 cv
400.067 126.36 400.954 125.8 401.963 125.299 cv
402.967 124.802 403.995 124.465 405.053 124.287 cv
405.53 124.207 405.963 124.166 406.351 124.166 cv
406.828 124.166 407.239 124.227 407.584 124.349 cv
408.215 124.573 408.639 124.917 408.85 125.384 cv
409.064 125.858 409.142 126.454 409.08 127.177 cv
408.973 128.415 408.57 129.821 407.851 131.405 cv
406.493 134.397 404.634 137.022 402.282 139.177 cv
401.38 140.009 400.322 140.746 399.112 141.38 cv
397.892 142.018 396.646 142.422 395.382 142.588 cv
395.013 142.636 394.67 142.66 394.352 142.66 cv
403.503 127.885 mo
403.389 127.885 403.264 127.896 403.129 127.917 cv
401.502 128.18 399.877 129.776 398.157 132.867 cv
396.43 135.97 396.231 137.6 397.656 137.6 cv
397.758 137.6 397.869 137.592 397.988 137.575 cv
399.816 137.317 401.599 135.468 403.232 132.217 cv
403.304 132.074 li
404.729 129.239 404.772 127.885 403.503 127.885 cv
level3{
gsave
clp
[1 -39.5 39.5 1 375.301 166.577 ]ct
/10 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 -39.5 39.5 1 375.301 166.577 ]ct
clp
/10 /Gradient get_res exec grestore
}if
np
443.521 142.391 mo
443.305 142.391 443.051 142.37 442.757 142.327 cv
441.715 142.176 440.973 141.866 440.544 141.398 cv
440.306 141.129 440.133 140.889 440.023 140.677 cv
439.914 140.465 439.779 140.16 439.619 139.761 cv
436.024 130.799 li
435.794 131.025 li
435.389 131.303 434.982 131.442 434.575 131.442 cv
434.448 131.442 434.321 131.429 434.195 131.402 cv
433.657 131.287 432.97 130.865 432.13 130.131 cv
431.283 129.39 430.762 128.781 430.571 128.309 cv
430.38 127.836 430.52 127.402 430.986 127.008 cv
434.05 124.348 li
434.112 124.319 li
434.314 124.104 434.575 123.997 434.894 123.997 cv
435.043 123.997 435.204 124.021 435.378 124.067 cv
435.92 124.212 436.356 124.365 436.688 124.528 cv
437.019 124.69 437.283 124.845 437.483 124.994 cv
437.682 125.143 437.873 125.351 438.058 125.621 cv
438.254 125.923 438.471 126.37 438.706 126.96 cv
444.106 140.527 li
444.253 140.898 444.351 141.173 444.4 141.353 cv
444.449 141.534 444.456 141.735 444.423 141.957 cv
444.383 142.246 444.084 142.391 443.521 142.391 cv
level3{
gsave
clp
[2.24442e-09 49.9908 -49.9908 2.24442e-09 462.244 108.296 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.24442e-09 49.9908 -49.9908 2.24442e-09 462.244 108.296 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
457.453 144.429 mo
457.299 144.429 457.123 144.415 456.926 144.386 cv
448.553 143.169 li
448 143.089 447.437 142.808 446.863 142.323 cv
446.285 141.834 445.881 141.303 445.654 140.731 cv
445.314 139.873 445.299 139.133 445.609 138.516 cv
445.915 137.904 446.381 137.421 447.001 137.067 cv
447.615 136.718 448.224 136.38 448.829 136.053 cv
449.428 135.731 449.88 135.324 450.191 134.833 cv
450.499 134.346 450.519 133.764 450.254 133.086 cv
450.2 132.949 450.074 132.745 449.875 132.473 cv
449.676 132.199 449.482 131.969 449.296 131.78 cv
449.108 131.591 448.855 131.396 448.535 131.196 cv
448.213 130.994 447.813 130.836 447.331 130.72 cv
447.188 130.686 447.057 130.669 446.937 130.669 cv
446.65 130.669 446.431 130.767 446.277 130.964 cv
446.059 131.244 445.998 131.559 446.092 131.907 cv
446.212 132.424 li
446.267 132.564 li
446.402 132.907 446.492 133.161 446.536 133.328 cv
446.58 133.494 446.584 133.673 446.547 133.864 cv
446.496 134.062 446.277 134.162 445.89 134.162 cv
445.644 134.162 445.328 134.122 444.943 134.04 cv
443.826 133.805 443.035 133.36 442.581 132.705 cv
442.397 132.43 442.194 132.011 441.97 131.447 cv
441.305 129.77 441.324 128.415 442.021 127.397 cv
442.475 126.733 443.197 126.405 444.176 126.405 cv
444.674 126.405 445.24 126.49 445.871 126.659 cv
447.689 127.147 449.373 128.163 450.938 129.694 cv
452.473 131.197 453.535 132.722 454.144 134.289 cv
454.468 135.122 454.604 135.874 454.555 136.549 cv
454.504 137.226 454.328 137.747 454.025 138.109 cv
453.379 138.891 452.71 139.384 452.02 139.581 cv
451.57 139.711 li
451.615 139.824 li
455.45 140.498 li
456.003 140.595 456.421 140.733 456.708 140.911 cv
456.992 141.089 457.229 141.325 457.417 141.619 cv
457.605 141.914 457.786 142.286 457.962 142.74 cv
458.138 143.192 458.236 143.548 458.257 143.808 cv
458.278 144.068 458.211 144.234 458.054 144.305 cv
457.915 144.388 457.714 144.429 457.453 144.429 cv
level3{
gsave
clp
[2.24442e-09 49.9908 -49.9908 2.24442e-09 462.244 108.296 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.24442e-09 49.9908 -49.9908 2.24442e-09 462.244 108.296 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
345.326 239.313 mo
345.178 239.313 345.007 239.262 344.813 239.161 cv
341.309 237.391 li
341.251 237.342 li
340.849 237.187 340.534 236.786 340.307 236.136 cv
340.08 235.486 339.924 234.94 339.838 234.5 cv
339.753 234.06 339.703 233.694 339.689 233.403 cv
339.676 233.111 339.713 232.8 339.8 232.467 cv
339.903 232.105 340.103 231.657 340.399 231.123 cv
346.848 219.481 li
347.016 219.178 347.145 218.968 347.239 218.85 cv
347.331 218.731 347.458 218.657 347.619 218.626 cv
347.632 218.624 347.645 218.622 347.658 218.622 cv
347.937 218.622 348.276 219.25 348.676 220.499 cv
349.079 221.76 349.238 222.709 349.153 223.355 cv
349.1 223.715 349.035 223.992 348.956 224.188 cv
348.878 224.385 348.755 224.643 348.585 224.963 cv
344.651 232.388 li
344.924 232.532 li
345.442 232.932 345.799 233.428 345.997 234.021 cv
346.195 234.613 346.272 235.48 346.227 236.627 cv
346.182 237.777 346.058 238.551 345.856 238.949 cv
345.733 239.191 345.557 239.313 345.326 239.313 cv
level3{
gsave
clp
[-27.9301 11.323 -11.323 -27.9301 346.764 202.439 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-27.9301 11.323 -11.323 -27.9301 346.764 202.439 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
339.825 224.775 mo
339.531 224.775 339.232 224.732 338.928 224.646 cv
337.014 224.105 335.297 221.71 333.799 217.413 cv
333.493 216.536 333.312 215.824 333.257 215.283 cv
333.202 214.74 333.237 214.264 333.361 213.856 cv
333.486 213.449 333.679 213.041 333.94 212.634 cv
334.201 212.23 334.427 211.969 334.618 211.849 cv
334.764 211.757 334.894 211.712 335.007 211.712 cv
335.041 211.712 335.074 211.717 335.106 211.725 cv
335.241 211.763 335.377 211.903 335.513 212.146 cv
335.699 212.454 335.952 213.075 336.27 214.01 cv
336.588 214.941 336.955 215.743 337.37 216.414 cv
337.783 217.082 338.157 217.522 338.491 217.733 cv
338.916 217.99 339.275 218.117 339.568 218.117 cv
339.739 218.117 339.888 218.074 340.015 217.987 cv
340.242 217.863 li
339.83 217.284 339.486 216.583 339.21 215.765 cv
338.468 213.559 338.104 211.214 338.122 208.752 cv
338.14 206.296 338.492 204.543 339.17 203.496 cv
339.683 202.705 340.24 202.313 340.842 202.313 cv
341.21 202.313 341.595 202.46 341.996 202.751 cv
343.037 203.508 343.909 205.002 344.619 207.225 cv
345.507 210.005 345.863 212.609 345.694 215.071 cv
345.523 217.548 344.943 219.67 343.94 221.449 cv
342.699 223.653 341.329 224.775 339.825 224.775 cv
341.707 208.8 mo
341.526 208.8 341.345 208.946 341.165 209.238 cv
340.981 209.536 340.872 210.009 340.838 210.657 cv
340.805 211.305 340.928 212.054 341.207 212.899 cv
341.485 213.741 341.771 214.262 342.065 214.462 cv
342.194 214.55 342.309 214.594 342.41 214.594 cv
342.537 214.594 342.642 214.524 342.725 214.384 cv
342.873 214.134 342.977 213.916 343.036 213.731 cv
343.096 213.546 343.148 213.3 343.191 212.993 cv
343.271 212.392 343.135 211.552 342.782 210.467 cv
342.421 209.357 342.062 208.8 341.707 208.8 cv
level3{
gsave
clp
[-27.9301 11.323 -11.323 -27.9301 346.764 202.439 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-27.9301 11.323 -11.323 -27.9301 346.764 202.439 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
501.985 224.673 mo
501.91 224.673 501.831 224.646 501.746 224.591 cv
501.561 224.453 501.315 224.125 501.009 223.605 cv
494.332 212.27 li
494.159 211.977 494.035 211.741 493.959 211.563 cv
493.883 211.386 493.817 211.117 493.76 210.759 cv
493.654 210.122 493.819 209.125 494.256 207.761 cv
494.682 206.431 495.046 205.762 495.348 205.76 cv
495.519 205.772 495.657 205.84 495.764 205.962 cv
495.871 206.085 496.016 206.297 496.202 206.597 cv
500.515 213.57 li
500.511 212.892 li
500.559 211.559 500.693 210.569 500.911 209.918 cv
501.13 209.265 501.507 208.814 502.046 208.563 cv
502.27 208.459 502.467 208.407 502.639 208.407 cv
502.884 208.407 503.076 208.513 503.215 208.726 cv
503.451 209.089 503.569 209.901 503.568 211.162 cv
503.593 219.875 li
503.584 220.019 li
503.608 220.982 503.501 221.808 503.261 222.494 cv
503.022 223.178 502.815 223.673 502.639 223.98 cv
502.462 224.286 502.312 224.491 502.186 224.596 cv
502.124 224.648 502.057 224.673 501.985 224.673 cv
level3{
gsave
clp
[-36.8404 -13.8693 13.8693 -36.8404 517.296 212.704 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-36.8404 -13.8693 13.8693 -36.8404 517.296 212.704 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
495.205 240.76 mo
494.484 240.76 493.836 240.19 493.259 239.057 cv
493.035 238.616 492.857 238.021 492.725 237.277 cv
492.594 236.535 492.52 235.897 492.504 235.364 cv
492.479 234.564 li
492.367 234.647 492.215 234.728 492.025 234.807 cv
491.954 234.837 491.864 234.852 491.756 234.852 cv
491.577 234.852 491.348 234.811 491.07 234.73 cv
490.627 234.6 490.257 234.241 489.96 233.654 cv
489.176 232.105 488.813 230.07 488.863 227.536 cv
488.913 225.006 489.267 222.713 489.931 220.638 cv
490.601 218.544 491.449 217.089 492.484 216.276 cv
492.862 215.978 493.229 215.829 493.583 215.829 cv
494.213 215.829 494.804 216.301 495.355 217.254 cv
495.679 217.814 495.922 218.578 496.085 219.548 cv
496.248 220.521 496.329 221.346 496.327 222.02 cv
496.326 223.083 li
496.423 223.017 496.547 222.947 496.697 222.873 cv
496.758 222.843 496.837 222.828 496.934 222.828 cv
497.081 222.828 497.27 222.862 497.502 222.93 cv
497.891 223.044 498.232 223.354 498.524 223.862 cv
499.328 225.258 499.723 227.232 499.701 229.773 cv
499.68 232.32 499.302 234.646 498.572 236.731 cv
497.849 238.798 496.966 240.078 495.931 240.579 cv
495.681 240.7 495.439 240.76 495.205 240.76 cv
496.167 229.273 mo
496.102 229.273 496.033 229.288 495.96 229.319 cv
495.696 229.428 495.449 229.823 495.22 230.501 cv
494.991 231.176 494.888 231.814 494.911 232.415 cv
494.934 233.017 495.022 233.463 495.177 233.754 cv
495.293 233.973 495.439 234.082 495.613 234.082 cv
495.67 234.082 495.731 234.07 495.795 234.046 cv
496.054 233.948 496.303 233.55 496.543 232.848 cv
496.784 232.144 496.896 231.498 496.876 230.914 cv
496.856 230.329 496.765 229.889 496.602 229.594 cv
496.485 229.38 496.34 229.273 496.167 229.273 cv
492.936 222.356 mo
492.85 222.356 492.758 222.379 492.662 222.423 cv
492.331 222.577 492.019 223.105 491.725 224.007 cv
491.432 224.905 491.299 225.737 491.326 226.508 cv
491.353 227.28 491.466 227.855 491.665 228.231 cv
491.814 228.514 492 228.656 492.221 228.656 cv
492.295 228.656 492.373 228.64 492.456 228.608 cv
492.785 228.48 493.098 227.969 493.395 227.074 cv
493.694 226.175 493.834 225.323 493.815 224.523 cv
493.797 223.724 493.683 223.136 493.474 222.757 cv
493.326 222.49 493.147 222.356 492.936 222.356 cv
level3{
gsave
clp
[-36.8404 -13.8693 13.8693 -36.8404 517.296 212.704 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-36.8404 -13.8693 13.8693 -36.8404 517.296 212.704 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
477.007 272.918 mo
477.002 272.918 476.996 272.918 476.991 272.918 cv
476.753 272.916 476.416 272.888 475.978 272.833 cv
460.226 271.022 li
459.304 270.908 458.701 270.736 458.424 270.509 cv
458.149 270.282 458.112 269.986 458.31 269.624 cv
458.505 269.267 458.847 268.845 459.33 268.361 cv
459.802 267.887 460.224 267.528 460.6 267.277 cv
460.972 267.029 461.3 266.849 461.585 266.735 cv
461.869 266.621 462.177 266.556 462.511 266.538 cv
462.617 266.53 462.731 266.525 462.852 266.525 cv
463.243 266.525 463.715 266.568 464.27 266.652 cv
467.132 267.088 li
471.349 261.896 li
471.969 261.133 472.63 260.756 473.346 260.741 cv
473.352 260.741 473.357 260.741 473.363 260.741 cv
473.654 260.741 474.008 260.783 474.424 260.865 cv
474.847 260.949 475.148 261.025 475.328 261.096 cv
482.141 263.882 li
482.447 264.012 482.677 264.117 482.83 264.2 cv
482.983 264.283 483.106 264.414 483.2 264.595 cv
483.295 264.777 483.29 264.988 483.185 265.23 cv
483.078 265.475 482.907 265.737 482.669 266.019 cv
482.075 266.732 481.457 267.099 480.826 267.099 cv
480.737 267.099 480.647 267.091 480.557 267.077 cv
480.298 267.034 479.98 266.932 479.603 266.772 cv
479.539 266.74 li
474.128 264.55 li
471.901 267.813 li
478.17 268.679 li
478.562 268.739 478.845 268.793 479.022 268.843 cv
479.198 268.892 479.378 268.992 479.562 269.142 cv
479.747 269.292 479.823 269.516 479.79 269.814 cv
479.757 270.116 479.637 270.506 479.426 270.989 cv
479.21 271.482 478.975 271.877 478.722 272.171 cv
478.466 272.468 478.173 272.668 477.845 272.769 cv
477.521 272.868 477.242 272.918 477.007 272.918 cv
level3{
gsave
clp
[-12.3333 -24.3333 24.3333 -12.3333 467.126 292.895 ]ct
/11 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/Range[0 1 0 1 0 1 ] 
/FunctionType 0
/Order 1 
/DataSource <~fkpfCD#i7+!82/gfPCQ?C]N(&!7trcenP39B`Q^t!7b]^eRnm3AcU=m!7PN[dq&O-A,t%g!7G?Wd:*+'
@K=b`!75-ScX?h"?i\JZ!7"pOc<^Lr>l`/U!6naKc!(1l>6)lO!6\OGb?4hg=THTH!6S@Ca]AJa<WL3A
!6A1@a&N,[;ujs<!6.q;`_lfU;?4[5!5q\6`)$HO:]SC/!5hP3_bL3L9`W%(!5_D0_+OdE9)ub#!5M2,
~>
/BitsPerSample 8 
/Encode [0 63 ]
/Decode [0 1 0 1 0 1 ]
/Size [64 ]
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-12.3333 -24.3333 24.3333 -12.3333 467.126 292.895 ]ct
clp
/11 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~f\"j/f\"j/f\"j/f\"j/f[na,f@SX+f@JO(f%/F'f%&=$e^`4#e^`4#e^W*ueC<!teC2mqe'ldpe'c[m
daHRldaHOjdF$@hdF$@hdF$=fd*U.dd*U+bcd0q`cd0n^cHa_\cHa\Zc-=MXc-=MXc-=MXc-=MXc-=JV
bfn;Tbfn;SbKJ)PbKJ)Ob0%lLb0%lLb0%lKaiVZHaiVZGaN2HDaN2HCa2c6@a2c6?`l?$<`l?$<`l?$;
`Pog8`Pog8`5KU4`5KU4_o'C0_o'C0_SX1,_SX1,_SX1,_SX1,_SX1,_83t(_83t(^qdb$^qdb$^V@Ou
~>
<~D/F-,D/=$)Ci!p(Chmg%CMR^$CMR^$CMIU!C2%BrBk_9qBkV0nBP1sjB4bafAnGXeAn>ObAS#FaAS#Fa
AS#C_A7T1[@q0"Y@q/tW@U`bS@:<SQ@:<PO?smAM?smAM?sm>K?XI,G?=$rE?=$oC?!U]?>[1N=>[1K;
>?b<8>$>*5>$>*5>$>*4=]nm0=BJ[-=BJ[,='&I(<`W7%<`W7$<E3%!<E3%!<E3$u<)cgq;c?Un;c?Um
;GpCj;,L1f;,L1f:f'tb:JXb^:JXb^:JXb^:/4PZ9he>V9he>V9MA,R91qoN91qoN8kM]J8kM]J8kM]J
~>
0 ]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /11 /Gradient get_res exec grestore
}if
np
368.768 275.826 mo
368.705 275.826 368.641 275.825 368.575 275.824 cv
365.368 275.762 362.23 274.531 359.305 272.339 cv
356.703 270.389 354.871 267.973 353.713 265.205 cv
353.496 264.685 353.391 264.309 353.395 264.067 cv
353.4 263.828 353.486 263.66 353.654 263.562 cv
353.822 263.463 354.061 263.397 354.372 263.365 cv
354.504 263.351 354.627 263.344 354.742 263.344 cv
354.9 263.344 355.041 263.357 355.167 263.383 cv
355.385 263.43 355.566 263.494 355.71 263.576 cv
355.856 263.658 355.994 263.785 356.124 263.955 cv
356.305 264.18 356.536 264.578 356.82 265.157 cv
357.112 265.753 357.487 266.339 357.95 266.918 cv
358.428 267.514 358.89 267.991 359.333 268.34 cv
360.261 269.061 361.012 269.512 361.564 269.672 cv
361.931 269.795 li
361.336 269.147 360.873 268.513 360.536 267.891 cv
359.677 266.304 359.39 264.996 359.625 263.912 cv
359.854 262.861 360.457 262.294 361.455 262.185 cv
361.621 262.167 361.79 262.158 361.962 262.158 cv
363.092 262.158 364.353 262.553 365.785 263.375 cv
367.551 264.39 369.125 265.769 370.491 267.562 cv
372.382 270.044 373.198 272.109 372.772 273.586 cv
372.345 275.068 370.984 275.826 368.768 275.826 cv
364.178 266.012 mo
364.132 266.012 364.085 266.014 364.039 266.017 cv
363.722 266.04 363.516 266.201 363.418 266.502 cv
363.32 266.806 363.466 267.278 363.866 267.931 cv
364.278 268.603 364.738 269.125 365.243 269.489 cv
365.746 269.851 366.146 270.035 366.435 270.035 cv
366.442 270.035 366.45 270.035 366.457 270.035 cv
366.75 270.025 366.959 269.994 367.082 269.941 cv
367.207 269.888 367.318 269.791 367.416 269.651 cv
367.598 269.374 367.374 268.772 366.765 267.872 cv
365.916 266.616 365.061 266.012 364.178 266.012 cv
level3{
gsave
clp
[14 -28.6667 28.6667 14 369.368 296.141 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14 -28.6667 28.6667 14 369.368 296.141 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
381.468 275.877 mo
381.44 275.877 381.413 275.877 381.385 275.876 cv
380.049 275.853 378.526 275.271 377.987 274.598 cv
368.145 262.328 li
367.833 261.939 368.298 261.549 369.185 261.453 cv
369.322 261.438 369.462 261.431 369.602 261.431 cv
370.385 261.431 371.173 261.653 371.472 261.989 cv
382.741 274.634 li
383.352 275.32 382.774 275.877 381.468 275.877 cv
level3{
gsave
clp
[14 -28.6667 28.6667 14 369.368 296.141 ]ct
/11 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[14 -28.6667 28.6667 14 369.368 296.141 ]ct
clp
/11 /Gradient get_res exec grestore
}if
np
414.441 222.505 mo
415.643 222.505 416.501 222.645 417.014 222.923 cv
417.528 223.203 417.873 223.627 418.049 224.2 cv
418.224 224.772 418.313 225.519 418.313 226.444 cv
418.313 227.368 418.218 228.109 418.027 228.665 cv
417.836 229.223 417.521 229.605 417.081 229.809 cv
416.435 230.162 415.525 230.337 414.352 230.337 cv
397.149 230.337 li
396.093 230.337 395.184 229.942 394.421 229.15 cv
393.658 228.358 393.277 227.433 393.277 226.377 cv
393.277 224.793 393.827 223.335 394.927 222 cv
396.027 220.665 397.353 219.521 398.909 218.568 cv
400.464 217.615 402.017 216.675 403.573 215.751 cv
405.127 214.828 406.455 213.779 407.555 212.606 cv
408.655 211.433 409.205 210.185 409.205 208.866 cv
409.205 208.601 409.101 208.227 408.897 207.744 cv
408.691 207.259 408.464 206.864 408.215 206.555 cv
407.966 206.247 407.577 205.961 407.049 205.698 cv
406.521 205.433 405.787 205.301 404.848 205.301 cv
403.91 205.301 403.096 205.647 402.407 206.335 cv
401.718 207.025 401.329 207.708 401.241 208.381 cv
401.065 209.393 li
401.065 209.658 li
401.065 210.303 401.043 210.787 400.999 211.11 cv
400.955 211.433 400.815 211.799 400.581 212.21 cv
400.141 212.914 398.997 213.265 397.149 213.265 cv
395.096 213.265 393.878 212.708 393.497 211.593 cv
393.349 211.125 393.277 210.376 393.277 209.349 cv
393.277 206.299 394.369 203.564 396.555 201.143 cv
398.74 198.723 401.599 197.513 405.135 197.513 cv
408.67 197.513 411.537 198.739 413.737 201.188 cv
415.936 203.637 417.037 206.431 417.037 209.57 cv
417.037 211.242 416.67 212.826 415.936 214.322 cv
415.203 215.818 414.323 217.021 413.297 217.929 cv
411.126 219.866 409.189 221.171 407.489 221.845 cv
406.389 222.286 li
406.389 222.505 li
414.441 222.505 li
cp
1 1 1 rgb
f
432.305 223.034 mo
435.326 223.034 436.837 220.159 436.837 214.41 cv
436.837 214.146 li
436.837 208.25 435.341 205.301 432.348 205.301 cv
429.356 205.301 427.861 208.257 427.861 214.168 cv
427.861 220.079 429.342 223.034 432.305 223.034 cv
cp
423.417 201.715 mo
424.267 200.528 425.463 199.531 427.003 198.723 cv
428.543 197.918 430.325 197.513 432.348 197.513 cv
434.373 197.513 436.139 197.91 437.651 198.702 cv
439.161 199.494 440.349 200.477 441.215 201.65 cv
442.08 202.823 442.777 204.202 443.305 205.786 cv
444.184 208.425 444.625 211.227 444.625 214.19 cv
444.625 219.5 443.48 223.708 441.193 226.818 cv
440.342 227.991 439.161 228.96 437.651 229.721 cv
436.139 230.484 434.388 230.866 432.392 230.866 cv
430.397 230.866 428.631 230.476 427.091 229.7 cv
425.551 228.922 424.348 227.961 423.482 226.818 cv
422.617 225.673 421.906 224.309 421.348 222.725 cv
420.498 220.203 420.073 217.343 420.073 214.146 cv
420.073 211.212 420.417 208.705 421.106 206.622 cv
421.796 204.54 422.565 202.904 423.417 201.715 cv
cp
f
468.801 191.423 mo
469.505 192.518 469.914 193.358 470.029 193.941 cv
470.143 194.526 470.06 195.016 469.777 195.411 cv
469.494 195.807 469.04 196.196 468.413 196.576 cv
467.783 196.957 467.221 197.174 466.728 197.227 cv
466.233 197.28 465.785 197.145 465.386 196.819 cv
464.765 196.364 464.11 195.591 463.424 194.504 cv
453.614 178.956 li
453.026 178.024 452.793 177.077 452.914 176.115 cv
453.034 175.158 453.454 174.488 454.172 174.102 cv
455.244 173.527 456.531 173.473 458.036 173.938 cv
459.54 174.404 461.041 175.133 462.544 176.13 cv
464.049 177.129 465.546 178.132 467.035 179.145 cv
468.526 180.157 469.971 180.926 471.367 181.449 cv
472.762 181.972 473.888 181.985 474.74 181.492 cv
474.911 181.393 475.092 181.163 475.285 180.806 cv
475.478 180.447 475.601 180.103 475.655 179.773 cv
475.709 179.444 475.669 179.003 475.535 178.451 cv
475.402 177.9 475.067 177.221 474.532 176.417 cv
473.998 175.614 473.315 175.043 472.485 174.704 cv
471.654 174.363 470.996 174.277 470.513 174.443 cv
469.762 174.657 li
469.591 174.752 li
469.173 174.985 468.847 175.14 468.613 175.219 cv
468.378 175.298 468.061 175.311 467.663 175.258 cv
466.956 175.135 466.084 174.281 465.051 172.702 cv
463.908 170.955 463.596 169.728 464.111 169.017 cv
464.334 168.729 464.779 168.408 465.443 168.052 cv
467.403 167 469.75 166.969 472.496 167.954 cv
475.238 168.938 477.602 170.902 479.607 173.871 cv
481.63 176.866 482.519 179.764 482.259 182.571 cv
481.996 185.414 480.862 187.453 478.844 188.667 cv
477.761 189.318 476.515 189.609 475.106 189.537 cv
473.694 189.465 472.386 189.146 471.187 188.579 cv
468.64 187.387 466.65 186.159 465.222 184.901 cv
464.297 184.09 li
464.149 184.174 li
468.801 191.423 li
cp
1 .996078 .823529 rgb
f
367.25 175.116 mo
366.859 174.883 366.348 174.897 365.717 175.155 cv
365.087 175.415 364.485 176.001 363.913 176.915 cv
363.339 177.832 363.079 178.61 363.138 179.249 cv
363.195 179.889 363.425 180.33 363.826 180.572 cv
364.228 180.815 364.756 180.801 365.41 180.531 cv
366.063 180.263 366.668 179.681 367.224 178.787 cv
367.777 177.896 368.018 177.119 367.945 176.457 cv
367.873 175.796 367.642 175.35 367.25 175.116 cv
cp
374.055 186.741 mo
374.927 186.386 375.736 185.594 376.483 184.366 cv
377.228 183.141 377.546 182.082 377.438 181.186 cv
377.33 180.294 377.004 179.685 376.457 179.36 cv
375.911 179.035 375.21 179.041 374.354 179.378 cv
373.497 179.714 372.701 180.482 371.962 181.684 cv
371.222 182.889 370.887 183.953 370.961 184.875 cv
371.035 185.799 371.35 186.429 371.909 186.766 cv
372.467 187.104 373.183 187.096 374.055 186.741 cv
cp
380.761 172.022 mo
382.983 173.322 384.105 175.488 384.122 178.531 cv
384.138 181.598 383.284 184.576 381.551 187.46 cv
379.807 190.363 377.548 192.561 374.778 194.043 cv
372.002 195.529 369.476 195.575 367.21 194.183 cv
366.37 193.667 365.736 192.878 365.305 191.814 cv
364.876 190.755 364.656 189.836 364.647 189.054 cv
364.628 187.826 li
364.388 187.951 364.083 188.092 363.711 188.251 cv
363.34 188.411 362.68 188.52 361.731 188.577 cv
360.783 188.636 359.954 188.447 359.245 188.013 cv
357.321 186.834 356.383 184.834 356.426 182.024 cv
356.469 179.234 357.336 176.508 359.023 173.845 cv
360.701 171.196 362.776 169.283 365.252 168.095 cv
367.723 166.91 369.937 166.892 371.902 168.044 cv
372.487 168.387 372.961 168.933 373.324 169.678 cv
373.689 170.425 373.903 171.094 373.965 171.685 cv
374.06 172.572 li
374.348 172.409 374.738 172.222 375.23 172.013 cv
375.721 171.803 376.558 171.632 377.74 171.496 cv
378.924 171.361 379.93 171.536 380.761 172.022 cv
cp
1 1 1 rgb
f
430.542 275.491 mo
429.793 275.894 429.009 276.096 428.184 276.096 cv
427.361 276.096 426.723 276.057 426.268 275.98 cv
425.815 275.902 425.468 275.814 425.231 275.713 cv
424.992 275.611 424.813 275.444 424.69 275.209 cv
424.569 274.942 424.523 274.522 424.555 273.947 cv
425.398 258.53 li
425.425 258.04 425.468 257.67 425.53 257.423 cv
425.591 257.175 425.76 256.887 426.036 256.559 cv
426.524 255.965 427.808 255.667 429.882 255.667 cv
431.892 255.667 433.106 255.954 433.522 256.526 cv
433.74 256.854 433.855 257.152 433.869 257.423 cv
433.884 257.692 433.859 258.083 433.796 258.593 cv
432.502 268.944 li
433.107 268.625 li
434.373 268.072 435.435 267.793 436.281 267.793 cv
437.129 267.793 437.958 268.107 438.762 268.731 cv
439.556 269.348 439.904 269.889 439.814 270.355 cv
439.724 270.818 439.118 271.318 438.003 271.856 cv
430.67 275.444 li
430.542 275.491 li
cp
level3{
gsave
clp
[3.57407e-09 -79.4237 79.4237 3.57407e-09 432.186 323 ]ct
/12 
<<
/ShadingType 2 
/ColorSpace /0 /CSA get_res
/Coords [0 0 1 0 ]
/Domain [0 1 ]
/Extend[ true true]
/Function
<<
/Domain[0 1 ] 
/FunctionType 3
/Functions [
<<
/Domain[0 1 ] 
/FunctionType 2
/C0 [1 .996078 .811765 ]
/C1 [.968627 .752941 .486275 ]
/N 1 
>>
]
/Bounds []
/Encode [0 1 ]
>>
>>/Gradient add_res /12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.57407e-09 -79.4237 79.4237 3.57407e-09 432.186 323 ]ct
clp
/12 {
/0 /CSA get_res setcolorspace
<<
/NumSamples 256 
/NumComp 3 
/Scaling[[.00392157 0 ][.00392157 0 ][.00392157 0 ]]
/Samples[
<~s8N#srr2orrr2orrr2orrr2orrr2orrr2orrr2orrr)forVc]nrVc]nrVc]nrVc]nrVc]nrVc]nrVc]n
rVZTkr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;?Kjr;6Bgqtp9fqtp9fqtp9fqtp9fqtp9fqtp9fqtp9f
qtg0cqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYL'bqYBs_q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^q>'j^
q=sa[q"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"XXZq"OOWp\4FVp\4FVp\4FVp\4FVp\4FVp\4FVp\4FV
~>
<~rr)forVZTkr;6Bgqtg0cqYBs_q=sa[q"OOWp\+=Sp@e1Pp%@tLo^qbHoCMPDo()>@naZ,<nF5o8n*f]4
mdBN1mHs<-m-O*)lg*m%lK[[!l07Hrkih6nkND$jk2tggjlPUcjQ,C_j5]1[io8tWiSibSi8EPOhr!>K
hqm5HhVI#Dh;$f@gtUT<gY1B8g=b04g"=s0f[na,f@SU)f%/C%e^`1!eC;sre'landaHOjdF$=fd*U+b
cd0q_cHa_[c-=MWbfn;SbKJ)Ob0%lKaiVZGaN2HCa2c6@`l?$<`Pog8`5KU4_o'C0_SX1,_83t(^qdb$
~>
<~cd'h]c-=MWbfn8RbK@uMaiVZGaN2EBa2Z-=`Pog7`5KR2_o'@._SO()^qdb#^V@Ls^:h4n]Y(nh]=YYc
]",A^\@B&X\$riT[^NTO[C!<JZa7!DZEga?Z*:I:YHP.4Y-+n/XfSV*X/i;%WiE(uWMuhpW2HPkVP^5e
V59u`Una][U8"BUTqS-PTV%jKT:VXGSXl=AS=H(<S!oe7R@0J1R$a5,Q^3r'Q'IW!Pa%AqPEV/mP*(lh
OH>QbO,o<]NfB$XN/W^RMi3IMMM[1HLkpkBLPLY>L5(D9KnP,4K7ef.JqAQ)JUi9$It)rsIXZ]nI=-Ei
~>
]
>>
0 0 1 0 []true true []
/DeviceRGB
GenStrips
} /Gradient add_res /12 /Gradient get_res exec grestore
}if
np
406.227 275.514 mo
406.037 275.732 405.684 275.883 405.167 275.968 cv
404.651 276.053 403.969 276.096 403.118 276.096 cv
402.267 276.096 401.577 276.045 401.046 275.945 cv
400.515 275.844 400.119 275.681 399.86 275.456 cv
399.6 275.229 399.431 275.021 399.355 274.831 cv
399.278 274.642 399.205 274.363 399.135 273.995 cv
396.224 258.625 li
396.066 257.795 396.102 257.175 396.331 256.772 cv
396.562 256.367 396.981 256.098 397.587 255.965 cv
398.195 255.833 398.97 255.766 399.909 255.766 cv
400.849 255.766 401.602 255.822 402.166 255.932 cv
402.731 256.042 403.168 256.175 403.479 256.329 cv
403.787 256.482 404.024 256.701 404.186 256.985 cv
404.423 257.353 404.585 257.912 404.674 258.656 cv
405.119 262.404 li
417.571 262.404 li
419.716 262.404 420.98 262.779 421.361 263.523 cv
421.505 263.833 421.571 264.248 421.558 264.764 cv
421.546 265.275 421.493 265.652 421.398 265.895 cv
417.788 274.546 li
417.628 274.91 417.488 275.186 417.368 275.373 cv
417.249 275.561 417.008 275.74 416.646 275.91 cv
416.284 276.08 415.821 276.165 415.255 276.165 cv
414.688 276.165 414.064 276.111 413.383 276.003 cv
411.47 275.709 410.48 275.209 410.422 274.498 cv
410.402 274.243 410.472 273.907 410.63 273.487 cv
410.667 273.414 li
412.863 267.112 li
405.678 267.112 li
406.509 274.115 li
406.553 274.482 406.564 274.752 406.544 274.926 cv
406.523 275.099 406.418 275.295 406.227 275.514 cv
cp
level3{
gsave
clp
[3.57407e-09 -79.4237 79.4237 3.57407e-09 408.844 323 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[3.57407e-09 -79.4237 79.4237 3.57407e-09 408.844 323 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
394.122 127.45 mo
394.729 127.042 395.255 126.801 395.705 126.726 cv
396.155 126.65 396.485 126.624 396.696 126.647 cv
396.907 126.671 397.053 126.714 397.133 126.777 cv
397.214 126.841 397.23 126.966 397.181 127.154 cv
397.115 127.37 396.931 127.721 396.627 128.212 cv
388.391 141.538 li
388.126 141.966 387.913 142.292 387.753 142.512 cv
387.592 142.733 387.353 142.996 387.035 143.302 cv
386.464 143.856 385.613 144.209 384.49 144.357 cv
383.407 144.5 382.903 144.336 382.972 143.871 cv
383.023 143.603 383.114 143.353 383.244 143.121 cv
383.374 142.889 383.586 142.55 383.88 142.106 cv
389.8 133.153 li
389.315 133.474 li
388.358 134.048 387.65 134.372 387.197 134.442 cv
386.745 134.511 386.461 134.313 386.346 133.853 cv
386.233 133.399 386.318 132.974 386.599 132.575 cv
386.877 132.179 387.447 131.708 388.308 131.162 cv
394.03 127.501 li
394.122 127.45 li
cp
1 1 1 rgb
f
398.613 138.157 mo
400.441 137.899 402.224 136.05 403.857 132.799 cv
403.929 132.656 li
405.482 129.566 405.393 128.235 403.754 128.5 cv
402.127 128.762 400.502 130.358 398.782 133.449 cv
396.931 136.775 396.835 138.409 398.613 138.157 cv
cp
399.928 127.567 mo
400.692 126.943 401.579 126.382 402.588 125.881 cv
403.592 125.384 404.62 125.048 405.678 124.869 cv
406.741 124.69 407.583 124.71 408.209 124.931 cv
408.84 125.155 409.264 125.5 409.475 125.966 cv
409.689 126.441 409.767 127.037 409.705 127.76 cv
409.598 128.997 409.195 130.403 408.476 131.987 cv
407.118 134.98 405.259 137.604 402.907 139.759 cv
402.005 140.591 400.947 141.328 399.737 141.962 cv
398.517 142.6 397.271 143.005 396.007 143.17 cv
394.75 143.335 393.788 143.218 393.121 142.826 cv
392.463 142.44 392.089 141.913 391.992 141.25 cv
391.896 140.598 391.974 139.81 392.218 138.891 cv
392.618 137.467 393.36 135.864 394.421 134.101 cv
395.359 132.543 396.321 131.224 397.314 130.123 cv
398.285 129.048 399.153 128.2 399.928 127.567 cv
cp
f
433.549 125.338 mo
433.846 125.024 434.268 124.94 434.815 125.086 cv
435.358 125.231 435.794 125.384 436.126 125.547 cv
436.457 125.709 436.721 125.864 436.92 126.013 cv
437.119 126.162 437.31 126.37 437.495 126.64 cv
437.692 126.942 437.909 127.388 438.144 127.979 cv
443.543 141.546 li
443.691 141.917 443.788 142.192 443.837 142.372 cv
443.887 142.553 443.894 142.754 443.86 142.976 cv
443.805 143.376 443.254 143.5 442.195 143.346 cv
441.152 143.195 440.411 142.885 439.981 142.417 cv
439.743 142.148 439.57 141.908 439.46 141.696 cv
439.351 141.484 439.217 141.179 439.057 140.78 cv
435.461 131.818 li
435.232 132.044 li
434.7 132.408 434.166 132.534 433.632 132.421 cv
433.094 132.306 432.408 131.884 431.568 131.15 cv
430.721 130.409 430.199 129.8 430.008 129.328 cv
429.817 128.855 429.957 128.421 430.424 128.027 cv
433.488 125.367 li
433.549 125.338 li
cp
1 .996078 .823529 rgb
f
454.888 141.517 mo
455.44 141.614 455.859 141.752 456.145 141.93 cv
456.43 142.108 456.666 142.344 456.855 142.638 cv
457.042 142.933 457.224 143.305 457.4 143.759 cv
457.575 144.211 457.674 144.567 457.695 144.827 cv
457.716 145.087 457.649 145.253 457.491 145.324 cv
457.27 145.455 456.895 145.482 456.364 145.405 cv
447.99 144.188 li
447.438 144.108 446.874 143.827 446.301 143.342 cv
445.722 142.853 445.319 142.322 445.092 141.75 cv
444.752 140.892 444.737 140.152 445.046 139.535 cv
445.353 138.923 445.818 138.44 446.439 138.086 cv
447.052 137.737 447.662 137.399 448.267 137.073 cv
448.865 136.75 449.318 136.343 449.629 135.852 cv
449.936 135.365 449.956 134.783 449.691 134.105 cv
449.638 133.968 449.512 133.764 449.313 133.492 cv
449.113 133.218 448.92 132.988 448.733 132.799 cv
448.546 132.61 448.292 132.415 447.973 132.215 cv
447.651 132.013 447.25 131.855 446.769 131.739 cv
446.283 131.623 445.932 131.704 445.715 131.982 cv
445.497 132.263 445.435 132.578 445.53 132.926 cv
445.649 133.442 li
445.704 133.583 li
445.84 133.926 445.929 134.18 445.973 134.347 cv
446.018 134.513 446.022 134.692 445.984 134.883 cv
445.901 135.208 445.369 135.268 444.381 135.059 cv
443.264 134.824 442.472 134.379 442.019 133.724 cv
441.835 133.449 441.631 133.03 441.407 132.466 cv
440.742 130.789 440.761 129.434 441.458 128.416 cv
442.144 127.414 443.438 127.176 445.308 127.678 cv
447.126 128.166 448.81 129.182 450.375 130.713 cv
451.911 132.215 452.973 133.741 453.581 135.308 cv
453.905 136.141 454.042 136.893 453.992 137.568 cv
453.942 138.245 453.766 138.766 453.463 139.128 cv
452.816 139.91 452.148 140.403 451.458 140.6 cv
451.008 140.73 li
451.052 140.844 li
454.888 141.517 li
cp
f
342.432 237.029 mo
342.029 236.874 341.714 236.473 341.488 235.824 cv
341.261 235.173 341.104 234.628 341.018 234.188 cv
340.933 233.747 340.883 233.381 340.87 233.09 cv
340.857 232.798 340.893 232.487 340.98 232.154 cv
341.084 231.793 341.284 231.344 341.579 230.811 cv
348.028 219.168 li
348.196 218.866 348.326 218.656 348.419 218.537 cv
348.512 218.418 348.639 218.344 348.799 218.314 cv
349.085 218.252 349.438 218.879 349.856 220.187 cv
350.259 221.448 350.418 222.397 350.333 223.042 cv
350.28 223.402 350.215 223.679 350.137 223.876 cv
350.059 224.072 349.935 224.33 349.765 224.651 cv
345.832 232.076 li
346.104 232.22 li
346.622 232.62 346.979 233.116 347.177 233.709 cv
347.376 234.301 347.452 235.168 347.407 236.315 cv
347.362 237.464 347.239 238.238 347.037 238.636 cv
346.834 239.035 346.487 239.107 345.993 238.848 cv
342.489 237.078 li
342.432 237.029 li
cp
level3{
gsave
clp
[-33 50 -50 -33 355.488 216.829 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-33 50 -50 -33 355.488 216.829 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
343.962 210.155 mo
343.416 208.477 342.877 208.062 342.345 208.925 cv
342.161 209.224 342.052 209.696 342.019 210.345 cv
341.985 210.992 342.108 211.741 342.388 212.586 cv
342.666 213.428 342.952 213.95 343.245 214.149 cv
343.537 214.349 343.757 214.323 343.905 214.072 cv
344.053 213.822 344.157 213.604 344.217 213.419 cv
344.277 213.234 344.328 212.988 344.372 212.68 cv
344.451 212.079 344.315 211.239 343.962 210.155 cv
cp
340.351 203.183 mo
341.176 201.91 342.119 201.67 343.176 202.439 cv
344.217 203.195 345.089 204.689 345.8 206.913 cv
346.688 209.692 347.044 212.296 346.874 214.758 cv
346.703 217.236 346.123 219.357 345.12 221.137 cv
343.636 223.772 341.969 224.859 340.108 224.334 cv
338.195 223.793 336.477 221.398 334.979 217.101 cv
334.673 216.223 334.492 215.512 334.437 214.971 cv
334.382 214.428 334.417 213.952 334.541 213.544 cv
334.666 213.136 334.859 212.728 335.121 212.322 cv
335.381 211.917 335.607 211.656 335.798 211.537 cv
335.989 211.417 336.152 211.377 336.286 211.413 cv
336.421 211.45 336.557 211.59 336.694 211.833 cv
336.88 212.141 337.132 212.762 337.451 213.697 cv
337.768 214.628 338.135 215.43 338.551 216.102 cv
338.964 216.77 339.337 217.209 339.672 217.421 cv
340.344 217.827 340.851 217.91 341.195 217.675 cv
341.422 217.551 li
341.01 216.971 340.666 216.271 340.391 215.452 cv
339.649 213.247 339.284 210.902 339.303 208.439 cv
339.321 205.984 339.672 204.23 340.351 203.183 cv
cp
level3{
gsave
clp
[-33 50 -50 -33 344.473 209.559 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-33 50 -50 -33 344.473 209.559 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
502.584 219.019 mo
502.608 219.982 502.501 220.808 502.261 221.494 cv
502.022 222.178 501.815 222.673 501.639 222.98 cv
501.462 223.286 501.312 223.491 501.186 223.596 cv
501.06 223.701 500.913 223.699 500.745 223.591 cv
500.561 223.453 500.315 223.125 500.009 222.605 cv
493.332 211.27 li
493.159 210.977 493.035 210.741 492.959 210.563 cv
492.883 210.386 492.817 210.117 492.76 209.759 cv
492.654 209.122 492.819 208.125 493.256 206.761 cv
493.682 205.431 494.046 204.762 494.348 204.76 cv
494.519 204.772 494.657 204.84 494.764 204.962 cv
494.871 205.085 495.016 205.297 495.202 205.597 cv
499.515 212.57 li
499.511 211.892 li
499.559 210.559 499.693 209.569 499.911 208.918 cv
500.13 208.265 500.508 207.814 501.046 207.563 cv
501.589 207.311 501.98 207.364 502.215 207.726 cv
502.451 208.089 502.569 208.901 502.568 210.162 cv
502.593 218.875 li
502.584 219.019 li
cp
level3{
gsave
clp
[-21.25 -32.75 32.75 -21.25 510.854 230.188 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-21.25 -32.75 32.75 -21.25 510.854 230.188 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
494.177 232.754 mo
494.332 233.046 494.538 233.143 494.795 233.046 cv
495.053 232.948 495.303 232.549 495.543 231.848 cv
495.784 231.144 495.896 230.498 495.876 229.914 cv
495.856 229.329 495.765 228.889 495.602 228.594 cv
495.44 228.3 495.226 228.208 494.96 228.319 cv
494.696 228.428 494.449 228.823 494.22 229.501 cv
493.991 230.176 493.888 230.814 493.911 231.415 cv
493.934 232.017 494.022 232.463 494.177 232.754 cv
cp
491.662 221.423 mo
491.331 221.577 491.019 222.105 490.725 223.007 cv
490.432 223.905 490.299 224.737 490.326 225.508 cv
490.353 226.28 490.466 226.854 490.665 227.231 cv
490.865 227.609 491.128 227.735 491.456 227.608 cv
491.785 227.48 492.098 226.969 492.395 226.074 cv
492.694 225.175 492.834 224.323 492.815 223.523 cv
492.797 222.724 492.683 222.136 492.474 221.757 cv
492.265 221.38 491.994 221.269 491.662 221.423 cv
cp
488.96 232.654 mo
488.176 231.105 487.813 229.07 487.863 226.535 cv
487.913 224.006 488.267 221.713 488.931 219.638 cv
489.6 217.544 490.449 216.089 491.484 215.276 cv
492.535 214.449 493.493 214.766 494.355 216.254 cv
494.679 216.814 494.922 217.578 495.085 218.548 cv
495.248 219.521 495.329 220.346 495.327 221.02 cv
495.326 222.083 li
495.423 222.017 495.547 221.947 495.697 221.873 cv
495.848 221.798 496.116 221.816 496.502 221.93 cv
496.891 222.044 497.232 222.354 497.524 222.862 cv
498.328 224.258 498.723 226.232 498.701 228.773 cv
498.68 231.32 498.302 233.646 497.572 235.731 cv
496.849 237.798 495.966 239.078 494.931 239.579 cv
493.912 240.071 493.023 239.557 492.259 238.057 cv
492.035 237.616 491.857 237.021 491.725 236.277 cv
491.594 235.535 491.52 234.897 491.504 234.364 cv
491.479 233.564 li
491.367 233.647 491.215 233.728 491.025 233.807 cv
490.835 233.887 490.516 233.86 490.07 233.73 cv
489.627 233.6 489.258 233.241 488.96 232.654 cv
cp
level3{
gsave
clp
[-21.25 -32.75 32.75 -21.25 499.879 237.31 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-21.25 -32.75 32.75 -21.25 499.879 237.31 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
478.375 269.142 mo
478.559 269.292 478.635 269.516 478.603 269.814 cv
478.57 270.116 478.449 270.506 478.238 270.989 cv
478.023 271.482 477.788 271.877 477.535 272.171 cv
477.279 272.468 476.986 272.668 476.657 272.769 cv
476.326 272.87 476.041 272.92 475.803 272.918 cv
475.566 272.916 475.228 272.888 474.791 272.834 cv
459.038 271.022 li
458.116 270.908 457.513 270.736 457.237 270.509 cv
456.962 270.282 456.925 269.986 457.122 269.624 cv
457.318 269.267 457.66 268.845 458.142 268.361 cv
458.615 267.888 459.036 267.528 459.413 267.277 cv
459.784 267.029 460.112 266.849 460.398 266.735 cv
460.681 266.621 460.989 266.556 461.324 266.538 cv
461.768 266.503 462.355 266.541 463.083 266.652 cv
465.944 267.088 li
470.162 261.896 li
470.781 261.133 471.443 260.756 472.159 260.741 cv
472.453 260.74 472.812 260.781 473.237 260.865 cv
473.66 260.949 473.96 261.025 474.141 261.096 cv
480.953 263.882 li
481.26 264.012 481.49 264.117 481.643 264.2 cv
481.796 264.283 481.919 264.414 482.013 264.595 cv
482.107 264.777 482.102 264.988 481.997 265.23 cv
481.89 265.475 481.719 265.737 481.481 266.019 cv
480.803 266.833 480.093 267.196 479.37 267.077 cv
479.111 267.034 478.793 266.932 478.415 266.772 cv
478.352 266.74 li
472.94 264.55 li
470.714 267.813 li
476.982 268.679 li
477.375 268.739 477.658 268.793 477.835 268.843 cv
478.01 268.892 478.19 268.992 478.375 269.142 cv
cp
level3{
gsave
clp
[-55.75 -27.75 27.75 -55.75 505.175 285.155 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-55.75 -27.75 27.75 -55.75 505.175 285.155 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
367.89 267.872 mo
366.996 266.55 366.096 265.951 365.164 266.017 cv
364.847 266.04 364.642 266.201 364.543 266.502 cv
364.445 266.806 364.591 267.278 364.991 267.931 cv
365.403 268.603 365.863 269.125 366.368 269.489 cv
366.884 269.861 367.291 270.044 367.582 270.035 cv
367.875 270.025 368.084 269.994 368.207 269.941 cv
368.332 269.888 368.443 269.791 368.541 269.651 cv
368.723 269.374 368.499 268.772 367.89 267.872 cv
cp
362.58 262.185 mo
363.836 262.047 365.26 262.428 366.91 263.375 cv
368.676 264.39 370.25 265.769 371.616 267.562 cv
373.507 270.044 374.323 272.109 373.897 273.586 cv
373.457 275.111 372.03 275.869 369.701 275.824 cv
366.493 275.762 363.355 274.531 360.43 272.339 cv
357.828 270.389 355.996 267.973 354.838 265.205 cv
354.621 264.685 354.516 264.309 354.52 264.068 cv
354.525 263.828 354.611 263.66 354.779 263.562 cv
354.947 263.463 355.186 263.397 355.497 263.365 cv
355.81 263.331 356.076 263.338 356.292 263.383 cv
356.51 263.43 356.691 263.494 356.835 263.576 cv
356.981 263.659 357.119 263.785 357.249 263.955 cv
357.43 264.18 357.661 264.578 357.945 265.157 cv
358.237 265.753 358.612 266.339 359.075 266.918 cv
359.553 267.514 360.015 267.991 360.458 268.34 cv
361.386 269.061 362.137 269.512 362.689 269.672 cv
363.056 269.795 li
362.461 269.147 361.998 268.513 361.661 267.891 cv
360.802 266.304 360.515 264.996 360.75 263.912 cv
360.979 262.862 361.582 262.294 362.58 262.185 cv
cp
level3{
gsave
clp
[39.75 -18 18 39.75 339.565 280.332 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[39.75 -18 18 39.75 339.565 280.332 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
372.597 261.989 mo
383.866 274.634 li
384.49 275.334 383.874 275.9 382.509 275.876 cv
381.174 275.853 379.651 275.271 379.112 274.598 cv
369.27 262.328 li
368.958 261.939 369.423 261.549 370.31 261.453 cv
371.211 261.355 372.244 261.592 372.597 261.989 cv
cp
level3{
gsave
clp
[39.75 -18 18 39.75 341.487 284.576 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[39.75 -18 18 39.75 341.487 284.576 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
72.011 448.26 mo
72.011 448.258 li
125.617 355.41 li
125.619 355.409 li
72.011 448.26 li
level3{
gsave
clp
[112.583 0 0 112.583 72.011 418.859 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[112.583 0 0 112.583 72.011 418.859 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
187.278 452.909 mo
187.278 452.909 li
187.277 452.906 li
187.278 452.909 li
187.278 452.909 mo
74.6948 452.909 li
69.3273 452.909 li
72.011 448.26 li
125.619 355.409 li
128.303 350.76 li
187.277 452.909 li
128.422 391.869 mo
124.535 391.869 121.125 393.139 118.191 395.676 cv
115.255 398.214 113.789 401.427 113.789 405.313 cv
113.789 406.74 114.116 408.118 114.77 409.447 cv
115.425 410.776 115.949 411.639 116.346 412.035 cv
116.743 412.432 117.08 412.749 117.358 412.986 cv
116.109 414.116 li
115.315 414.83 114.512 415.97 113.7 417.536 cv
112.887 419.103 112.481 420.719 112.481 422.384 cv
112.481 426.867 114.096 430.455 117.328 433.151 cv
120.56 435.849 124.218 437.195 128.302 437.195 cv
132.387 437.195 136.044 435.838 139.277 433.121 cv
142.509 430.405 144.125 426.827 144.125 422.384 cv
144.125 420.719 143.679 419.074 142.787 417.448 cv
141.895 415.821 141.181 414.74 140.646 414.206 cv
140.11 413.671 139.664 413.264 139.307 412.986 cv
140.199 412.035 li
140.794 411.4 141.378 410.469 141.954 409.239 cv
142.528 408.01 142.817 406.799 142.817 405.61 cv
142.817 401.605 141.389 398.315 138.534 395.736 cv
135.678 393.159 132.308 391.869 128.422 391.869 cv
128.362 427.142 mo
126.617 427.142 125.288 426.667 124.377 425.716 cv
123.464 424.763 123.008 423.733 123.008 422.622 cv
123.008 421.513 123.464 420.491 124.377 419.559 cv
125.288 418.628 126.607 418.161 128.333 418.161 cv
130.057 418.161 131.366 418.637 132.258 419.588 cv
133.15 420.541 133.597 421.562 133.597 422.652 cv
133.597 423.743 133.16 424.763 132.288 425.716 cv
131.416 426.667 130.107 427.142 128.362 427.142 cv
128.392 408.584 mo
127.103 408.584 126.111 408.227 125.418 407.513 cv
124.723 406.799 124.377 406.037 124.377 405.224 cv
124.377 404.412 124.694 403.667 125.328 402.993 cv
125.963 402.319 126.944 401.982 128.273 401.982 cv
129.601 401.982 130.602 402.329 131.277 403.022 cv
131.951 403.717 132.288 404.46 132.288 405.254 cv
132.288 406.047 131.961 406.799 131.307 407.513 cv
130.652 408.227 129.68 408.584 128.392 408.584 cv
128.303 350.761 mo
128.301 350.76 li
128.303 350.76 li
level3{
gsave
clp
[4.58612e-09 102.148 -102.148 4.58612e-09 128.303 350.76 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.58612e-09 102.148 -102.148 4.58612e-09 128.303 350.76 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
69.3258 452.909 mo
69.3258 384.809 li
128.301 350.76 li
125.617 355.41 li
72.011 448.258 li
69.3258 452.909 li
89.5898 384.092 mo
78.326 395.209 li
77.8356 395.693 77.4646 396.074 77.2124 396.353 cv
76.9602 396.631 76.6892 396.993 76.3981 397.441 cv
75.8928 398.24 75.6884 399.223 75.7868 400.414 cv
75.8728 401.453 76.1268 401.982 76.5504 401.982 cv
76.6418 401.982 76.7411 401.957 76.8483 401.908 cv
77.1864 401.757 77.4818 401.575 77.7339 401.364 cv
77.9862 401.152 78.3622 400.803 78.8625 400.316 cv
97.8908 381.796 li
98.7495 380.96 99.3649 380.301 99.7353 379.823 cv
100.056 379.392 100.26 379.03 100.346 378.734 cv
100.431 378.442 100.467 378.104 100.456 377.724 cv
100.443 377.348 100.321 376.928 100.09 376.471 cv
99.935 376.164 99.6497 376.011 99.2369 376.011 cv
99.0449 376.011 98.8252 376.044 98.5783 376.11 cv
98.4782 376.113 li
92.1635 377.43 li
91.3168 377.599 90.6224 377.959 90.0682 378.513 cv
89.5153 379.065 88.951 379.919 88.3694 381.085 cv
87.7818 382.263 87.5456 383.073 87.666 383.513 cv
87.7851 383.948 88.2444 384.167 89.0558 384.167 cv
89.074 384.167 89.0924 384.167 89.1109 384.167 cv
89.5898 384.092 li
level3{
gsave
clp
[58.9755 0 0 58.9755 69.3258 401.834 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[58.9755 0 0 58.9755 69.3258 401.834 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
128.303 486.958 mo
69.3271 452.909 li
74.6948 452.909 li
187.278 452.909 li
187.277 452.909 li
187.278 452.909 li
128.303 486.958 li
132.251 457.761 mo
131.104 457.761 130.198 457.81 129.533 457.908 cv
128.871 458.005 128.398 458.194 128.114 458.472 cv
127.833 458.747 127.66 459.009 127.592 459.255 cv
127.526 459.5 127.496 459.874 127.503 460.374 cv
127.529 462.267 126.166 464.585 123.619 467.207 cv
122.621 468.214 121.668 469.174 120.757 470.089 cv
119.881 470.97 119.182 471.829 118.652 472.667 cv
118.142 473.475 117.955 475.367 118.078 475.879 cv
118.198 476.378 118.356 476.721 118.552 476.914 cv
118.955 477.366 120.016 477.588 121.74 477.588 cv
135.043 477.588 li
135.955 477.588 136.684 477.519 137.233 477.378 cv
137.573 477.295 137.844 477.141 138.047 476.914 cv
138.252 476.684 138.401 476.378 138.493 475.992 cv
138.588 475.599 138.587 474.037 138.489 473.789 cv
138.39 473.538 138.118 473.345 137.67 473.21 cv
137.22 473.075 136.461 473.007 135.395 473.007 cv
126.281 473.007 li
126.273 472.829 126.555 472.514 127.136 472.057 cv
127.729 471.591 128.46 471.018 129.338 470.331 cv
130.243 469.624 131.18 468.826 132.154 467.928 cv
133.166 466.997 134.092 465.897 134.935 464.609 cv
135.822 463.253 136.382 461.865 136.59 460.442 cv
136.666 459.92 136.697 459.535 136.68 459.29 cv
136.663 459.044 136.534 458.777 136.291 458.49 cv
136.046 458.201 135.599 458.005 134.949 457.908 cv
134.298 457.81 133.398 457.761 132.251 457.761 cv
level3{
gsave
clp
[2.88004e-09 -64.0007 64.0007 2.88004e-09 128.303 491 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.88004e-09 -64.0007 64.0007 2.88004e-09 128.303 491 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
128.302 437.195 mo
124.218 437.195 120.56 435.849 117.328 433.151 cv
114.096 430.455 112.481 426.867 112.481 422.384 cv
112.481 420.719 112.887 419.103 113.7 417.536 cv
114.512 415.97 115.315 414.83 116.109 414.116 cv
117.358 412.986 li
117.08 412.749 116.743 412.432 116.346 412.035 cv
115.949 411.639 115.425 410.776 114.77 409.447 cv
114.116 408.118 113.789 406.74 113.789 405.313 cv
113.789 401.427 115.255 398.214 118.191 395.676 cv
121.125 393.139 124.535 391.869 128.422 391.869 cv
132.308 391.869 135.678 393.159 138.534 395.736 cv
141.389 398.315 142.817 401.605 142.817 405.61 cv
142.817 406.799 142.528 408.01 141.954 409.239 cv
141.378 410.469 140.794 411.4 140.199 412.035 cv
139.307 412.986 li
139.664 413.264 140.11 413.671 140.646 414.206 cv
141.181 414.74 141.895 415.821 142.787 417.448 cv
143.679 419.074 144.125 420.719 144.125 422.384 cv
144.125 426.827 142.509 430.405 139.277 433.121 cv
136.044 435.838 132.387 437.195 128.302 437.195 cv
128.333 418.161 mo
126.607 418.161 125.288 418.628 124.377 419.559 cv
123.464 420.491 123.008 421.513 123.008 422.622 cv
123.008 423.733 123.464 424.763 124.377 425.716 cv
125.288 426.667 126.617 427.142 128.362 427.142 cv
130.107 427.142 131.416 426.667 132.288 425.716 cv
133.16 424.763 133.597 423.743 133.597 422.652 cv
133.597 421.562 133.15 420.541 132.258 419.588 cv
131.366 418.637 130.057 418.161 128.333 418.161 cv
128.273 401.982 mo
126.944 401.982 125.963 402.319 125.328 402.993 cv
124.694 403.667 124.377 404.412 124.377 405.224 cv
124.377 406.037 124.723 406.799 125.418 407.513 cv
126.111 408.227 127.103 408.584 128.392 408.584 cv
129.68 408.584 130.652 408.227 131.307 407.513 cv
131.961 406.799 132.288 406.047 132.288 405.254 cv
132.288 404.46 131.951 403.717 131.277 403.022 cv
130.602 402.329 129.601 401.982 128.273 401.982 cv
level3{
gsave
clp
[4.58612e-09 102.148 -102.148 4.58612e-09 128.303 350.76 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.58612e-09 102.148 -102.148 4.58612e-09 128.303 350.76 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
76.5504 401.982 mo
76.1268 401.982 75.8728 401.453 75.7868 400.414 cv
75.6884 399.223 75.8928 398.24 76.3981 397.441 cv
76.6892 396.993 76.9602 396.631 77.2124 396.353 cv
77.4646 396.074 77.8356 395.693 78.326 395.209 cv
89.5898 384.092 li
89.1109 384.167 li
89.0924 384.167 89.074 384.167 89.0558 384.167 cv
88.2444 384.167 87.7851 383.948 87.666 383.513 cv
87.5456 383.073 87.7818 382.263 88.3694 381.085 cv
88.951 379.919 89.5153 379.065 90.0682 378.513 cv
90.6224 377.959 91.3168 377.599 92.1635 377.43 cv
98.4782 376.113 li
98.5783 376.11 li
98.8252 376.044 99.0449 376.011 99.2369 376.011 cv
99.6497 376.011 99.935 376.164 100.09 376.471 cv
100.321 376.928 100.443 377.348 100.456 377.724 cv
100.467 378.104 100.431 378.442 100.346 378.734 cv
100.26 379.03 100.056 379.392 99.7353 379.823 cv
99.3649 380.301 98.7495 380.96 97.8908 381.796 cv
78.8625 400.316 li
78.3622 400.803 77.9862 401.152 77.7339 401.364 cv
77.4818 401.575 77.1864 401.757 76.8483 401.908 cv
76.7411 401.957 76.6418 401.982 76.5504 401.982 cv
level3{
gsave
clp
[58.9755 0 0 58.9755 69.3258 401.834 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[58.9755 0 0 58.9755 69.3258 401.834 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
135.043 477.588 mo
121.74 477.588 li
120.016 477.588 118.955 477.366 118.552 476.914 cv
118.356 476.721 118.198 476.378 118.078 475.879 cv
117.955 475.367 118.142 473.475 118.652 472.667 cv
119.182 471.829 119.881 470.97 120.757 470.089 cv
121.668 469.174 122.621 468.214 123.619 467.207 cv
126.166 464.585 127.529 462.267 127.503 460.374 cv
127.496 459.874 127.526 459.5 127.592 459.255 cv
127.66 459.009 127.833 458.747 128.114 458.472 cv
128.398 458.194 128.871 458.005 129.533 457.908 cv
130.198 457.81 131.104 457.761 132.251 457.761 cv
133.398 457.761 134.298 457.81 134.949 457.908 cv
135.599 458.005 136.046 458.201 136.291 458.49 cv
136.534 458.777 136.663 459.044 136.68 459.29 cv
136.697 459.535 136.666 459.92 136.59 460.442 cv
136.382 461.865 135.822 463.253 134.935 464.609 cv
134.092 465.897 133.166 466.997 132.154 467.928 cv
131.18 468.826 130.243 469.624 129.338 470.331 cv
128.46 471.018 127.729 471.591 127.136 472.057 cv
126.555 472.514 126.273 472.829 126.281 473.007 cv
135.395 473.007 li
136.461 473.007 137.22 473.075 137.67 473.21 cv
138.118 473.345 138.39 473.538 138.489 473.789 cv
138.587 474.037 138.588 475.599 138.493 475.992 cv
138.401 476.378 138.252 476.684 138.047 476.914 cv
137.844 477.141 137.573 477.295 137.233 477.378 cv
136.684 477.519 135.955 477.588 135.043 477.588 cv
level3{
gsave
clp
[2.88004e-09 -64.0007 64.0007 2.88004e-09 128.303 491 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.88004e-09 -64.0007 64.0007 2.88004e-09 128.303 491 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
132.288 407.254 mo
132.288 406.46 131.951 405.717 131.277 405.022 cv
130.602 404.329 129.601 403.982 128.273 403.982 cv
126.944 403.982 125.962 404.319 125.328 404.993 cv
124.694 405.667 124.377 406.412 124.377 407.224 cv
124.377 408.037 124.723 408.799 125.418 409.513 cv
126.111 410.227 127.102 410.584 128.392 410.584 cv
129.68 410.584 130.652 410.227 131.307 409.513 cv
131.961 408.799 132.288 408.047 132.288 407.254 cv
cp
124.377 427.716 mo
125.288 428.667 126.617 429.143 128.362 429.143 cv
130.107 429.143 131.416 428.667 132.288 427.716 cv
133.16 426.763 133.597 425.743 133.597 424.651 cv
133.597 423.562 133.15 422.541 132.258 421.589 cv
131.366 420.637 130.057 420.161 128.333 420.161 cv
126.607 420.161 125.288 420.628 124.377 421.56 cv
123.464 422.491 123.008 423.513 123.008 424.622 cv
123.008 425.733 123.464 426.763 124.377 427.716 cv
cp
144.125 424.384 mo
144.125 428.827 142.509 432.405 139.277 435.121 cv
136.044 437.838 132.387 439.195 128.302 439.195 cv
124.218 439.195 120.56 437.849 117.328 435.151 cv
114.095 432.455 112.48 428.867 112.48 424.384 cv
112.48 422.719 112.886 421.103 113.7 419.536 cv
114.512 417.97 115.315 416.83 116.109 416.116 cv
117.358 414.986 li
117.08 414.749 116.743 414.432 116.346 414.034 cv
115.949 413.639 115.425 412.776 114.77 411.447 cv
114.116 410.118 113.789 408.74 113.789 407.313 cv
113.789 403.427 115.255 400.214 118.191 397.677 cv
121.125 395.139 124.535 393.869 128.422 393.869 cv
132.307 393.869 135.678 395.159 138.534 397.736 cv
141.389 400.315 142.817 403.605 142.817 407.61 cv
142.817 408.799 142.528 410.01 141.954 411.239 cv
141.378 412.469 140.794 413.4 140.199 414.034 cv
139.307 414.986 li
139.664 415.264 140.11 415.671 140.646 416.206 cv
141.181 416.74 141.895 417.821 142.786 419.448 cv
143.679 421.074 144.125 422.719 144.125 424.384 cv
cp
1 1 1 rgb
f
99.745 376.727 mo
100.523 376.521 101.029 376.638 101.257 377.088 cv
101.487 377.546 101.609 377.965 101.622 378.341 cv
101.634 378.721 101.598 379.059 101.513 379.352 cv
101.427 379.647 101.223 380.009 100.902 380.44 cv
100.532 380.918 99.9162 381.577 99.0574 382.413 cv
80.0292 400.933 li
79.5288 401.42 79.1529 401.769 78.9005 401.981 cv
78.6485 402.193 78.353 402.374 78.015 402.525 cv
77.411 402.803 77.058 402.295 76.9535 401.031 cv
76.8551 399.84 77.0595 398.857 77.5648 398.058 cv
77.8559 397.61 78.1269 397.248 78.379 396.97 cv
78.6312 396.691 79.0022 396.31 79.4927 395.826 cv
90.7565 384.709 li
90.2776 384.784 li
89.432 384.794 88.9545 384.575 88.8327 384.13 cv
88.7123 383.69 88.9485 382.88 89.536 381.702 cv
90.1176 380.536 90.682 379.682 91.2349 379.13 cv
91.7891 378.576 92.4835 378.216 93.3302 378.047 cv
99.6449 376.73 li
99.745 376.727 li
cp
f
121.74 476.276 mo
120.016 476.276 118.955 476.053 118.552 475.601 cv
118.356 475.408 118.198 475.065 118.078 474.566 cv
117.955 474.055 118.141 472.163 118.652 471.355 cv
119.182 470.516 119.881 469.657 120.757 468.776 cv
121.668 467.861 122.621 466.902 123.619 465.895 cv
126.166 463.272 127.529 460.955 127.503 459.062 cv
127.496 458.562 127.526 458.188 127.592 457.943 cv
127.66 457.696 127.833 457.435 128.114 457.16 cv
128.398 456.882 128.871 456.693 129.533 456.596 cv
130.198 456.497 131.104 456.448 132.251 456.448 cv
133.398 456.448 134.298 456.497 134.949 456.596 cv
135.599 456.693 136.046 456.888 136.291 457.178 cv
136.534 457.465 136.663 457.731 136.68 457.978 cv
136.697 458.222 136.666 458.607 136.59 459.13 cv
136.382 460.552 135.822 461.941 134.935 463.296 cv
134.092 464.584 133.166 465.685 132.154 466.616 cv
131.18 467.513 130.243 468.312 129.338 469.019 cv
128.46 469.706 127.729 470.278 127.136 470.745 cv
126.555 471.202 126.273 471.516 126.281 471.694 cv
135.395 471.694 li
136.461 471.694 137.22 471.762 137.67 471.898 cv
138.118 472.032 138.39 472.226 138.49 472.477 cv
138.587 472.725 138.588 474.287 138.493 474.68 cv
138.401 475.065 138.252 475.372 138.047 475.602 cv
137.844 475.829 137.573 475.983 137.233 476.065 cv
136.684 476.206 135.955 476.276 135.043 476.276 cv
121.74 476.276 li
cp
level3{
gsave
clp
[1 -47.3333 47.3333 1 127.958 490.206 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1 -47.3333 47.3333 1 127.958 490.206 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
187.277 452.909 mo
187.277 452.909 li
128.301 350.76 li
128.303 350.761 li
187.277 384.809 li
187.277 452.906 li
187.277 452.909 li
173.918 395.718 mo
173.058 395.776 172.568 396.078 172.463 396.627 cv
172.357 397.184 172.634 398.134 173.3 399.484 cv
174.069 401.112 174.778 402.234 175.419 402.835 cv
175.965 403.347 176.598 403.601 177.312 403.601 cv
177.436 403.601 177.563 403.594 177.691 403.578 cv
177.964 403.547 li
177.968 403.547 177.972 403.547 177.976 403.547 cv
178.179 403.547 178.422 403.485 178.707 403.361 cv
179.924 402.788 180.596 401.568 180.753 399.746 cv
180.927 397.741 180.304 395.401 178.915 392.706 cv
177.561 390.077 175.857 387.778 173.766 385.75 cv
171.657 383.705 169.711 382.511 167.888 382.171 cv
167.517 382.102 167.171 382.067 166.852 382.067 cv
165.539 382.067 164.664 382.654 164.248 383.859 cv
164.114 384.248 164.038 384.557 164.022 384.783 cv
162.586 383.239 161.733 382.316 161.467 382.018 cv
163.023 378.083 li
163.145 377.774 163.218 377.532 163.244 377.355 cv
163.269 377.18 163.234 376.914 163.138 376.557 cv
162.996 375.952 162.285 375.031 161 373.785 cv
159.622 372.45 158.684 371.779 158.189 371.779 cv
158.173 371.779 158.158 371.78 158.143 371.781 cv
157.868 371.801 157.675 371.864 157.568 371.973 cv
157.459 372.082 157.322 372.291 157.155 372.603 cv
156.138 374.507 li
154.307 377.83 li
154.114 378.19 154.062 378.622 154.15 379.125 cv
154.24 379.634 154.399 380.101 154.628 380.526 cv
154.859 380.952 155.139 381.394 155.466 381.851 cv
155.795 382.31 156.031 382.619 156.174 382.778 cv
156.317 382.938 158.169 384.942 161.716 388.776 cv
165.247 392.593 167.164 394.643 167.481 394.94 cv
167.798 395.238 168.125 395.408 168.458 395.447 cv
168.499 395.452 168.543 395.454 168.59 395.454 cv
168.911 395.454 169.343 395.332 169.88 395.09 cv
170.482 394.819 170.836 394.421 170.949 393.897 cv
171.061 393.381 170.909 392.627 170.497 391.638 cv
170.164 390.927 170.062 390.309 170.187 389.785 cv
170.307 389.281 170.618 389.032 171.115 389.032 cv
171.128 389.032 171.141 389.032 171.154 389.032 cv
171.667 389.046 172.283 389.399 173.006 390.092 cv
173.726 390.783 174.255 391.507 174.598 392.271 cv
174.943 393.041 175.051 393.826 174.918 394.634 cv
174.797 395.366 174.522 395.736 174.091 395.736 cv
174.036 395.736 173.978 395.73 173.918 395.718 cv
level3{
gsave
clp
[58.9755 0 0 58.9755 128.301 401.834 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[58.9755 0 0 58.9755 128.301 401.834 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
177.312 403.601 mo
176.598 403.601 175.965 403.347 175.419 402.835 cv
174.778 402.234 174.069 401.112 173.3 399.484 cv
172.634 398.134 172.357 397.184 172.463 396.627 cv
172.568 396.078 173.058 395.776 173.918 395.718 cv
173.978 395.73 174.036 395.736 174.091 395.736 cv
174.522 395.736 174.797 395.366 174.918 394.634 cv
175.051 393.826 174.943 393.041 174.598 392.271 cv
174.255 391.507 173.726 390.783 173.006 390.092 cv
172.283 389.399 171.667 389.046 171.154 389.032 cv
171.141 389.032 171.128 389.032 171.115 389.032 cv
170.618 389.032 170.307 389.281 170.187 389.785 cv
170.062 390.309 170.164 390.927 170.497 391.638 cv
170.909 392.627 171.061 393.381 170.949 393.897 cv
170.836 394.421 170.482 394.819 169.88 395.09 cv
169.343 395.332 168.911 395.454 168.59 395.454 cv
168.543 395.454 168.499 395.452 168.458 395.447 cv
168.125 395.408 167.798 395.238 167.481 394.94 cv
167.164 394.643 165.247 392.593 161.716 388.776 cv
158.169 384.942 156.317 382.938 156.174 382.778 cv
156.031 382.619 155.795 382.31 155.466 381.851 cv
155.139 381.394 154.859 380.952 154.628 380.526 cv
154.399 380.101 154.24 379.634 154.15 379.125 cv
154.062 378.622 154.114 378.19 154.307 377.83 cv
156.138 374.507 li
157.155 372.603 li
157.322 372.291 157.459 372.082 157.568 371.973 cv
157.675 371.864 157.868 371.801 158.143 371.781 cv
158.158 371.78 158.173 371.779 158.189 371.779 cv
158.684 371.779 159.622 372.45 161 373.785 cv
162.285 375.031 162.996 375.952 163.138 376.557 cv
163.234 376.914 163.269 377.18 163.244 377.355 cv
163.218 377.532 163.145 377.774 163.023 378.083 cv
161.467 382.018 li
161.733 382.316 162.586 383.239 164.022 384.783 cv
164.038 384.557 164.114 384.248 164.248 383.859 cv
164.664 382.654 165.539 382.067 166.852 382.067 cv
167.171 382.067 167.517 382.102 167.888 382.171 cv
169.711 382.511 171.657 383.705 173.766 385.75 cv
175.857 387.778 177.561 390.077 178.915 392.706 cv
180.304 395.401 180.927 397.741 180.753 399.746 cv
180.596 401.568 179.924 402.788 178.707 403.361 cv
178.422 403.485 178.179 403.547 177.976 403.547 cv
177.972 403.547 177.968 403.547 177.964 403.547 cv
177.691 403.578 li
177.563 403.594 177.436 403.601 177.312 403.601 cv
level3{
gsave
clp
[58.9755 0 0 58.9755 128.301 401.834 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[58.9755 0 0 58.9755 128.301 401.834 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
153.307 378.83 mo
155.138 375.507 li
156.155 373.603 li
156.322 373.291 156.459 373.082 156.568 372.973 cv
156.675 372.865 156.868 372.801 157.143 372.781 cv
157.626 372.737 158.579 373.408 160 374.785 cv
161.285 376.031 161.996 376.952 162.138 377.557 cv
162.234 377.914 162.269 378.18 162.244 378.356 cv
162.218 378.532 162.145 378.774 162.023 379.083 cv
160.467 383.018 li
160.733 383.316 161.586 384.239 163.022 385.783 cv
163.038 385.557 163.114 385.248 163.248 384.859 cv
163.765 383.36 164.992 382.817 166.888 383.171 cv
168.711 383.511 170.657 384.705 172.766 386.75 cv
174.857 388.778 176.561 391.077 177.915 393.706 cv
179.304 396.401 179.927 398.741 179.753 400.746 cv
179.596 402.568 178.924 403.788 177.707 404.361 cv
177.417 404.487 177.169 404.55 176.964 404.547 cv
176.691 404.578 li
175.821 404.682 175.059 404.435 174.419 403.835 cv
173.778 403.234 173.069 402.112 172.3 400.484 cv
171.634 399.134 171.357 398.184 171.463 397.627 cv
171.568 397.078 172.058 396.776 172.918 396.718 cv
173.449 396.825 173.782 396.459 173.918 395.634 cv
174.051 394.826 173.943 394.041 173.598 393.271 cv
173.255 392.507 172.726 391.783 172.005 391.092 cv
171.283 390.399 170.667 390.046 170.154 390.033 cv
169.634 390.02 169.31 390.268 169.187 390.785 cv
169.062 391.309 169.164 391.927 169.497 392.638 cv
169.909 393.627 170.061 394.381 169.949 394.897 cv
169.836 395.421 169.482 395.819 168.88 396.09 cv
168.266 396.367 167.789 396.487 167.458 396.447 cv
167.125 396.408 166.798 396.238 166.481 395.94 cv
166.164 395.643 164.247 393.593 160.716 389.776 cv
157.169 385.943 155.317 383.938 155.174 383.778 cv
155.031 383.619 154.795 383.31 154.466 382.851 cv
154.139 382.394 153.859 381.952 153.628 381.526 cv
153.399 381.101 153.24 380.634 153.15 380.125 cv
153.062 379.622 153.115 379.19 153.307 378.83 cv
cp
level3{
gsave
clp
[59.3333 57.3333 -57.3333 59.3333 155.095 377.419 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[59.3333 57.3333 -57.3333 59.3333 155.095 377.419 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
125.716 277.701 mo
125.713 277.7 li
125.707 277.691 li
141.178 256.421 li
141.219 256.55 li
212.055 256.55 li
219.706 266.801 li
212.055 256.55 li
141.219 256.55 li
125.716 277.701 li
233.945 189.181 mo
176.637 147.545 li
176.637 147.381 li
233.945 189.181 li
119.711 188.904 mo
119.711 188.903 li
176.637 147.545 li
119.711 188.904 li
level3{
gsave
clp
[165 0 0 165 94.3181 207.864 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[165 0 0 165 94.3181 207.864 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
212.055 256.55 mo
141.219 256.55 li
141.178 256.421 li
141.262 256.305 li
119.711 188.904 li
176.637 147.545 li
233.945 189.181 li
212.055 256.55 li
212.055 256.55 li
189.898 194.817 mo
191.256 194.817 192.317 195.007 193.08 195.388 cv
193.844 195.77 194.405 196.184 194.766 196.63 cv
195.126 197.075 195.455 197.648 195.752 198.347 cv
196.049 199.047 196.198 199.589 196.198 199.97 cv
196.198 201.878 195.403 203.682 193.812 205.379 cv
192.221 207.075 190.301 208.591 188.053 209.928 cv
185.805 211.264 183.557 212.622 181.309 214.001 cv
179.06 215.379 177.141 217.034 175.55 218.963 cv
173.96 220.894 173.164 223.003 173.164 225.294 cv
173.164 226.821 173.715 228.158 174.819 229.303 cv
175.921 230.448 177.236 231.021 178.763 231.021 cv
203.643 231.021 li
205.339 231.021 206.654 230.766 207.587 230.258 cv
208.224 229.961 208.679 229.409 208.955 228.603 cv
209.231 227.798 209.369 226.726 209.369 225.389 cv
209.369 224.053 209.242 222.972 208.987 222.145 cv
208.733 221.317 208.234 220.703 207.492 220.299 cv
206.75 219.896 205.508 219.695 203.77 219.695 cv
192.125 219.695 li
192.125 219.376 li
193.716 218.74 li
196.176 217.765 198.976 215.877 202.115 213.078 cv
203.6 211.764 204.872 210.024 205.933 207.86 cv
206.993 205.697 207.524 203.406 207.524 200.988 cv
207.524 196.45 205.933 192.409 202.751 188.867 cv
199.57 185.325 195.423 183.554 190.312 183.554 cv
185.2 183.554 181.064 185.303 177.905 188.803 cv
174.744 192.303 173.164 196.258 173.164 200.67 cv
173.164 202.155 173.27 203.237 173.482 203.914 cv
174.033 205.528 175.794 206.333 178.763 206.333 cv
181.436 206.333 183.09 205.824 183.727 204.806 cv
184.066 204.212 184.268 203.682 184.331 203.215 cv
184.395 202.748 184.427 202.049 184.427 201.115 cv
184.427 200.733 li
184.681 199.27 li
184.808 198.295 185.37 197.308 186.367 196.311 cv
187.363 195.315 188.541 194.817 189.898 194.817 cv
154.761 202.579 mo
154.761 225.294 li
154.761 226.312 154.793 227.087 154.857 227.617 cv
154.92 228.147 155.121 228.73 155.461 229.366 cv
156.098 230.47 157.73 231.021 160.361 231.021 cv
163.075 231.021 164.729 230.448 165.324 229.303 cv
165.663 228.667 165.865 228.105 165.928 227.617 cv
165.992 227.129 166.024 226.398 166.024 225.421 cv
166.024 189.98 li
166.024 188.454 165.917 187.33 165.706 186.608 cv
165.493 185.971 165.197 185.517 164.814 185.24 cv
164.433 184.965 163.881 184.721 163.16 184.508 cv
162.438 184.297 161.431 184.19 160.138 184.19 cv
158.844 184.19 157.645 184.742 156.543 185.844 cv
156.352 185.971 li
145.917 195.388 li
144.39 196.747 143.626 197.998 143.626 199.142 cv
143.626 200.288 144.294 201.603 145.631 203.088 cv
146.967 204.573 148.249 205.315 149.48 205.315 cv
150.71 205.315 152.194 204.658 153.934 203.342 cv
154.761 202.579 li
level3{
gsave
clp
[4.89396e-09 109.005 -109.005 4.89396e-09 176.637 147.545 ]ct
/0 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.89396e-09 109.005 -109.005 4.89396e-09 176.637 147.545 ]ct
clp
/0 /Gradient get_res exec grestore
}if
np
176.572 298.311 mo
123.638 280.536 li
125.716 277.701 li
141.219 256.55 li
212.055 256.55 li
219.706 266.801 li
229.957 280.536 li
229.957 280.536 li
176.572 298.311 li
184.757 270.183 mo
177.175 270.183 171.27 271.222 167.123 273.249 cv
163.077 275.226 161.304 277.613 161.688 280.366 cv
161.944 282.197 163.348 283.659 165.874 284.781 cv
168.356 285.882 171.922 286.445 176.615 286.483 cv
176.742 286.484 176.868 286.485 176.993 286.485 cv
180.532 286.485 183.576 286.073 186.151 285.24 cv
188.863 284.363 190.306 283.237 190.446 281.851 cv
190.562 280.7 189.315 279.638 186.676 278.672 cv
184 277.692 180.74 277.187 176.93 277.168 cv
176.888 277.168 176.847 277.168 176.805 277.168 cv
175.41 277.168 174.003 277.287 172.587 277.525 cv
172.862 277.214 li
173.306 276.723 174.357 276.17 176.025 275.553 cv
176.847 275.249 178.02 274.992 179.545 274.782 cv
181.029 274.577 182.563 274.474 184.143 274.474 cv
184.194 274.474 184.244 274.474 184.295 274.474 cv
184.411 274.475 184.524 274.475 184.635 274.475 cv
186.093 274.475 187.14 274.433 187.778 274.348 cv
189.316 274.165 190.137 273.52 190.24 272.397 cv
190.334 271.385 189.817 270.73 188.686 270.444 cv
188.038 270.275 186.929 270.189 185.36 270.184 cv
184.988 270.183 li
184.911 270.183 184.834 270.183 184.757 270.183 cv
164.154 265.275 mo
163.301 265.275 162.689 266.015 162.794 266.908 cv
162.807 267.02 li
162.911 267.901 163.676 268.615 164.509 268.617 cv
190.234 268.675 li
190.236 268.675 190.237 268.675 190.238 268.675 cv
191.084 268.675 191.85 267.959 191.939 267.071 cv
191.951 266.958 li
192.042 266.056 191.405 265.307 190.535 265.306 cv
164.156 265.275 li
164.155 265.275 164.155 265.275 164.154 265.275 cv
176.525 283.254 mo
176.465 283.254 176.403 283.254 176.341 283.254 cv
174.535 283.241 173.35 283.077 172.782 282.762 cv
172.478 282.596 172.276 282.441 172.176 282.297 cv
172.075 282.153 172.018 281.953 172.004 281.697 cv
171.99 281.441 172.36 281.186 173.115 280.932 cv
173.849 280.686 174.916 280.562 176.314 280.562 cv
176.363 280.562 176.413 280.563 176.463 280.563 cv
177.935 280.572 179.003 280.72 179.66 281.005 cv
180.316 281.29 180.639 281.591 180.633 281.91 cv
180.617 282.809 179.247 283.254 176.525 283.254 cv
level3{
gsave
clp
[2.0109e-09 -44.6866 44.6866 2.0109e-09 176.797 301.833 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.0109e-09 -44.6866 44.6866 2.0109e-09 176.797 301.833 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
229.957 280.536 mo
219.706 266.801 li
212.055 256.55 li
233.945 189.181 li
262.668 179.55 li
262.668 235.288 li
229.957 280.536 li
237.049 218.898 mo
236.864 218.898 236.625 219.014 236.333 219.25 cv
236.037 219.488 235.737 219.951 235.433 220.639 cv
235.128 221.326 234.768 222.283 234.353 223.511 cv
233.938 224.738 233.643 225.716 233.467 226.446 cv
233.292 227.175 233.246 227.721 233.329 228.087 cv
233.41 228.451 233.524 228.697 233.667 228.827 cv
233.81 228.956 234.058 229.075 234.411 229.186 cv
235.794 229.618 237.038 231.83 238.139 235.767 cv
238.579 237.393 239.01 238.995 239.433 240.574 cv
239.852 242.138 240.345 243.503 240.909 244.672 cv
241.469 245.829 242.041 246.478 242.625 246.623 cv
242.903 246.692 243.15 246.726 243.365 246.726 cv
243.598 246.726 243.793 246.685 243.951 246.604 cv
244.643 246.315 245.411 244.93 246.259 242.448 cv
252.826 223.226 li
253.277 221.904 253.548 220.837 253.639 220.022 cv
253.702 219.519 253.638 219.109 253.448 218.792 cv
253.258 218.474 252.946 218.23 252.514 218.062 cv
252.252 217.96 252.008 217.909 251.78 217.909 cv
251.628 217.909 251.484 217.932 251.347 217.977 cv
251.004 218.09 250.649 218.447 250.284 219.046 cv
249.919 219.646 249.488 220.673 248.992 222.128 cv
244.765 234.527 li
244.575 234.469 244.379 233.969 244.175 233.025 cv
243.969 232.075 243.723 230.926 243.435 229.575 cv
243.146 228.215 242.791 226.825 242.369 225.405 cv
241.944 223.972 241.348 222.659 240.578 221.464 cv
239.801 220.257 238.902 219.467 237.88 219.099 cv
237.517 218.968 237.242 218.9 237.055 218.898 cv
237.053 218.898 237.051 218.898 237.049 218.898 cv
level3{
gsave
clp
[-71.5167 -27.593 27.593 -71.5167 262.612 236.332 ]ct
/2 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-71.5167 -27.593 27.593 -71.5167 262.612 236.332 ]ct
clp
/2 /Gradient get_res exec grestore
}if
np
123.638 280.536 mo
90.9679 235.288 li
90.9679 179.55 li
119.33 189.181 li
119.711 188.903 li
119.711 188.904 li
141.262 256.305 li
141.178 256.421 li
125.707 277.691 li
123.638 280.536 li
121.543 234.802 mo
121.336 234.802 121.044 234.857 120.67 234.966 cv
107.873 238.707 li
107.36 238.857 107.013 239.055 106.828 239.3 cv
106.673 239.538 106.601 239.827 106.611 240.168 cv
106.621 240.509 106.687 240.987 106.808 241.6 cv
106.929 242.214 107.161 243.052 107.503 244.114 cv
107.845 245.177 108.345 246.113 109.005 246.928 cv
109.098 247.074 li
115.102 254.989 li
115.935 256.098 116.558 256.654 116.968 256.654 cv
116.994 256.654 117.019 256.651 117.044 256.647 cv
117.454 256.572 117.749 255.925 117.927 254.699 cv
118.106 253.466 118.029 252.325 117.697 251.28 cv
117.364 250.236 116.724 249.027 115.778 247.658 cv
115.28 247.021 li
123.783 245.014 li
124.183 244.919 124.479 244.819 124.67 244.713 cv
124.862 244.607 125.037 244.373 125.194 244.008 cv
125.454 243.332 125.213 241.811 124.469 239.441 cv
123.699 236.993 123.002 235.562 122.382 235.155 cv
122.036 234.922 121.759 234.805 121.55 234.802 cv
121.548 234.802 121.545 234.802 121.543 234.802 cv
113.598 209.344 mo
113.576 209.344 113.555 209.345 113.535 209.347 cv
113.333 209.37 113.048 209.463 112.681 209.626 cv
100.295 215.112 li
99.7991 215.332 99.4648 215.583 99.2896 215.865 cv
99.1427 216.135 99.0772 216.449 99.0921 216.809 cv
99.1071 217.168 99.1786 217.666 99.3052 218.301 cv
99.4326 218.936 99.6705 219.795 100.019 220.878 cv
100.368 221.962 100.869 222.894 101.523 223.677 cv
101.616 223.821 li
107.573 231.484 li
108.365 232.512 108.961 233.027 109.36 233.027 cv
109.405 233.027 109.447 233.021 109.486 233.008 cv
109.884 232.881 110.161 232.161 110.315 230.843 cv
110.47 229.517 110.379 228.318 110.039 227.252 cv
109.699 226.186 109.058 224.983 108.118 223.646 cv
107.624 223.03 li
115.865 219.895 li
116.252 219.748 116.538 219.606 116.723 219.471 cv
116.908 219.336 117.075 219.067 117.222 218.662 cv
117.465 217.915 117.207 216.333 116.446 213.912 cv
115.66 211.411 114.961 209.978 114.35 209.621 cv
114.044 209.436 113.793 209.344 113.598 209.344 cv
level3{
gsave
clp
[42 -15.6667 15.6667 42 87.5734 237.402 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42 -15.6667 15.6667 42 87.5734 237.402 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
233.945 189.181 mo
233.945 189.181 li
176.637 147.381 li
176.572 117.462 li
176.572 117.43 li
229.687 134.27 li
262.668 179.55 li
233.945 189.181 li
207.49 144.092 mo
207.222 144.092 206.944 144.102 206.658 144.123 cv
205.575 144.2 204.81 144.537 204.362 145.135 cv
203.156 146.747 203.515 149.007 205.444 151.918 cv
207.377 154.836 210.027 157.522 213.393 159.973 cv
216.759 162.424 220.133 164.118 223.51 165.054 cv
224.734 165.393 225.811 165.562 226.741 165.562 cv
228.374 165.562 229.555 165.042 230.287 164.002 cv
230.717 163.39 230.777 162.523 230.465 161.396 cv
230.154 160.272 229.849 159.454 229.549 158.94 cv
229.249 158.427 228.99 158.014 228.77 157.702 cv
229.744 157.886 li
230.094 157.953 230.465 157.986 230.855 157.986 cv
231.187 157.986 231.534 157.962 231.894 157.914 cv
232.677 157.809 233.221 157.542 233.525 157.111 cv
234.546 155.665 234.222 153.636 232.561 151.026 cv
230.902 148.423 228.501 145.979 225.355 143.691 cv
222.209 141.404 219.121 139.845 216.084 139.012 cv
214.934 138.697 213.928 138.539 213.066 138.539 cv
211.647 138.539 210.618 138.967 209.98 139.822 cv
209.602 140.328 209.503 141.011 209.684 141.871 cv
209.865 142.732 210.064 143.351 210.283 143.728 cv
210.5 144.104 210.691 144.417 210.855 144.667 cv
209.536 144.33 li
208.92 144.171 208.238 144.092 207.49 144.092 cv
220.495 158.233 mo
220.264 158.233 220.003 158.207 219.71 158.154 cv
218.743 157.98 217.544 157.372 216.111 156.33 cv
214.679 155.287 213.715 154.321 213.219 153.431 cv
212.724 152.541 212.624 151.896 212.919 151.494 cv
213.113 151.229 213.46 151.096 213.959 151.096 cv
214.216 151.096 214.513 151.131 214.85 151.201 cv
215.841 151.408 217.043 152.024 218.454 153.051 cv
219.865 154.077 220.81 155.029 221.292 155.905 cv
221.774 156.783 221.871 157.42 221.586 157.818 cv
221.387 158.095 221.023 158.233 220.495 158.233 cv
224.262 151.039 mo
224.087 151.039 223.886 151.019 223.659 150.977 cv
222.941 150.846 222.056 150.398 221.006 149.634 cv
219.956 148.871 219.242 148.155 218.863 147.488 cv
218.484 146.821 218.401 146.344 218.614 146.053 cv
218.759 145.855 219.016 145.756 219.384 145.756 cv
219.555 145.756 219.75 145.777 219.969 145.82 cv
220.66 145.955 221.545 146.415 222.625 147.2 cv
223.704 147.985 224.428 148.701 224.797 149.348 cv
225.166 149.996 225.249 150.462 225.044 150.747 cv
224.904 150.942 224.643 151.039 224.262 151.039 cv
level3{
gsave
clp
[86.1706 0 0 86.1706 176.498 153.305 ]ct
/3 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[86.1706 0 0 86.1706 176.498 153.305 ]ct
clp
/3 /Gradient get_res exec grestore
}if
np
119.33 189.181 mo
90.9679 179.55 li
123.391 134.27 li
176.572 117.43 li
176.572 117.462 li
176.637 147.381 li
176.637 147.545 li
119.711 188.903 li
119.33 189.181 li
132.682 158.281 mo
132.359 158.281 132.048 158.331 131.75 158.431 cv
131.242 158.601 130.351 159.18 129.075 160.17 cv
125.944 162.597 124.638 164.262 125.16 165.164 cv
125.35 165.492 125.771 165.777 126.426 166.02 cv
126.659 166.18 li
126.848 166.262 127.144 166.33 127.549 166.38 cv
127.851 166.411 128.155 166.426 128.461 166.426 cv
129.324 166.426 130.207 166.305 131.11 166.063 cv
134.367 165.152 137.95 163.18 141.84 160.154 cv
145.755 157.109 148.646 154.053 150.51 151.001 cv
152.358 147.971 152.727 145.678 151.635 144.115 cv
151.2 143.492 150.475 143.182 149.462 143.182 cv
149.201 143.182 148.922 143.202 148.623 143.243 cv
148.086 143.306 147.429 143.456 146.652 143.694 cv
145.877 143.932 145.307 144.137 144.944 144.307 cv
144.842 144.156 li
146.908 141.702 147.506 139.859 146.65 138.628 cv
146.117 137.862 145.189 137.48 143.867 137.48 cv
143.08 137.48 142.153 137.616 141.086 137.886 cv
138.244 138.607 134.935 140.427 131.143 143.354 cv
129.537 144.593 128.139 145.819 126.948 147.033 cv
125.755 148.249 124.866 149.262 124.285 150.069 cv
123.703 150.879 123.229 151.664 122.863 152.424 cv
122.496 153.186 122.289 153.682 122.242 153.91 cv
121.972 155.232 121.907 156.013 122.046 156.251 cv
122.184 156.487 122.454 156.606 122.855 156.606 cv
123.412 156.606 124.222 156.378 125.285 155.921 cv
126.39 155.457 127.337 154.921 128.124 154.311 cv
129.477 153.264 130.288 152.093 130.557 150.802 cv
130.676 150.321 li
130.723 150.025 131.022 149.536 131.569 148.854 cv
132.116 148.174 132.942 147.406 134.05 146.549 cv
135.156 145.694 136.109 145.162 136.909 144.95 cv
137.239 144.864 137.518 144.82 137.746 144.82 cv
138.071 144.82 138.291 144.909 138.407 145.085 cv
138.774 145.645 137.768 146.848 135.385 148.692 cv
134.286 149.543 133.493 150.211 133.005 150.697 cv
131.961 151.789 131.759 152.852 132.403 153.89 cv
132.801 154.531 133.286 154.853 133.858 154.853 cv
134.139 154.853 134.44 154.775 134.762 154.621 cv
135.281 154.397 135.742 154.151 136.142 153.885 cv
136.542 153.62 137.272 153.075 138.336 152.251 cv
139.398 151.427 140.416 150.866 141.392 150.567 cv
141.809 150.439 142.162 150.375 142.449 150.375 cv
142.834 150.375 143.102 150.49 143.253 150.719 cv
143.519 151.121 143.358 151.792 142.772 152.733 cv
142.185 153.677 141.042 154.807 139.346 156.124 cv
138.609 156.697 137.907 157.174 137.241 157.554 cv
135.991 158.24 135.039 158.583 134.387 158.583 cv
134.207 158.583 134.05 158.557 133.916 158.505 cv
133.486 158.355 133.075 158.281 132.682 158.281 cv
level3{
gsave
clp
[-34.0959 -44.1984 44.1984 -34.0959 157.751 179.577 ]ct
/4 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-34.0959 -44.1984 44.1984 -34.0959 157.751 179.577 ]ct
clp
/4 /Gradient get_res exec grestore
}if
np
116.968 256.654 mo
116.558 256.654 115.935 256.098 115.102 254.989 cv
109.098 247.074 li
109.005 246.928 li
108.345 246.113 107.845 245.177 107.503 244.114 cv
107.161 243.052 106.929 242.214 106.808 241.6 cv
106.687 240.987 106.621 240.509 106.611 240.168 cv
106.601 239.827 106.673 239.538 106.828 239.3 cv
107.013 239.055 107.36 238.857 107.873 238.707 cv
120.67 234.966 li
121.044 234.857 121.336 234.802 121.543 234.802 cv
121.545 234.802 121.548 234.802 121.55 234.802 cv
121.759 234.805 122.036 234.922 122.382 235.155 cv
123.002 235.562 123.699 236.993 124.469 239.441 cv
125.213 241.811 125.454 243.332 125.194 244.008 cv
125.037 244.373 124.862 244.607 124.67 244.713 cv
124.479 244.819 124.183 244.919 123.783 245.014 cv
115.28 247.021 li
115.778 247.658 li
116.724 249.027 117.364 250.236 117.697 251.28 cv
118.029 252.325 118.106 253.466 117.927 254.699 cv
117.749 255.925 117.454 256.572 117.044 256.647 cv
117.019 256.651 116.994 256.654 116.968 256.654 cv
level3{
gsave
clp
[42 -15.6667 15.6667 42 87.5734 237.402 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42 -15.6667 15.6667 42 87.5734 237.402 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
109.36 233.027 mo
108.961 233.027 108.365 232.512 107.573 231.484 cv
101.616 223.821 li
101.523 223.677 li
100.869 222.894 100.368 221.962 100.019 220.878 cv
99.6705 219.795 99.4326 218.936 99.3052 218.301 cv
99.1786 217.666 99.1071 217.168 99.0921 216.809 cv
99.0772 216.449 99.1427 216.135 99.2896 215.865 cv
99.4648 215.583 99.7991 215.332 100.295 215.112 cv
112.681 209.626 li
113.048 209.463 113.333 209.37 113.535 209.347 cv
113.555 209.345 113.576 209.344 113.598 209.344 cv
113.793 209.344 114.044 209.436 114.35 209.621 cv
114.961 209.978 115.66 211.411 116.446 213.912 cv
117.207 216.333 117.465 217.915 117.222 218.662 cv
117.075 219.067 116.908 219.336 116.723 219.471 cv
116.538 219.606 116.252 219.748 115.865 219.895 cv
107.624 223.03 li
108.118 223.646 li
109.058 224.983 109.699 226.186 110.039 227.252 cv
110.379 228.318 110.47 229.517 110.315 230.843 cv
110.161 232.161 109.884 232.881 109.486 233.008 cv
109.447 233.021 109.405 233.027 109.36 233.027 cv
level3{
gsave
clp
[42 -15.6667 15.6667 42 87.5734 237.402 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[42 -15.6667 15.6667 42 87.5734 237.402 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
243.365 246.726 mo
243.15 246.726 242.903 246.692 242.625 246.623 cv
242.041 246.478 241.469 245.829 240.909 244.672 cv
240.345 243.503 239.852 242.138 239.433 240.574 cv
239.01 238.995 238.579 237.393 238.139 235.767 cv
237.038 231.83 235.794 229.618 234.411 229.186 cv
234.058 229.075 233.81 228.956 233.667 228.827 cv
233.524 228.697 233.41 228.451 233.329 228.087 cv
233.246 227.721 233.292 227.175 233.467 226.446 cv
233.643 225.716 233.938 224.738 234.353 223.511 cv
234.768 222.283 235.128 221.326 235.433 220.639 cv
235.737 219.951 236.037 219.488 236.333 219.25 cv
236.625 219.014 236.864 218.898 237.049 218.898 cv
237.051 218.898 237.053 218.898 237.055 218.898 cv
237.242 218.9 237.517 218.968 237.88 219.099 cv
238.902 219.467 239.801 220.257 240.578 221.464 cv
241.348 222.659 241.944 223.972 242.369 225.405 cv
242.791 226.825 243.146 228.215 243.435 229.575 cv
243.723 230.926 243.969 232.075 244.175 233.025 cv
244.379 233.969 244.575 234.469 244.765 234.527 cv
248.992 222.128 li
249.488 220.673 249.919 219.646 250.284 219.046 cv
250.649 218.447 251.004 218.09 251.347 217.977 cv
251.484 217.932 251.628 217.909 251.78 217.909 cv
252.008 217.909 252.252 217.96 252.514 218.062 cv
252.946 218.23 253.258 218.474 253.448 218.792 cv
253.638 219.109 253.702 219.519 253.639 220.022 cv
253.548 220.837 253.277 221.904 252.826 223.226 cv
246.259 242.448 li
245.411 244.93 244.643 246.315 243.951 246.604 cv
243.793 246.685 243.598 246.726 243.365 246.726 cv
level3{
gsave
clp
[-71.5167 -27.593 27.593 -71.5167 262.612 236.332 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-71.5167 -27.593 27.593 -71.5167 262.612 236.332 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
176.993 286.485 mo
176.868 286.485 176.742 286.484 176.615 286.483 cv
171.922 286.445 168.356 285.882 165.874 284.781 cv
163.348 283.659 161.944 282.197 161.688 280.366 cv
161.304 277.613 163.077 275.226 167.123 273.249 cv
171.27 271.222 177.175 270.183 184.757 270.183 cv
184.834 270.183 184.911 270.183 184.988 270.183 cv
185.36 270.184 li
186.929 270.189 188.038 270.275 188.686 270.444 cv
189.817 270.73 190.334 271.385 190.24 272.397 cv
190.137 273.52 189.316 274.165 187.778 274.348 cv
187.14 274.433 186.093 274.475 184.635 274.475 cv
184.524 274.475 184.411 274.475 184.295 274.474 cv
184.244 274.474 184.194 274.474 184.143 274.474 cv
182.563 274.474 181.029 274.577 179.545 274.782 cv
178.02 274.992 176.847 275.249 176.025 275.553 cv
174.357 276.17 173.306 276.723 172.862 277.214 cv
172.587 277.525 li
174.003 277.287 175.41 277.168 176.805 277.168 cv
176.847 277.168 176.888 277.168 176.93 277.168 cv
180.74 277.187 184 277.692 186.676 278.672 cv
189.315 279.638 190.562 280.7 190.446 281.851 cv
190.306 283.237 188.863 284.363 186.151 285.24 cv
183.576 286.073 180.532 286.485 176.993 286.485 cv
176.314 280.562 mo
174.916 280.562 173.849 280.686 173.115 280.932 cv
172.36 281.186 171.99 281.441 172.004 281.697 cv
172.018 281.953 172.075 282.153 172.176 282.297 cv
172.276 282.441 172.478 282.596 172.782 282.762 cv
173.35 283.077 174.535 283.241 176.341 283.254 cv
176.403 283.254 176.465 283.254 176.525 283.254 cv
179.247 283.254 180.617 282.809 180.633 281.91 cv
180.639 281.591 180.316 281.29 179.66 281.005 cv
179.003 280.72 177.935 280.572 176.463 280.563 cv
176.413 280.563 176.363 280.562 176.314 280.562 cv
level3{
gsave
clp
[2.0109e-09 -44.6866 44.6866 2.0109e-09 176.797 301.833 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.0109e-09 -44.6866 44.6866 2.0109e-09 176.797 301.833 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
128.461 166.426 mo
128.155 166.426 127.851 166.411 127.549 166.38 cv
127.144 166.33 126.848 166.262 126.659 166.18 cv
126.426 166.02 li
125.771 165.777 125.35 165.492 125.16 165.164 cv
124.638 164.262 125.944 162.597 129.075 160.17 cv
130.351 159.18 131.242 158.601 131.75 158.431 cv
132.048 158.331 132.359 158.281 132.682 158.281 cv
133.075 158.281 133.486 158.355 133.916 158.505 cv
134.05 158.557 134.207 158.583 134.387 158.583 cv
135.039 158.583 135.991 158.24 137.241 157.554 cv
137.907 157.174 138.609 156.697 139.346 156.124 cv
141.042 154.807 142.185 153.677 142.772 152.733 cv
143.358 151.792 143.519 151.121 143.253 150.719 cv
143.102 150.49 142.834 150.375 142.449 150.375 cv
142.162 150.375 141.809 150.439 141.392 150.567 cv
140.416 150.866 139.398 151.427 138.336 152.251 cv
137.272 153.075 136.542 153.62 136.142 153.885 cv
135.742 154.151 135.281 154.397 134.762 154.621 cv
134.44 154.775 134.139 154.853 133.858 154.853 cv
133.286 154.853 132.801 154.531 132.403 153.89 cv
131.759 152.852 131.961 151.789 133.005 150.697 cv
133.493 150.211 134.286 149.543 135.385 148.692 cv
137.768 146.848 138.774 145.645 138.407 145.085 cv
138.291 144.909 138.071 144.82 137.746 144.82 cv
137.518 144.82 137.239 144.864 136.909 144.95 cv
136.109 145.162 135.156 145.694 134.05 146.549 cv
132.942 147.406 132.116 148.174 131.569 148.854 cv
131.022 149.536 130.723 150.025 130.676 150.321 cv
130.557 150.802 li
130.288 152.093 129.477 153.264 128.124 154.311 cv
127.337 154.921 126.39 155.457 125.285 155.921 cv
124.222 156.378 123.412 156.606 122.855 156.606 cv
122.454 156.606 122.184 156.487 122.046 156.251 cv
121.907 156.013 121.972 155.232 122.242 153.91 cv
122.289 153.682 122.496 153.186 122.863 152.424 cv
123.229 151.664 123.703 150.879 124.285 150.069 cv
124.866 149.262 125.755 148.249 126.948 147.033 cv
128.139 145.819 129.537 144.593 131.143 143.354 cv
134.935 140.427 138.244 138.607 141.086 137.886 cv
142.153 137.616 143.08 137.48 143.867 137.48 cv
145.189 137.48 146.117 137.862 146.65 138.628 cv
147.506 139.859 146.908 141.702 144.842 144.156 cv
144.944 144.307 li
145.307 144.137 145.877 143.932 146.652 143.694 cv
147.429 143.456 148.086 143.306 148.623 143.243 cv
148.922 143.202 149.201 143.182 149.462 143.182 cv
150.475 143.182 151.2 143.492 151.635 144.115 cv
152.727 145.678 152.358 147.971 150.51 151.001 cv
148.646 154.053 145.755 157.109 141.84 160.154 cv
137.95 163.18 134.367 165.152 131.11 166.063 cv
130.207 166.305 129.324 166.426 128.461 166.426 cv
level3{
gsave
clp
[-34.0959 -44.1984 44.1984 -34.0959 157.751 179.577 ]ct
/8 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[-34.0959 -44.1984 44.1984 -34.0959 157.751 179.577 ]ct
clp
/8 /Gradient get_res exec grestore
}if
np
226.741 165.562 mo
225.811 165.562 224.734 165.393 223.51 165.054 cv
220.133 164.118 216.759 162.424 213.393 159.973 cv
210.027 157.522 207.377 154.836 205.444 151.918 cv
203.515 149.007 203.156 146.747 204.362 145.135 cv
204.81 144.537 205.575 144.2 206.658 144.123 cv
206.944 144.102 207.222 144.092 207.49 144.092 cv
208.238 144.092 208.92 144.171 209.536 144.33 cv
210.855 144.667 li
210.691 144.417 210.5 144.104 210.283 143.728 cv
210.064 143.351 209.865 142.732 209.684 141.871 cv
209.503 141.011 209.602 140.328 209.98 139.822 cv
210.618 138.967 211.647 138.539 213.066 138.539 cv
213.928 138.539 214.934 138.697 216.084 139.012 cv
219.121 139.845 222.209 141.404 225.355 143.691 cv
228.501 145.979 230.902 148.423 232.561 151.026 cv
234.222 153.636 234.546 155.665 233.525 157.111 cv
233.221 157.542 232.677 157.809 231.894 157.914 cv
231.534 157.962 231.187 157.986 230.855 157.986 cv
230.465 157.986 230.094 157.953 229.744 157.886 cv
228.77 157.702 li
228.99 158.014 229.249 158.427 229.549 158.94 cv
229.849 159.454 230.154 160.272 230.465 161.396 cv
230.777 162.523 230.717 163.39 230.287 164.002 cv
229.555 165.042 228.374 165.562 226.741 165.562 cv
213.959 151.096 mo
213.46 151.096 213.113 151.229 212.919 151.494 cv
212.624 151.896 212.724 152.541 213.219 153.431 cv
213.715 154.321 214.679 155.287 216.111 156.33 cv
217.544 157.372 218.743 157.98 219.71 158.154 cv
220.003 158.207 220.264 158.233 220.495 158.233 cv
221.023 158.233 221.387 158.095 221.586 157.818 cv
221.871 157.42 221.774 156.783 221.292 155.905 cv
220.81 155.029 219.865 154.077 218.454 153.051 cv
217.043 152.024 215.841 151.408 214.85 151.201 cv
214.513 151.131 214.216 151.096 213.959 151.096 cv
219.384 145.756 mo
219.016 145.756 218.759 145.855 218.614 146.053 cv
218.401 146.344 218.484 146.821 218.863 147.488 cv
219.242 148.155 219.956 148.871 221.006 149.634 cv
222.056 150.398 222.941 150.846 223.659 150.977 cv
223.886 151.019 224.087 151.039 224.262 151.039 cv
224.643 151.039 224.904 150.942 225.044 150.747 cv
225.249 150.462 225.166 149.996 224.797 149.348 cv
224.428 148.701 223.704 147.985 222.625 147.2 cv
221.545 146.415 220.66 145.955 219.969 145.82 cv
219.75 145.777 219.555 145.756 219.384 145.756 cv
level3{
gsave
clp
[86.1706 0 0 86.1706 176.498 153.305 ]ct
/7 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[86.1706 0 0 86.1706 176.498 153.305 ]ct
clp
/7 /Gradient get_res exec grestore
}if
np
190.238 268.675 mo
190.237 268.675 190.236 268.675 190.234 268.675 cv
164.509 268.617 li
163.676 268.615 162.911 267.901 162.807 267.02 cv
162.794 266.908 li
162.689 266.015 163.301 265.275 164.154 265.275 cv
164.155 265.275 164.155 265.275 164.156 265.275 cv
190.535 265.306 li
191.405 265.307 192.042 266.056 191.951 266.958 cv
191.939 267.071 li
191.85 267.959 191.084 268.675 190.238 268.675 cv
level3{
gsave
clp
[2.0109e-09 -44.6866 44.6866 2.0109e-09 176.797 301.833 ]ct
/9 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.0109e-09 -44.6866 44.6866 2.0109e-09 176.797 301.833 ]ct
clp
/9 /Gradient get_res exec grestore
}if
np
160.361 231.021 mo
157.73 231.021 156.098 230.47 155.461 229.366 cv
155.121 228.73 154.92 228.147 154.857 227.617 cv
154.793 227.087 154.761 226.312 154.761 225.294 cv
154.761 202.579 li
153.934 203.342 li
152.194 204.658 150.71 205.315 149.48 205.315 cv
148.249 205.315 146.967 204.573 145.631 203.088 cv
144.294 201.603 143.626 200.288 143.626 199.142 cv
143.626 197.998 144.39 196.747 145.917 195.388 cv
156.352 185.971 li
156.543 185.844 li
157.645 184.742 158.844 184.19 160.138 184.19 cv
161.431 184.19 162.438 184.297 163.16 184.508 cv
163.881 184.721 164.433 184.965 164.814 185.24 cv
165.197 185.517 165.493 185.971 165.706 186.608 cv
165.917 187.33 166.024 188.454 166.024 189.98 cv
166.024 225.421 li
166.024 226.398 165.992 227.129 165.928 227.617 cv
165.865 228.105 165.663 228.667 165.324 229.303 cv
164.729 230.448 163.075 231.021 160.361 231.021 cv
level3{
gsave
clp
[4.89396e-09 109.005 -109.005 4.89396e-09 176.637 147.545 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.89396e-09 109.005 -109.005 4.89396e-09 176.637 147.545 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
203.643 231.021 mo
178.763 231.021 li
177.236 231.021 175.921 230.448 174.819 229.303 cv
173.715 228.158 173.164 226.821 173.164 225.294 cv
173.164 223.003 173.96 220.894 175.55 218.963 cv
177.141 217.034 179.06 215.379 181.309 214.001 cv
183.557 212.622 185.805 211.264 188.053 209.928 cv
190.301 208.591 192.221 207.075 193.812 205.379 cv
195.403 203.682 196.198 201.878 196.198 199.97 cv
196.198 199.589 196.049 199.047 195.752 198.347 cv
195.455 197.648 195.126 197.075 194.766 196.63 cv
194.405 196.184 193.844 195.77 193.08 195.388 cv
192.317 195.007 191.256 194.817 189.898 194.817 cv
188.541 194.817 187.363 195.315 186.367 196.311 cv
185.37 197.308 184.808 198.295 184.681 199.27 cv
184.427 200.733 li
184.427 201.115 li
184.427 202.049 184.395 202.748 184.331 203.215 cv
184.268 203.682 184.066 204.212 183.727 204.806 cv
183.09 205.824 181.436 206.333 178.763 206.333 cv
175.794 206.333 174.033 205.528 173.482 203.914 cv
173.27 203.237 173.164 202.155 173.164 200.67 cv
173.164 196.258 174.744 192.303 177.905 188.803 cv
181.064 185.303 185.2 183.554 190.312 183.554 cv
195.423 183.554 199.57 185.325 202.751 188.867 cv
205.933 192.409 207.524 196.45 207.524 200.988 cv
207.524 203.406 206.993 205.697 205.933 207.86 cv
204.872 210.024 203.6 211.764 202.115 213.078 cv
198.976 215.877 196.176 217.765 193.716 218.74 cv
192.125 219.376 li
192.125 219.695 li
203.77 219.695 li
205.508 219.695 206.75 219.896 207.492 220.299 cv
208.234 220.703 208.733 221.317 208.987 222.145 cv
209.242 222.972 209.369 224.053 209.369 225.389 cv
209.369 226.726 209.231 227.798 208.955 228.603 cv
208.679 229.409 208.224 229.961 207.587 230.258 cv
206.654 230.766 205.339 231.021 203.643 231.021 cv
level3{
gsave
clp
[4.89396e-09 109.005 -109.005 4.89396e-09 176.637 147.545 ]ct
/1 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[4.89396e-09 109.005 -109.005 4.89396e-09 176.637 147.545 ]ct
clp
/1 /Gradient get_res exec grestore
}if
np
110.005 245.928 mo
109.345 245.113 108.845 244.177 108.503 243.114 cv
108.161 242.052 107.929 241.214 107.808 240.6 cv
107.687 239.987 107.621 239.509 107.611 239.168 cv
107.601 238.827 107.673 238.538 107.828 238.3 cv
108.013 238.055 108.36 237.857 108.873 237.707 cv
121.67 233.966 li
122.048 233.855 122.342 233.801 122.55 233.802 cv
122.759 233.805 123.036 233.922 123.382 234.155 cv
124.002 234.562 124.699 235.993 125.469 238.441 cv
126.213 240.811 126.454 242.332 126.194 243.008 cv
126.037 243.373 125.862 243.607 125.67 243.713 cv
125.479 243.819 125.183 243.919 124.783 244.014 cv
116.28 246.021 li
116.778 246.658 li
117.724 248.027 118.364 249.236 118.697 250.281 cv
119.029 251.325 119.106 252.466 118.927 253.699 cv
118.749 254.925 118.454 255.572 118.044 255.647 cv
117.635 255.721 116.988 255.168 116.102 253.989 cv
110.098 246.074 li
110.005 245.928 li
cp
level3{
gsave
clp
[34.6667 -14.6667 14.6667 34.6667 111.102 247.665 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[34.6667 -14.6667 14.6667 34.6667 111.102 247.665 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
102.523 222.677 mo
101.869 221.894 101.368 220.962 101.019 219.878 cv
100.671 218.795 100.433 217.936 100.305 217.301 cv
100.179 216.666 100.107 216.168 100.092 215.809 cv
100.077 215.449 100.143 215.135 100.29 214.865 cv
100.465 214.583 100.799 214.332 101.295 214.112 cv
113.681 208.626 li
114.048 208.463 114.333 208.37 114.535 208.347 cv
114.739 208.324 115.01 208.416 115.35 208.621 cv
115.96 208.978 116.66 210.411 117.446 212.912 cv
118.207 215.333 118.465 216.915 118.222 217.662 cv
118.075 218.068 117.908 218.336 117.723 218.471 cv
117.538 218.606 117.252 218.748 116.865 218.895 cv
108.624 222.03 li
109.118 222.646 li
110.058 223.983 110.699 225.186 111.039 226.252 cv
111.378 227.318 111.47 228.517 111.315 229.843 cv
111.161 231.161 110.884 231.88 110.486 232.008 cv
110.09 232.135 109.452 231.626 108.573 230.484 cv
102.616 222.821 li
102.523 222.677 li
cp
level3{
gsave
clp
[34.6667 -14.6667 14.6667 34.6667 101.437 224.822 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[34.6667 -14.6667 14.6667 34.6667 101.437 224.822 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
244.259 241.448 mo
243.411 243.93 242.643 245.315 241.951 245.604 cv
241.647 245.76 241.206 245.766 240.625 245.622 cv
240.04 245.478 239.469 244.829 238.909 243.672 cv
238.345 242.503 237.852 241.138 237.433 239.574 cv
237.01 237.995 236.578 236.393 236.139 234.767 cv
235.038 230.831 233.794 228.618 232.411 228.186 cv
232.058 228.075 231.81 227.956 231.667 227.827 cv
231.524 227.697 231.41 227.451 231.329 227.087 cv
231.246 226.721 231.292 226.175 231.467 225.446 cv
231.643 224.716 231.938 223.738 232.353 222.511 cv
232.768 221.283 233.128 220.326 233.433 219.639 cv
233.737 218.951 234.037 218.488 234.333 218.25 cv
234.628 218.012 234.869 217.895 235.055 217.898 cv
235.242 217.9 235.517 217.968 235.88 218.099 cv
236.902 218.467 237.801 219.257 238.578 220.464 cv
239.348 221.659 239.944 222.972 240.369 224.405 cv
240.791 225.825 241.146 227.215 241.435 228.575 cv
241.723 229.926 241.969 231.075 242.175 232.025 cv
242.379 232.969 242.575 233.469 242.765 233.527 cv
246.992 221.128 li
247.488 219.673 247.919 218.646 248.284 218.047 cv
248.649 217.447 249.004 217.09 249.347 216.977 cv
249.689 216.864 250.079 216.892 250.513 217.062 cv
250.946 217.23 251.258 217.474 251.448 217.792 cv
251.638 218.109 251.702 218.519 251.639 219.022 cv
251.548 219.837 251.277 220.904 250.826 222.226 cv
244.259 241.448 li
cp
level3{
gsave
clp
[50.6667 24.3333 -24.3333 50.6667 216.494 217.387 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[50.6667 24.3333 -24.3333 50.6667 216.494 217.387 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
176.341 281.837 mo
179.185 281.857 180.616 281.413 180.633 280.494 cv
180.639 280.174 180.316 279.873 179.66 279.589 cv
179.003 279.303 177.935 279.155 176.463 279.146 cv
174.991 279.137 173.875 279.261 173.115 279.516 cv
172.36 279.77 171.99 280.024 172.004 280.281 cv
172.017 280.536 172.075 280.736 172.175 280.88 cv
172.276 281.025 172.478 281.18 172.782 281.345 cv
173.35 281.66 174.535 281.824 176.341 281.837 cv
cp
190.446 280.434 mo
190.306 281.821 188.863 282.946 186.151 283.824 cv
183.484 284.686 180.315 285.097 176.615 285.067 cv
171.922 285.028 168.356 284.465 165.874 283.364 cv
163.348 282.243 161.944 280.78 161.688 278.949 cv
161.304 276.197 163.077 273.809 167.123 271.832 cv
171.312 269.785 177.295 268.745 184.988 268.767 cv
185.359 268.768 li
186.929 268.772 188.038 268.858 188.686 269.027 cv
189.817 269.314 190.333 269.968 190.24 270.98 cv
190.137 272.103 189.316 272.749 187.778 272.931 cv
187.092 273.023 185.931 273.064 184.295 273.057 cv
182.661 273.051 181.076 273.153 179.544 273.365 cv
178.02 273.575 176.847 273.832 176.025 274.136 cv
174.357 274.753 173.306 275.306 172.862 275.798 cv
172.587 276.108 li
174.046 275.863 175.495 275.744 176.93 275.751 cv
180.74 275.771 184 276.276 186.676 277.255 cv
189.315 278.221 190.562 279.283 190.446 280.434 cv
cp
level3{
gsave
clp
[2.34005e-09 -52.0011 52.0011 2.34005e-09 176.045 313 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[2.34005e-09 -52.0011 52.0011 2.34005e-09 176.045 313 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
141.92 138.886 mo
144.777 138.162 146.633 138.406 147.483 139.628 cv
148.339 140.859 147.741 142.702 145.675 145.156 cv
145.778 145.307 li
146.141 145.137 146.71 144.932 147.486 144.694 cv
148.262 144.456 148.919 144.306 149.456 144.243 cv
150.916 144.043 151.921 144.332 152.468 145.115 cv
153.561 146.678 153.191 148.971 151.343 152.001 cv
149.48 155.053 146.588 158.109 142.673 161.154 cv
138.783 164.181 135.2 166.152 131.943 167.063 cv
130.719 167.391 129.532 167.497 128.383 167.38 cv
127.977 167.33 127.681 167.262 127.493 167.18 cv
127.259 167.02 li
126.604 166.777 126.183 166.492 125.993 166.164 cv
125.471 165.262 126.777 163.598 129.908 161.17 cv
131.184 160.18 132.075 159.601 132.583 159.431 cv
133.246 159.208 133.968 159.232 134.749 159.505 cv
135.371 159.746 136.48 159.43 138.074 158.554 cv
138.74 158.174 139.442 157.697 140.18 157.125 cv
141.876 155.807 143.018 154.677 143.606 153.733 cv
144.191 152.792 144.352 152.121 144.087 151.719 cv
143.822 151.318 143.201 151.268 142.225 151.567 cv
141.249 151.866 140.231 152.427 139.169 153.251 cv
138.106 154.075 137.375 154.62 136.975 154.885 cv
136.575 155.151 136.115 155.397 135.595 155.621 cv
134.616 156.091 133.829 155.845 133.237 154.89 cv
132.593 153.852 132.794 152.789 133.839 151.697 cv
134.326 151.211 135.119 150.543 136.218 149.692 cv
138.601 147.848 139.608 146.645 139.24 146.085 cv
139.043 145.785 138.543 145.74 137.743 145.95 cv
136.942 146.162 135.989 146.694 134.883 147.549 cv
133.776 148.406 132.949 149.174 132.402 149.854 cv
131.855 150.536 131.556 151.025 131.509 151.321 cv
131.39 151.801 li
131.122 153.094 130.311 154.264 128.958 155.311 cv
128.17 155.921 127.224 156.457 126.119 156.921 cv
124.289 157.707 123.21 157.816 122.879 157.251 cv
122.74 157.014 122.806 156.232 123.076 154.91 cv
123.122 154.682 123.33 154.186 123.696 153.424 cv
124.062 152.663 124.536 151.879 125.119 151.069 cv
125.7 150.262 126.588 149.249 127.782 148.033 cv
128.973 146.819 130.37 145.594 131.976 144.354 cv
135.768 141.427 139.077 139.607 141.92 138.886 cv
cp
1 1 1 rgb
f
223.836 151.702 mo
224.041 151.417 223.958 150.95 223.589 150.303 cv
223.22 149.656 222.496 148.94 221.417 148.155 cv
220.337 147.37 219.452 146.91 218.761 146.775 cv
218.07 146.641 217.618 146.718 217.406 147.008 cv
217.193 147.298 217.276 147.776 217.654 148.443 cv
218.033 149.11 218.748 149.825 219.798 150.589 cv
220.848 151.353 221.733 151.801 222.451 151.932 cv
223.169 152.063 223.63 151.987 223.836 151.702 cv
cp
212.011 154.385 mo
212.507 155.275 213.47 156.242 214.903 157.285 cv
216.335 158.327 217.534 158.935 218.501 159.109 cv
219.466 159.282 220.092 159.17 220.378 158.772 cv
220.663 158.375 220.565 157.738 220.083 156.86 cv
219.602 155.983 218.656 155.032 217.245 154.005 cv
215.834 152.979 214.633 152.363 213.641 152.156 cv
212.649 151.95 212.005 152.047 211.711 152.448 cv
211.416 152.851 211.516 153.496 212.011 154.385 cv
cp
229.079 164.956 mo
227.93 166.589 225.671 166.942 222.302 166.009 cv
218.925 165.073 215.551 163.379 212.184 160.928 cv
208.819 158.477 206.168 155.791 204.236 152.873 cv
202.306 149.962 201.948 147.702 203.154 146.09 cv
203.601 145.492 204.366 145.155 205.45 145.077 cv
206.531 145 207.49 145.069 208.328 145.285 cv
209.646 145.622 li
209.483 145.372 209.292 145.059 209.074 144.682 cv
208.856 144.306 208.657 143.687 208.476 142.826 cv
208.295 141.966 208.394 141.283 208.772 140.777 cv
209.798 139.402 211.833 139.133 214.875 139.967 cv
217.912 140.8 221.001 142.359 224.147 144.646 cv
227.293 146.934 229.694 149.378 231.352 151.981 cv
233.014 154.591 233.337 156.62 232.317 158.066 cv
232.013 158.496 231.469 158.764 230.686 158.868 cv
229.901 158.973 229.185 158.964 228.535 158.841 cv
227.562 158.656 li
227.781 158.969 228.041 159.382 228.341 159.895 cv
228.64 160.408 228.945 161.226 229.257 162.351 cv
229.568 163.477 229.509 164.345 229.079 164.956 cv
cp
1 .996078 .823529 rgb
f
164.156 263.859 mo
190.535 263.889 li
191.405 263.891 192.042 264.639 191.951 265.542 cv
191.939 265.654 li
191.849 266.544 191.082 267.261 190.234 267.259 cv
164.509 267.2 li
163.676 267.198 162.911 266.484 162.807 265.603 cv
162.794 265.492 li
162.689 264.598 163.301 263.858 164.156 263.859 cv
cp
level3{
gsave
clp
[1.72563e-09 -38.3474 38.3474 1.72563e-09 177.371 296 ]ct
/12 /Gradient get_res clonedict shfill grestore
}if
level3 not{
gsave
[1.72563e-09 -38.3474 38.3474 1.72563e-09 177.371 296 ]ct
clp
/12 /Gradient get_res exec grestore
}if
np
156.543 187.844 mo
157.645 186.742 158.844 186.19 160.138 186.19 cv
161.431 186.19 162.438 186.297 163.16 186.508 cv
163.881 186.721 164.433 186.965 164.814 187.24 cv
165.197 187.517 165.493 187.971 165.706 188.608 cv
165.917 189.33 166.024 190.454 166.024 191.98 cv
166.024 227.421 li
166.024 228.398 165.992 229.129 165.928 229.617 cv
165.865 230.105 165.663 230.667 165.323 231.303 cv
164.729 232.448 163.075 233.021 160.361 233.021 cv
157.73 233.021 156.098 232.47 155.461 231.366 cv
155.121 230.73 154.92 230.147 154.857 229.617 cv
154.793 229.087 154.761 228.312 154.761 227.294 cv
154.761 204.579 li
153.934 205.342 li
152.194 206.658 150.71 207.315 149.48 207.315 cv
148.249 207.315 146.967 206.573 145.631 205.088 cv
144.294 203.603 143.626 202.288 143.626 201.142 cv
143.626 199.998 144.39 198.747 145.917 197.388 cv
156.352 187.971 li
156.543 187.844 li
cp
1 1 1 rgb
f
203.77 221.695 mo
205.508 221.695 206.75 221.896 207.492 222.299 cv
208.234 222.703 208.733 223.317 208.987 224.145 cv
209.242 224.972 209.369 226.053 209.369 227.389 cv
209.369 228.726 209.231 229.798 208.956 230.603 cv
208.679 231.41 208.224 231.962 207.587 232.258 cv
206.654 232.766 205.339 233.021 203.643 233.021 cv
178.763 233.021 li
177.236 233.021 175.921 232.448 174.819 231.303 cv
173.715 230.158 173.164 228.822 173.164 227.294 cv
173.164 225.003 173.96 222.894 175.55 220.963 cv
177.141 219.034 179.06 217.379 181.309 216.001 cv
183.557 214.622 185.805 213.264 188.053 211.928 cv
190.301 210.591 192.221 209.075 193.812 207.379 cv
195.403 205.682 196.198 203.879 196.198 201.97 cv
196.198 201.589 196.049 201.047 195.752 200.347 cv
195.455 199.648 195.126 199.075 194.766 198.63 cv
194.405 198.184 193.844 197.77 193.08 197.388 cv
192.317 197.007 191.256 196.817 189.898 196.817 cv
188.541 196.817 187.363 197.315 186.367 198.311 cv
185.37 199.308 184.808 200.295 184.681 201.27 cv
184.427 202.733 li
184.427 203.115 li
184.427 204.049 184.395 204.748 184.331 205.215 cv
184.268 205.682 184.066 206.212 183.727 206.806 cv
183.09 207.824 181.436 208.333 178.763 208.333 cv
175.794 208.333 174.033 207.528 173.482 205.915 cv
173.27 205.237 173.164 204.155 173.164 202.67 cv
173.164 198.258 174.744 194.303 177.905 190.803 cv
181.064 187.303 185.2 185.554 190.312 185.554 cv
195.423 185.554 199.57 187.325 202.751 190.867 cv
205.933 194.409 207.524 198.45 207.524 202.988 cv
207.524 205.406 206.993 207.697 205.933 209.86 cv
204.872 212.024 203.6 213.764 202.115 215.078 cv
198.976 217.877 196.176 219.765 193.716 220.741 cv
192.125 221.376 li
192.125 221.695 li
203.77 221.695 li
cp
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
[/Gradient [/0 /1 /2 /3 /4 /5 /6 /7 /8 /9 
/10 /11 /12 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 10.0%%AI8_CreatorVersion: 19.2.1%%For: (Irina Mir) ()%%Title: (dice_poly_orange.eps)%%CreationDate: 21/09/2016 19:39%%Canvassize: 16383%AI9_DataStream%Gb"+`#t#Z@dbc/)5<(<mblueN\XTC/HpB<Icp3ULD5jcVE:?jL8b7E02^<%Dl[)2B0KdtU[:ZM*7abu<dB9[>3l?-Sd691*rk;G>%$QCjY$S#P<OKGXg5A@c*qP,W#V</be7@QF%%,*a=(iH?=7IX9Q;]E0.p0bA]W?qLl\^Tp;qY(?Y0@b7)7J.LHW>9qSRa'.@6E++i%SZ](2T?;fR7Pi`coNKd26#?f3is4_o2gooT*lm^Ted"uT!81!L"2G7)L;rP_+.':N!H9h)[1XCl6p_,6L+eue&Jo>trfM1tGl/co%<MB%p(s/8o_/5Q%4;4b\8,*MQP1d9A@Tt:S/IM[82DCaB+'p>8NW,SP*AfhEhsmW(;e<5j9=e+2#=NQC_nllXYu"#PWl*u7:8a2^%K!0fr"k3:J/ctn3+U,c:jqG7cr@<ghJ3Fnqr\&+Hq$k*F!\Xg8bjK?PLLBh"'bl=S?^Y[OcKP94,)LZQT<u2Sl6%fl_#q+`(rBZG%(_ID#,fi+RqeSi\4'GNK=BYd[ZQT%HV'UL3-)]g&,Pc_jn0G!aPFeV>@W/L&pb._a$?-K+Kt\TdPMVdP@fVF#L5kSt]]dk/-B.;`%h/67&"_FQIrbWV@=*r!0!00=B3Q*M[=,:OCQc%BLoh3_+#C+cngA@GM#/^l^Yt`'!0!N,d"h-$p;'Attp2355Ga-lZf/*,Q]hnH,%_f"iC_8#7mNZ7A4)[]Us<q[e$mPX:o6-u\EfmfD]Cdsima7Ok>/PLOG8D7r56?Z1SOZ?7Sk)2A>FfSe$G?VNMIJBiG[,-O)f'FC2%hu%]i$TpW>g*rE(%pjFPFeaqEY.Z[,6jL?K+oLuBf,8b([Z<Ib2i@:R@8_?>e-;Hblsm`ulL6%rEO0W%*:gsqY?HPgi,@LbZeFX"%SD,&XY*TjhO78t@PQ&2hBfMg%L=4*oFK>?hBm.(UDJd#)rTuMDm:rh4i4cgo`[CPX$HnWVL^fQaq]%a#@<>p<9HU.R=RU;LA:@]E%cq^?!d=HjKH\9Y8hPhUdBsTfVI'D)SXEGEP\p'SOC+&'?3p8fnH+,go!L]+Xl[@ZArA._j>^6]]4TBH0fk_Z&Wnik.X\e9lq^7*r%:8d@RT(9K8-i9D/$(oGH[s0NPm8n-dQcUsfKCRoNRFu5=F=dI9ZuP$Eb;'8Ra]?(U,WXo[c#'f]\I+#(dl>Q;J9s0&e[5.2roE8'%^h9%^\W$'TFkCCdqQ7-j$tL.aIA>@ep:g/(aaB-&*t/CrhY-B,a,!6p=p&["BHkG=i0t2&$he>K`o11ZL-'k6BLCOkhQS_*dc9+s%F]$gDm%%+fM*[)(meI@S!JnIkE80#IdtL[],PiJUWq?Qec$P-`DqaSn$cLc(!u8ZQeBR5cOP-^3WiphQHa"9)s'boAfaj_G&L3n^%#6/!Kqe>b2UE9daqNciW2><_uM!X1eTgR8:#,OA:i"H@7TF@GbY`58/$sC[1,=3,[pdAO1(;o-8=:Qk?QC2F-(ut)dD2N'&7'+I%%n0t[NgL=A@`=RO]JkN9)UNm!RAB[]ZbU`29!fY#S&IL.D5o+o"Rbu=B#SpepLe,JR.>j9:Mi-."gOOJrRH.7:.@#kM'?d+$ag/"`%B,e3=^fp7c"j\\.T3)ie;c4@<"eTY!&CZ/jQLL[#OY5p^0#M<pDo6%;&W[(eWZiHP;&g=GEjQQua2(s'?il.#!9e<5s4Nk3WD*,P%VgM,1ZUS<WV`<cO:\dCW4rQY$mQ\4i"s#d-d64>8'n#)Nf]M[3gEGuIi4ZNuJPUQlZrMcT]G5;"]"ko!/Qhp&%U0liKkjln9P:DX%s-,%18eF7,-)tYR.+e^U.G/-2!G\S:0J<!!Y*@,k&q#Su\-u";$a.XVB4Xs&A[YWOjff^AA5.F*g:"C@9fm.oX0Yg+5Zad[YnWP!%OtN_s/;XuEq?opsXOJ".<%aJo`F<)2eqtC>?PIdJ!=]8frN3RBQfCtKN8lmTFf]$Y7)iYb_`3/MgkmS3@0sA+"qo9J$5,m]7gt1u%d+`??+r+AfA49r*T[X(`&8VPZXMI^@2ORH(6B,<';'N*Y+0,ZB$!OoJ]HV/j+9:di$"aC/8C.l\p':W-T2OS)!bO/G:V\EEEGWmt%N"m@b%ITf+)>d+R_-!OkB>)5goC?*,9]`_`*oXTITEH?I9pK,00W-$%4bH':,smFnhQX!#YUX0a5RE0L!P\uNnc+n<Y6!Yben#*r%G$W#ba$9rBTST^p)sDnTSVX!CMMZk.MEjSkiYJ0u!dP(p1BlhT!SJ3=r5q9Z>JN0b+A?)WCI"_rN$g6J`I,"aku)#]a]g)$T/FNc%,D3NeU"M4?R5:9pV0G`;G>,Ki1!Lcha;e0/<7g'0_J(lU'9ucG#M*#,0ec0.bYi0VCm+l%%=i_?WA60XU-bU(8gt)5Q7E/D&]eh"%"h_>R>e.?KloC6_Yg(C;60Spu;N?:$$U\PL1LeH7SH6\Q_/Y#?B*_uETR:S]p4VopAAT<=3*rk<)#fB^i>BlVIZZo9"bIf@*gEjS%r1BOHl0?BXFqPZrM;3UFHfX.3%%_pWK#3=I,A<((9ndD""RMEdXrK?'_M1Rbod(^^Pc94GZfs[J5?:l(\Ri\mI:VIb1*<+`0`7:J%('k'T#t?,[Bej+e9EQ':5Tum;5h=0J1cKeZ_uXa4E_"#+Vm,crHeoAa&e[e:(.fC+o-fk)`bRVh37%6L59`^sV@b+>-WF\UI'\,N%l*/7gONAq\Fd=;t?@iM5NJ8;irNZijD;4<@!d$EO),$nannep@%(&K<[)U`0UY!saFg;UmCIGSQ-r=Mt_]Q!)'25>NF-Mh:<0V`&%`l[C;&!H^#.(b%!l:@@VOP1oNS586Yq:bin9&W\tKo]*R.*FrhKYA2G-[,O_hom\jFl"V>Yu0X6H4-<Q:5MIU^'#Wu.h4g%J18J.%X'(^!:kmMN`_7Ii2$Flb5Q/WY?`S(g;E/<hRhK?)'k1g?SA)92@Rk'BAcI]$r^2h^;b9`_8c@)+^0AnP-.<[<9'Pt?A,[C+dTF:[%T+#A3Ob$RZ;2qqTA-E+_[S\;Q<gB1MMR,.Y;(YY.L6sHE=gJRf60XB;^tW\(#aW-Bk1%1/\mMK5<Mo#0'.P&]=<&2:`PJF[>L#2V%&;Ids\%s^[_O02%(%3Y7\>1UGMP^t:5Xu)\qTfkbP'-Y<!RW#),P<8J>"],MQ8.+s,Tb&l.h,?.DNR#uCa;n)O\UXM;R1:+VJRS0%3'\e-Pu3E3K+.q"%E<8G*.heH)UA/3'7=d2,"Vo80k3Vl;93^slr3ChXN]!U11H+\r0kYBDY_e4S,(#_C7S9ah0EC46(nSaJ,ae2%#bNs9qu.!$nI3-Z"OQ=`.(gsUpcU%TZ0gkb%2"9@VC]7W[+7-cK_6ZgJ0NXk(^uBOc4HL03t5eoD&["l_*Y2)>6P0)!jc5nfQao:%TT_t3Fppb1G`"kf%)cg0n#Hp)N]j^C(?cH6+<:[jmB0iJ%)!__$o_VF#tQiX2aQ,\KsL#0J-"lf$HB&t)#?#$_NBW^';LoGNm-PR%VH0sQF20&1%]pSu/7k<k&[37]M@A\kMNr$1!p.4]Sa>"c)+NF,5sN.I:%&KE<C(<7OV.k2!&>.$$OhR:$[0;k::LJ5-k>X?!=X;u%*?Gib,4n,FMCmDp_1_uHJ-CLTH.-`$.G$?l0WD&H\n,?t-A^L;K??q&!Mh]!i$`UZ_,LL#G=60N"@aYB#;I$4+ompPIK3EA(D&8E%+;gjV6m%g#_D]m7^p'deK,H`n0P^_>H@BZ7l-r0aDRl<*=[UGJ@d.]SjHaTt?DC=@#Q^l<#M0PtIN;k/Qj$,8R+jS18eRZsXol9s%@ZqsbZ9Z\U/-OHR%"pn4YRj>FDB\p!$c&=!9SQ4WVW(VL#YQ9ZGEN#&#X]t1U';UW&KqQj-/9pWO]smu5V[Ju^hr7&^Zfp[aGLBQ%^i@ku!?%i^FO3&@bp)T>>m_1m$oN5V3Xd7qQO"k4j$0(0,m%:,U1niR)FH'p=Sq'/8>^#e"bI>!$g8E-LCE!XW8>%M0qfr!"&D9l%d9*V<*oq!=LQ3WhCc`AaZKFFp^"ac$1W/gV==VdVfF25k4eL(FU=N_4G]4prj&XMdFI[r:G5hPh[mCb'&K3-?+@1dW4]Ti6JO,^2%SLC"Z>NR>U-Q7LbFE@[NBX^=V8dF+:H[[@$fI08KRWIa<e1,JdP&"?jMHGc+fRSW0Qj=s+5XMs]Tlh?1).IbS6!].)B!WiDc^CT:%%q;M$&]G5q,\8!CZ<'(04rnSQ*UA?fNjd!Dnc:#DQ321OgenBKl0(k"1i?0ejsbPV&*c7Yl]0[$ZOU:(&W0uJH)QCmRL&^L[i.aF%qN_5@.,l+%V!L.h:9Y\nO4o0hmB?kPr*q^^`'$,Z_7g$H5@G*0jZ:b^$Ah]udS?>7m7NoE_%9>aJN7H`Nc9.-Y[BS:5ZlT^*bs>n%k`0FQdfAW!`2MLL9jgfkHO;5@O]SWphpVQomO5CF?u3eCC*$-X5TP]9e'PKi%2CWm*Q181[m(:"rp.iDoW*()5fjC4&PFj5*[4Lu%6qW.h#35f)G,+h8+<2h>i]<#)#[GgZPqLS;W+d5Mdt!m-VW3M.a7)]h!-*D)/7tI[`3Jm>NbC;&J.tI/lPW>]D2#mEd#@FYY`PGj%NF>)N8IP[3SoJd&#?<L8hcT)uGat6Z[q`<fW<6TE;FSGY<7'YGX(U/Oc.Fp$m5@d9ArS$3o4o+q!PsomHH+&51Jk/>cT$cmTlh4"%8q;W_p/=RYS/V$:#8CFk6(/X.-f$l2S_S`F%QtjHm9OK>4$6L/ebt>";P'e;00;);[IQF5G!N:B'eo\`eEuuk[^+cl<U?+T.<-J!%ggPdUK><TVO!A+c.O&[hWbo]CPU)+keXj=[dN;>]JPS^!4ecr_$!&PDk8!b4#o,2CJFW1$"[GfjL/'%U);=]m1LdpVZabr_Z7m!o%LD`VUl*Vt:gjUG,TEE'$8e/Y<obU%"N0p(:OCD`t1Z6B@RW(O<Ym8F5,enhR%&oITPU&F=:h?AD'QH[$WJkO7Gt^8Q&O$]gkCk?B%IN\k.UhD1<[oh)Dnot1lBQUu"Yt4Y(cacG;YVH&SJJ``fa_4p)&E=mR;@8FYjJY0JBb!GE8B>MCo:`;Nm3MbQV"M^pa?uk_4&HHq%.`oR_"Nl286!R7,BH2BIoh%&s6VV*k\YFjDBMZ64BEIaHaZrRqWM-:c5d,m^l%p7r?m09Y[fo+%$See1*K!tE-O*uA,V^K=9jpRk%,Cdk+@jsPXXaO@l6"`=lEphH8"N6us5SA>FpW#%02C<+;Tf#_.l;lJT"f"^m3s'pubbug[FF1=?V\H_N\0)P&.nt%T1VVdLHPR_E%b8LC2:jF#lbSQG1@DI6qdb1,FRt)L%="H(Gcn;9G:^VsmBQCsSNra;0Nj[tdfW!BGIAF@q"LQXq31fP["u>>j60LAF63cid[np1N%$$S!S"2s,ampKrBFpP17>?O!e*5qp,()R:*A]FG02BCUI6mBX;cuNO16H:oB.dT7H3gO)'\H1*k+*]ZnSj;(=k6o3cd;caaNm@1!%KoG_'OpDG@jFNLg)THE]4Yk,WZplFJj&qo7d[TH*H56bJL23uX[3dlq9Tf>6's?2)E_%K#ebQ%tS8Q<f<u(n1B$QKj_oPC3&&#9E%2"M@e^"*amp&POl&+^8boNoOdDCeC7LpZoe`2''QWC/A5WRpAAMGU+3HSH#$`h$PYONa;!>i$\E6o8%%2\?hS"B=_,`c8SC.e_\q%IZ#a:$j,P&n>8M`:'1ikp8aQnKH;io4aW3Af^G1#qFRd;%_T:\SMp\lb*jV5=[/"*A7f,G=0DtMR3TRFL.r:nQnAfG;RA63q3=ql%SVAh1$SZNRTi:S^=.U08eh:kZYgBkEI*/TcDX;2j_>F^d9KY;]`(g_X:Hc$%5E=2C"=Q2a2$6CJUPmY!JoI21N%+1Gp)jWn!EgG:%P8V_(@qS6KRg$C`VN.8m`na7=0]XGOLiFeNcsJ6#B<p#UW^rgd-`$nPIn$8Y(h![6//[pTN,:S'C;B8n/3MI6"XpA!+Hh1g&IH>\%1IV2qE:5Bs:%=O@dp1:'l.Cs;=I)Y!j8_leODsW@moMMd&E=-1FT<E+a\KaFV_2ge%jRL&MDD/>E-B?eM&qj$#NdYoj92sta4drP%W'(_POPC"X-jk[>R('`);I7*V5pBgs6tH6"15mOg*)m3.p/4"a:<'BjRGNc6C>9ePmt7P5%>$UZ&i:SAf+"`XapDN2J=$S&FlI`!%YdqpIE:eC:cQ9mEor^$NmlWZ3Q;Tb_&6kQX^`XnqZjPPu^M^<`oZg]YFnHN$SU1t8Hk@edT_&SEZAri.A:tqVgEuf?"%m\"H2!=E%LC8X?%o`U)RVeC"`^F8/"<gHa2kK)*+A1/2QktS$XcVeubJYO#DPcpd'^@k\nT"mcd.r?<4@<W86ArY)`uqIeeH0;Ug^lHF,+p:%%4<iAl6CfJ([7<MWL""f7B:OYZni13cOag\Nk0T:.2^Q3r@NA@E@hVCG7NkX%),A,IU^rCa]0pPEj1p4E:Ok#V%KTkRO`eGgcbCk)%FTY++`G)%\i?M5#<mCfEXb+:I^g&T)2KJndF:LNPK:c)SFlS;Y"4X+UGZP-#"fFn:&6jiTR.MiULm[jj$]GSmE)8eH$$Hl,mFXu2%*6^K+8:R/J+?ao_3+A:@N`I%H=Z?jr.rQYb$)V2nd@nV4QsaLjf=P"I;]lXm8Zd&kjWjo7BON7/(uPi*/I1F\)m7&L,Qr..!X:\2%+H$?*Y)r/S?uk0]cR)&AnP#<Hi7q=nSSj;S/F-c^?CefD3/B%XSV!9!#QbEF`/Y:YhI=d9"cLIn;2f0kTFRb"7d)P55c;#aa5.";%/_Dd-D&j0'VPpIoqkbOp0Z,[ma8q$P\J?t`JXV2&g@Ylid#0G7WNcO0E"j9G0U1_8hPdZE]'[;FS<XDZ9uFb,U:CD:cc\!LhuP[!%'L+>r9%VQYd)S68iUYJN8[o+L0fVlu@GnXa@-<kD<oMg;aB$F#Y+:%HJPL$Vp>DJY!*5>$U7Lb?)ntPf7\sshBbCNW$3EBab->Qb%^+BEPOCu?3,[Jq6AK$5F^bU&JI0\'lA:QDBeW.I>?r6P9PUc64ke.6WA*#bq!6.@OqT,-NIH]QW_J,4$GA7;ICLEdk4A5Pk)a;4k%oSFc35Z&V>mrf@MS=XbQ5SG@b$O*>a,,G8V0(Z[m$Xt$AU$UNs?4_+G^G(L1MOO0o0u-qF7nofGLiZ`@XsqU?Q6Mj6AtZG&C?l[l%1+of_:sD3Ag,ES*E_V6`?3*Mjc]?>d&S`kF\Ce(]Q322p7"IXPC\f/-[.]URo0jd[#T,U<"JEX-@[nb,JBj(M/9+ERJ5e`eI[l&o%IFcG,$oj=O[Y0B#8*g3if&fDoN2Zmfm$+IO(R[R.i&bnW=obqW)MGZf%YR[fGnMdNN[1hskMZMc=3"&rQ=pD)K*HsJ1%e9'+tDM+%Sj-U&=^$Ne[aD=Y_]^)1L.8>dTLhQt9i/033A?km)B+:SH3(6ZQAgc<ge)tdVM.c9OoHI!Fil"B.@-lmKg9lP8XBe+PuYg9(haPP%!G+n)=?-OX>CZL0"7(Jj+4HNZ&BL5SbG>G56/\gL0$*Da@-3XF0Y1h<D?("[fMa5.b56b:7M:`&(c+]4g?FFC.rkuIXWq\UJ""47%ZmJT<$N:!8(T#W]D1WD9U;3dL(_^IelV[`al-uK5jNK^$+NRYh1Q8Pg7@r:OGZ,!B`sA^WfQ\/3Q-6m>S*:oGG9CE3%%_\%&nTNB%h"),c'Uh-'3mF-m2VPFr^gQBFF94"K0n[mA(kGA58_:/+H.joq+_@<M&Q8qi,rI*?TSYq\pdO+3fu.K=#O">p\jO'bEDZ6+8#Z/Q%f)q4)j+`:##`=[TmP+-$;n!/L*33gA#@%iJ>*($CC=`L[)U_+G./%moAH\,^.,83"pfS^TE*+7Y:DKbY6llF;88HFUd&nrSgR&])%0Q]Pe3bdnNTam$T,J;iCQR9pM63^Je7\ErhD&mU3.$\o,7\15ZT*gDR!.(0p:mb!eAW#TpE2kcU>'8cppL"*19qI#NL!'kSQt^>e%QnTNd)FUDBO:MMYSF*"K0q=l_OYNgI!";fW/En.Q#RdronM7De[P\qWDQB9n)gaFD<eL^_mm'C7Rp^Ne%Y:0h?J4r5J1_("Gr6+`%Jun,lh?75[WNC1I!SE\MAPbKfV5[nG`al%NTLe>.MmS_Bn4:oX;o4lQE?dN9%)$A`"2N;9U/3a/Tp3lr7AMKJ,;:6Jlm$BT1B`PS%)&fnJVFc#*@21UFOc)8+,N@d2SaD#j/g\\3GN$-+e1!saU1l4j$eAVfQd-P'hMR\pHc.qlYMjR99PYr#7otWo02+<+cCLkp+U65)%)=*Bq!"G&7N%XBMe!ItC6&->lP453Q/O;rZfV^'g1.URqc\"ONI6jQB9(n[Wd9,"u1H&XCPZId/iT$,1l8B8-`f%F=U4o0+b9Gnr%h-(k:es3do;/o.uO$#?[$6s[)KjHd!)0MTti-LAc9J]MjW0)?%?9/2MI*C4DNMQ^i;m=r^K&i[rf`bnkUZ[o*FLo+D:-,8/*dW-=%3!TF5a)RX;TMtC:RJ2@HP@eOW`\!Qje7O[`>mk7.I]]i#_!WFnR$_*H!,W)HL0f2"o2%N7#[m4`U$^uGnrS$"3['&>7]M;RSc3UF%?^<n1>Hs.Acfb?EW#S1CGpuock$p"j^"5+f.Aa+Ug]E2(FbrF_!"]/sh3tS3%Y6M5'=CI<_`:9)90+FA!5SZ#Udursqdk4c7O^\I%7`o2L#Y+cu^d.a^PTPKR(XuMEe7X=UA&Q^1O?/Z0liTra^TrE7#\]hq.q>2OlRZl\V"?j=b#oTp(ge7b;O2P2,69#,;Q!.6XA"ou%Fhh:nNV#jl6)7%4iII\B5Vmq#]i8;>*<<4(ped8(%BYI1U%)SdENiroJ#=iaYs:p7!i(l7?\AdJej)"PT9j("$>6A2jn"r!)=(kd%0W()]MS)3;3Q23<dO2qgLljP1$F6iPZWq+N9hC?jjZQ'GXYi]2jYUU!I.j*doe#f`8r4ahnX8R=jKcg\N-9pYW"df7B/,CJXH^dO%<Q6Z#0]pRn*1X<1V=<02WR?`BKss+6TT^M&,k84jdZPFgV7&,n^+C^L:M<6d_WF"mF6G^D[KaZF$d\[0"&#O28[$iU>NONBZg+gV%^7<,Y!;4O*ZUp90>;@&Jo*8tCmf8/n]9NtWAXEu6.BDH,S-UrjD_LsK:`PX#NbH7j`P_mYUbPHbJX9-c=Vn@EJjo"7d5"[X\N,U8%-CggD1@R:.&nt"K[NQG^hb_T[NZ<XJ(,DZG)uu2$JMjk:9*E-MGCE>_"7Nb.Be2DdWgF4-&g;+pN!6'u)=Ik#a>/63:%"YXK!OUk%&4Bkn]nXJiA"RTH(f9%[p;qI0X#KJNEOc'Z]4=YZEDQneR00@u2hGO&VS7u0-9jSbNT;>2=bTBP,Uu4KMts`Bq:%!0]Slu_NN1nd%C(dY5@0#,(c:GkDVQE+9QIrci$]<"qn;p(@%1RlOFDi2rfE_7X]Z\Fe1SHOkJ@&j("[2od'X;ZK&s5E*=d9(me'YucXc'/l+4WYk%j!KL"m15d2btTUYoS4:een,.0q)3B,>cF1r4Y#NU&P-!Af.!$uHY)9AO#1uO?;R;AT@8O)7?fZ#Q$G^m$o)2HlP@Pf7;R\(:DD7>%<S<T%jL@JPJrVXt/[/<k"C+ef"bIV[J``')_43"WSY0kAOmdUQX``?Kac!M]Rg\+SPMRR@BMm@-\`8R!h["BC/CMR/"BlfX8K_VJ%XY>^XTk0BWVuu!?0S7aS"0YWZb7Fg!Mc;p7FD)i1ImHsNO?butWK<?a0@Hj^@;@8>$532/'.W$.?pIb_WuRZG"@4^gG"MG@Ft/9_%0U-Ua$=(+^"q80GJHq]sPNc4^NoDe"d`mS-8Uu@D;PUm1B`aTrG8k.)JP&?VDCMe'GTt0+jo0P*$BVuh$cAMf'+H7da%;!'[>\U^%3fks/7XA-j8@;L_Mg'H8:FN?^B&aB+pOrn=9R"RhU=[nr_msNf7uYX407i8'ZX":j#/<O/S%5%!*o#1lHX:3&#Or(!==VXoH6R#q%7>7[dp_a3KVG]sDL`;sE[8f,!N+:^@5hTtj\mi2CmN?-?i3i`p(jmWSjC3d'@muUS`O2lNa!23QNr]D%0hp:2(3*eEJLb\,[$2p5%)o_%UZnEa`);%#-1M<6d9Ycpr$W?,?pLNm:4'RF3^s^qk!=_PaY2#fZ\IPEnkA]\G#'/07:(nA;<#&;X0`VslKRe4`f[<iTA_\6W%CI%.hE*u:iP$SAYmL`B"/+<Sp9E^B7+q3A+BE^"QK_mSn/pps#aWi,T"`-ju408m..<f4^.$0Z*-@Ch<:X>$iWk\'e$O8M"hl`dk%edU\Sohu+N"V`rj_%3.daY@c]+SAKm9`s=0PLa>NI6.oi'U>c<:/(q#i3Q5tG.(i-b:%mnL,O`s!,QP"&10dp/OK_M\mT,k/228,%cWqJU*K]lGq-Z-6Y#!4@OeVbiWB<ZI14!2/6/g3>p4<-8jghFkjMI68?s/%.70&*B>p$V_*Kpdp3=^U^oJo!V*;P8l0HdYI6=AY-%MEjHrBVkhqV7MbOOdU-fI&X()s3njEe<Vk06cOKZ>uC<!kTZB@:@=$437Z]OIXO)\F%.">YHrGaW0r42%Krb_\-0Mka^fNt@&,5S%J;]N79dD.-8B;3(8F*O/5m86K7J1er;A'12>$^MG3g<>`2c(tBimJ2GB$Dt&Hq]6=-Jb(NTQ56oh;13r(6gag/uET(SPe&]V<VP`%?gA>LAX4hgq7mt(,s2:,;Y/6NVHBK^YLXiqV`i]XH'3W2*1Tq3JYp;Da;,(AZ?I;-jL"c27?XfC3YI.9Vfi?I.,!AAqMl6Ob"Fm=%6%]j5N(tX8g?_cjkt@Y"6lB];!M'HJX\/ch0(*Ll3H8)NocX@<K9p,#H+/07"5HqPirNFK5ZN/_qeSr:<TI`q0Vpei-)EL)&J]Ot%mB(V(qDTiqTiI^VeM]T4`t^S%NMq'!.4O-5+g3lf\jQ[["%bSJahNS]Of"jj;f"_]'ieC*&_Uub'kSF"Yqu5)]pDl-PAE-4;43K3%UOhY'OgC..=WS,;Vj1$Zj&VC=Otg/i6P.P=Ec+7oF\0"I7X7qrX73HlHrM![ok$,F^]HkVS4#ou&-s&9oHut0&:m)Aq.iHLg)0@\%YV_3n1o6pR;PME<,dOpQ4[YkqW%]g:?Ugq.XGd]5^C3aUJQ!23?!HE+Oib-JH<Z\\UD&46A)K4Km(erYMSM5q6<)SdcdOlW0NgCf%[I^6UZW!?gR#$L6)`"NP@l=b]J3Ml@e;o\AN1<O3oSe03Btb^6)9gO)3%8=SIVH$g0*0\mnMIS6mRNA+qF^E>+FR0iS7#<P:?D*J%,Qebh))sVtac^)#3\\[X$"O8KXZhC:82&&_&0?@qY=t$-9"gbZ2(Phc(VQWYZB/O8f[)'=gmYP@4P*QL^k7a&Jr6)T&jTc$o%bL&%oA46kbn26lU_ok&gT.BJFE.oCN$c@b>FHhbormS^.qM]sFC%TQcnZqLMc=$1ik@l$PF6g7^3BH'T01(KpZN`%-uYoD@OdWRQ=aa1%I23^cm*>@)]aB[U9*l@hbq3CJ_AbBqim&c$/uJ[[o9mhFQVFHphsS9#-*#=!468!R<;%T68UDrZ5&_bbdurBP&%dFrRS\]%@"Z,1%&'hiXm4KEb5hao<\p?8.gb6pG2B9J*iBWOVU>&&9;"aRjo5=L<(t2;N$`"9Bf@*9=<9S'ED2>g>+8=_uV\.M8o?%lQ`"=5).C'Ra%\3ZsX/g7D2C%O1m<*BqqjUhUA5&4H#nSb_2\\5%u3cO-nL1pct`L<TeO(m(;@NI3,f22HF`=U^R!+_U;<=5Q5r_f+$ogY)VfR]]:%iBs]d)sMF>ID,f[A)dmdiG4W<9uor-$RuR?p_uI4jZnojbVRW^KgA#)a6").e6\Yamhf'YLW6Qp&)_4S?>t-,6,2HqWE4j1GuWkD%2kFmF?p`:D8lOH+8oO=[2GMPA)eUY0!fHRf'pX_lG8$U+1DST_OtF9UZp395m]"%X*R:W.`a/24bmPNHhGEU7%Q!3SXqoBm,rs$9%)F:"U7+l=l)dJcjj>d]Us+![=hMbt$4/_UB&Kt(MV[e,067RD+BG6nhZQEZ6JT<k6[(;Cc^^DgTH(+Q)?Bg(NMLeYN<JC#TC(uC$%d(31(9N;K!8bAj4RX59LQr\q19Eb^P?Ka63"6D`NI'iBgaikM->$tMoDXnGm:qDNu,S"8q>54T*\?@[>d\bdQol<ngXYRcM,U_7T%<5p\NJkQab!KB=0J5[q-<(>]:Jd%,?Y2jI-R!&7>m?9Pl#>3..e35:Cet;.cF(G>m5#)7W)jdpmTgqDgd1Q3.>QjqE1_]R/E"nGo%8S+>fQsm#"Ybs#ZI9$m9oTdWtR#-bXH^^\U7jUu9YkA_3V6>W7a@_Lq7WYFg*[3]u@Vik*SgdW5h2VJI+aITm!YL]?d</@B#=Tlr%08W5<l\M?tFQ/T"ZU:t+<O<0_>ApLfEJcI??=Y@gm3&NQiD`So+_)f+OL[35..Sf.*/f(K!R1EcGp*m`^Hr_kUPgUd@o^l6%a"H;%J^+P)&n6mM8Uj#5[WR$2oO?NV>(kj@de[3\'>Wf=:i7qSnBX`?,N^VD*=%UV<9dW<@uOJTdi@S_:]q!@Qdb#X3:rL(g`+*bce)(B%3H8NeFZ'4(AB;b7F3/0#A"0G]i:^&%!Xn+FF-8?!1^(C:_PQkEdaso!4YKaCN+eHYMi9CG7AT.*+*:2s`YcSdETJu^;\K@T8pupi%7"l6f/&pn76N9/^'5/>JF"0*@!G(hsC9ll'Vq9F#Dfr.o\\r>J\clhDV`>#3Ype0@>F_L,N#B3;n'U5ff[B@:A$u1D!cge/H<4ol%_>\I"l]R+4XWb.oKL+<Xj=dkp^5F!:V@51sb:*`;LTspRCmoVh@;-uAT\'bkqf&`!$q=6N[NZuPJuoC]Rl\eli9o_:",oY+`LCfM%EC&k$i:\K#"/DY'DNdBuLcPO@0CD_:%2dS+11;Fc`Ab@g'uN!P%8c8EXqb?4k:%R8)''K$g^=_SpYl[],3!:Q=j=CW9Wuob$Qu_Z%3k#9@!#5Eu+"9;RkgUor9^kSNgGn\#>7(VbOf(nMYk6TPk+2V&$ko)O,EA)p(ngSj_9?6PBV.d98KLN/ZtFpCCV#)-8(Y3!'LZBt%2BYp`RGPg#XT`I4g)j+s<Y">YFVF46?u5:PYQt4h\SgGdpW;QW(gq)\fSeF!97P7rF/bMChIGp@h(TWR$`?Z36Y<LH&p#Q#KjnKO%0YeNBi!C@k6a=GJ+'Mn:/8UKbPY+`>d2-U=`jQUm(l.Oh+>EFX^r:hX9ob).'nTIm$X9Q%Fq!!2%b=YlOh]@uL':UJUir!9OMNj*%P(I3qZC-?^Q?]@pnZZku%nak0F<](CkbT^5_Iei)5e]fqYuC7:%b;7+0%<Yl/C(_<ra6nGZ\;XPXt>q#/"6fP?tmH9co,m^54;,J%N&>=#5tK)NX+dW7G:k%MDoJt%#V3=L=Qiqq/)ujBf@j('pO$/T)h*LSC4\3s+tbu,'%+3GPoU*qgh0WUdR%C28#9)ciu2mD/:?`Q%F8$Pk^aSbl.lPWFdoD<ni#)gP60+6&9V@M/T^#,Xb1OO^30R6KY%BRG$=G9/c+6-80d02*)l0p<ZAPI^nrT"IND"d_@(ol3UYg:9%JV2V<oj@hW0pO/_bTmeQ"TtFg'e_H\A:\W-g'Tq$<><?h$6Q6P>B8A1HaW@%Z>a8rdXb,1*H>+`EF`I;K5+bu(P\'%SuQpujZbhe%$'VlnJkO#7l1QQC6N8;sr7^^4H3lq+71@*@=tf<=_pTI,()WmYSLPc0(qXRoe7M`:'*#fG1$0<A^bQ5-2GLsedlc'GaG+u,NO!SX%qP=R#Q'EUijMsH$ebFNnC_*N3,RRJ0JOB^6-dCH<as1[rEWZ_tH%h)Cfa\(e+t9R@mPqFk$3J4B[8U8M5pT`2TE0cZ-&R&`MFrr,%HqiuPd4q/gLf0h+VJS]GBF@L/R8r$On"A4F4pBFdMYR$1`>C8nTdiA\-t`r'1esIVg)6:)Bj(L,<H3$>,>O%/jc!VP-O;HoK[F1L%oVL(s*<qP!AWnSUK:)4nN&T#`.K>Su^p3I5(1j7C?M0SJeEJ`%%#i9E8n"drEiK5`fGUR)O6Y/0Fqbi*^/#eP?Y5g7\"N(VJRk\:%$W>b`\I5:^V?dL,?-ZG$r>e>JGq!eh<rS+'AUU**dSR;SPjXG&;afqdZOp[ud.%ukMS.>M_b&!U<%K6b/+hNlVQb&MHD.eO#<oKF%6j[,%!G0/;/l[FGThe;RksiZr,e6O4r.r,6nHQ6m)bZS[b2.)5#XjW7Ms2EKS3cLeN\eU`BnMSW-/.3556G9f'0=Q"`O(l8lm`'G%iJS_AI>nP-JK0oW^i%2D_%=qYVcZ;InjN^ML>6,cXYKpIQtNQ>0i_pL%P/pJ0BK3,@d[S.UG3A.Xs3HM8S>1^N4IP9[(YMN[\[Ym%AVRW:Mhr7>S4*7e]>W'6Y']h/bcE2FF@sYAEG-H#&ktlqLI$2l,_Z]$`6;SUU&@FEZ,oN,2=a`H'rQ8'C4?gi*.!+(p=JrTBgc-;%S5jReI6uWoHeUi4"cTL6LkACWY4h\c!%)8PV^F^EGE>W]OF-Lc*-_hmGm%WkK?u"DJsu*)"qbfG74#Ne`tn_3]N8<@N+.9FX^_TI%f7EE;,*<P>eq_2#;]5J$^`c>eS_ahhV:QPoqKPP;/?b4gjWPY+?:1LT2f_WHP"l]kJYC!*B/<K7&caALVD@m47d25mBf\(3mATNo%V7?RS9M^kFZB7]T^_t_u>AB2fKh$5P&#131<_?q]Hg1'"dAC+H8:1;s/dSaJV`SNAdrAD@2+cP(6!.OQM3d/+&MadZJJ;XRPRinF%[gg\lPaJ7pnfP#"kV$9K.(qK)h8_$.4pa#Ch@+Ju#-MfHhVh@\ctb-0&PKgMaQ(`"iN-^LPYZ>;1D5h.2Y(%bO5;$:UABn#8./?`%M'((ROGFXpn?^U^X<d0V't-W\-XEOg3D+-EpLXmC,Te[W*S#^/_I"Z0q+C9-NH:sCeEG4Z`).tZLd8/je(\u=2#ODf@hQK9krf([%>mh@7HoL%jmKT=4I8u67=!hf%pUtYTM;#7DErUo$<gZ3RMCQu<%N<;;"V?p5)2&>.0`E2n85tf$KY\"&Z;*9OfVrL%>hRI2!/7=<%A$Jo:TeAcWJZ(P,MIYGC(.baZ:q;M#`)rSrPubLJ(iE4)?\At(E9n2N]S.[`<*VPE68#3G"R_9iD6=O!>37!al(Ak"$rS)7p4n`%%Ddo-ko-!uL'CPF(SL400ebkU:d%,R>-XoY?jt-gu>WEt!U55Q>Be>&T5/85&W[Q<tCXa?2e).+L&j'*"fbZik?jm(I1<J`XfgNuK%#EqN7]=/2[dcT@KlON,W`-<Uf;K.,rXe5fDcH."qp[(_9O,*s_6[=!+WP.8n78TTY6=l5_8>.B:h$ti]p6jMX&KF__N,JL./5\ki%*MLUeXusa6p<>):6,X&q'CW=>]@&in'DQ3r2:e1K?iPin1hm^N18ht,fI2JlG'(."0jnZV-r<"Q/Im'l%BV&@8d*RHj,roa?BSAQ%/_;aCWY.-Woc*Kpr@+R>q.R>?qXT!l02NM'+ENO<^\rl8X\8pkdbLYU3M</U7BCER%`e:S*X1f'1^?MIXe'^lj><sn,uRjd'p=CR%[_9:f9VC;fp"J4[M'ftj#aE%9D-#&Pn.gfJ<da6V,3L8+N$lZD"-$JK^$8AgQh#*e8Xq`Ms&=E>,9Ql-qCMc:VK?"Qm=$UULiWMM%N'f7;MVK`W37#6*b$CMoM-#"-4uk-I[<)7_q&q&/-mn2!C[R*RP]l^S!@j37oP^m"0V`S<O#+94$gfV/E7`SCrgI$Lb8hu#8lqDU%[ojVDT2q=!a2ZDGPG\2&DJqVhYQYu'i_jK^$\EeMSoF/B5bO0M;AD`k8ic`)VcTcm=e@,fn``rF,iBO91b\"?gpmm'clL2,4iDc;%$J(r]>]QG,@-/tsn1a[t%)ZU)21ViO`:spuY6A3g2h=8@Z!ZRuD<_!A=Bcnr;N&/u(4e1dn7tel#'ArtBMFr$H_)hk$*=HWZ#'GT%!(j"qA&G3t5hERSHT6fm6:nYYS"pl^C?[>3;P_[E5'GB?+$HSZ*D1fq-7.9RE`]8YU)Ts4-MUC@N=()6VQ1dqpLDWc0b08MlTfg`%.!aP)5dbMRo2RZCGa6`^5"@[]KFQhH?sf5:I&/ma&XB2so\CNcV216q9)->Jlr;>_%>bThR@.]EroSOEmV&4@pl5TLDIPQt@heVo%<t+Fhmt<SKp,CO4/*U7J9I:ujJEFI8?+Ih=LL^.W07WXpH[$,.?$7B>g)1A:dp;R^?#dmSI2#YABOVu\&Yo#T]H-0QXCsV5kV'cG%(\Alt]qn!J(FiN0Q1W8l#!*h$9,q1Oo$6mTdY4I=D0M6V/KFKp9M0cll"c9C^[7#Y\#MEaK2sD6'nnF$G^:739J7$L^nC%jHQ5u?%X-%oXh4of"1l?!CKaD-JAf,5;asK3D$Rda#Q3ukN^*m9Qc5AXC11_?f"^tr`@nhPK4]lDm6gC7"JKkP%S1^khcC'3*$6^9?;R*S[%,@^X139PRRm[Z+6d;YFI:<juq#C`aeR[W_C).0Kh]Q35>*HA:A[D4V_4S275Z@^$rr@OP&c'm7HMcQa`KVh_UjhPk,0@Yj-aE[Ok%O#16%fu9!;40lkbn4<g9!rFpa_)LZ8]f[9u'ik)snMKnJZtnX;mOWcf[>VXkN^XbF1Olr&A8>sa"EmdIg=Bs(&D0K',?I((R5`g+%c(V@,l(UT"?<LO)5$[r]K.%p>Yjs-1<aKLfVN.0QF?k&IBR;PdcLa;*k>C0@s,:d=:!8):E#I=a.17EiJ[nL94<!9pM0tK+ljftq%2YFFQ@Y!eEAh>Xj\64(VDWI:4U]"6*54Uo77Ba6\ciS_*iQ)DqB>3dt%*%.J&#(MgC]8Ed4EI3)?*Lc2XX[&]4/62rF:_0-SST*@%JS>@+)"[D=\paeO)gospMpVoiFW3TlJPgkV^@"/t*-5'Jeec]4n-cH:*N6jP+rJ8E?n*6+Gl%on8/,CgB_WoHc>Yni$]jX9H/T:8%,SsVQcIs<j&1is;BniBS0Q>t6+U3mp$[coK=_r':>+ks.TN`T?.L-C?f>;10*2\r'HKR20d;h#RT^rT%Ba,"RYJ,J<lGPkI%#eC$%L,,s2pUb(@JFh-MX[BQ2(1WC-%ApP\D5QW(7m"[kSd,ConK#u"i*JK%g6UDNdZ*sh!_4rcJj$PVYM!WL/jO:7KFP1B%$\\R3giEo%d:*4^1><bqChD$&-q2GadtqVH9;e9t3P.Bc^,_.qM7-*VE4"4*0K]7>QnZeWl6eDCp"E(DA@P'V:&1%nr[Z%>*#:T3@;L'%5R4WS%Xme,SOQbJO"hl+Wl-?[+LB1MP%NWuP#9]!'hpU?a!d!Js*QFCq0QWHt>!Z^1Xh>;nJTiVr5lG8Q8N<q_?kH`*.F`#I(n&4mAie]p%3qAXI93>nLI<ml1HK<ouR81*$B#-rMVMgUK(]S%=X(rrm6=U=ccL>P[plUQC)mI>\)m0m$par7b>DBr?=pP<\E-5r6pS8(j`SVM1%:"QScPX.Z_+Sl@W1([.6L_rKiQe)]od@W0'gM&%i=DedN_QAr8Ce>Q%:pCk.'$>7%8B.N['b4?K2`;rje"Dk9VhE?0!h7]tO\%uD%K?3'"8PS36q`N0T&0q;f??Y&7]gd@qBHM//=KkXBZ9PG(m,B[,@"6mWqfoa#KPoB/qQGU"CNn[NfQl/L-ht*tW!sZ9G.%'Uh@K>g%2u[\Pg[NYrT[dft%L5T*B&V%hh.!Qh*G\M6Bf,.hUlE-q_VM-W62DQ"C[e0ii,:Qk+BZB]\@Vtd[Z<r5I&])[[a@[p3'J5(BSK+l%[Xuo+h4:C4`TK^=E3a^$Y1^A3U%n8Qf^,2/&&O#VC"*qp"5B@C*'/isPM2\Z)7Jj]>H.5g_PnNC"7`8E)"\WjBr(:0:G)m/c'iQ_%%Y$,Zk$Jm6re4r<+2MOICkH0bE7dk<[:J7Wm5'[_:H`(#4;Q58Qh6'X*#tF$SbjtlS\7=!:n,FRe!]i&Zi*?Lah\NX)P?nsfYYb;%LTOXc61n0J\RaHd5DRl"jMKRi<r:!^0DTAhLFNPD(i,^uGK`<8S:gZ)!L)k'@K\.*F4U;[2e9*Jm+%9>]k[;;;-U+5Zu[Vum:Bj8%NV9H;1kIp'!;pI^Cl3Y=S+N_5:2fY:dZt\m(<W1K\'o7(nf3@%JUgVU(63gPOrP5)Y7.:n_3E,N&hATKAMC4pVLLYkUL"]-cfWDG%UVARP<[Q9SRF>VGI>LXp`K%Np`H6S+Z*K`DcsKpL.uWZO%q[5mKZ00g(<^VNQ'+p7F75o.msMjnJYim"H&[_e\6hDj_THM$Z!Ui%%I+TFa@`FbUZ<42^pBU@`nu5JT9_-gMg"$rdWZP;trI1Nq0$W7KAQ2oUdF?U9LsFCF58h[Jngei8l8`BIr??ne%b,QUPkmgPSZ`GJ%?(urj#)i:j2lR7Ue_\m7h+g%Gk90cG-dH)Lbrr1LVqiFocSDWpM<0uX9?Usf!FH:KXn3oKZ;!160S-O\Bm+gs5+g'-Xg@lFQY$_W%ZYOaPF'>(qd3&(BWjQB@<m<L_Ok,jjb6R&3r`Q`Ns'<8As1J]e9]eWi=ma?cf@'\GQK:'Q!d6Ybp0]871[*RQglafJWcfAW\jRH.%?6QS:Em*S3=F'M)d$qd$L\cl2[[N2lDRD4J<k(P14$T';g2gQe2$PG1A<;G:^@$A%S]Q2H@kUS1@OlJlc?#Z(0*([ab3%q>^Jktk%Z(.c=g6aGViFS?eQcHBoK;1HA%(r78H]dr\'3r.BUk[rrhcFRc^E!BVI$1ZJQrbN),eOcc,iqe!=m@<TIi&!$QSt8m8giS9aMh\u%X:EK;#Q<p6b2dLY/aH!>&ii.6;."V[7D7*Mk(p$C%b#lJELh6U>&OgjY[V?kEN3ZLf0/@T43*94f(*MR3V(RaPp'FB2KT*PQr\$:%`J4B2"*'1heao$t/1VfG]^/;;Lc/;uOlq4#Y>.7NiF:BQ]UU>Sf3DM1P=+C`46sG7<SWM]*A:8)pL5%F<H4YgIM<S[r5pD;FusF+%--`6ObA*DlinVZBojT$0RAVq<`;)4Q=d]RH_0FAn^@["3O&EBu#ulgATV"$j5C\^n2j"`<7_d]Zerj(^*k\Fp09N2H<M?J4Z+B&*%/2$JKAU0[CdPB1glb<!"1ap_K0_%"?q7:OJk$&<qS_@@Wc<IX(HSP!I0-dAU>\l)GmjZT!TpGD:04+CL5NOn_EPM$L%EidLNq0"a%*As;1>Y-s#$eW^9URb@#-a81t=F8H;OeA(UH2b)!k3)#r=[HWZKFOrpHq2C=>XEqkTT_`slmsH039kWi3R37kFmeJf&n?;?S4'bk%D[[PVEZBnBjnY+fiknU=EANSkF9.EeG)h!LeV:3bS>^m[-SfPb^IE"D:s@.@`dMR*?T>=<k3&rC0;c'CI.^GK=1)mg60`j*h.YoD%Ui2KOIn?i%Wia\l0#EpqZ0Y,%95I"s1l,-M`7H)^9:Q3KLMJLolWL&Mb]IH%A/[jrqqj#'*lR=I?qVe(<f%BS.1r:tM%_$b[:m2S%M%Fs^WoZs.=DUm:&g:;4&;q(8,u0-7_u,jeJR6;`LiAUbZ(.>aG)6kUno1P(4lr_4Lag&j/+q>JbEKu/LC*$*8/JXKQgk-\4BZ?u%FoV3frSP8?i"@U<[mT)*#/C'pVA5^E<6S>N#QLZjlLIK9.rp:5<OtpMLYqMl?Dau:;"GQh=turjK3AH`[?qM,%-i>"6#H8pYYq,H%1Oi#9$a0b]>3Sg5p,%IdXjj6`HWgXI[*kOHltM,9A]#Jms(8A4no1SY>Luq(,ju&es-"g@nZ5e>jF?rXlo+i<R_-i0Q\.q9!dCJJ%2Bmd*>b#>9EI=<)cRRE91,6(@dd#%-<kfn]<J6(q4pq^kKRX41q#>d;%fa3Q58:gt,2G7TYL0L#7u_\`Qd>DhDGhKSns&QTR\##N%HP^T:=ZDo$h'/m=0#!c%jLBMDFiD<[c"<(T?/9F=C$rH4(;8f`f@s;l<OKORD]d01"\YJh]s?]Phm$M='2bP!>e_10IeiK]T8^+r%Wg:*_F!eTudnnQuSaCpgFm@.t1bQ`J^B1kqSP9Prg@JV;2$PG1A<;F:?&Fa9@`gaVYns;SYn]8qT9TqO7@de=/[lSi=`Mh?l=)bN%T=$CVeAKH^dk6^9rG7'r<HXQ7JQ9YZhhYB@iiDZO&^+1mnkqk,c!Fl'Op1UOmHZ5oH1!Il]`DOVV-HG<=&I*h;d)U=0>c":74FSV%4h.:?gJsJYg-et=b(!GTIWREjEC^#VT'XW@B$Isc97Nu5L62-"h+KiXq##!_`@PcV3s*qqkA3UlTDN`E,gBrao>3LF)oj<.pjJol%f3Br"eTgs;UcEY3b+1HCGjQL6BB"K-46[r&p&8qa8_Woi[jUnhm<[g&F8o16dnBu?HV+0bVcR`]FHNd)9Ii?Vb0Moa(TrpnC%]?`%jmb.g;AiN\VNnLPXG8oA*(Ht-\'Z*(B"cqK91IG#g^-M'Sjh(\5Opfq1/0FGb>Dsj]m'e.rC&#'<32+oj*8m],3p5'AN-Rh2t(V^%h$$B4a(1TciW<RR\`]78'UsJZj]abZp9]?O,(i,+dCDq7)6dVs_'-/U?(A5aO.H^E]5Wc=j2+po/lo]EQ1&2D]3+k]3\0+,b'/t:%o]l6)RWE<*9+Xm+\R)/WA*&$A3:&Yhne1e*c=.6d9`!koa]mJ^h,R&G`?4LuEYj#-1"`TdAi`F8dFlg9<k,g*qPoh?kGYIgel)Dc%W38h`s*[OJ1$\cPV>/4`"I<AQ?%Hd&c=Sr8AD-OXVIc$(X(u9If?.?g/A""FiVZ#QFeqba">4BW.rhE0hFY-3q7M"U`lpH&h'[8h%fZ^?LG\M9e`O@_,$A4\(VO$pDFH2CXaT.[?QdkVtm\N,iMdL$sT>f?eW?ZmG-gHUsoOur`fJ.hd.-c:Lp\p'!F/>,jA_DiW("Tr!%>HkDcQHfsIH*G#E#Z$Ugq'j&6q>9&;N`gaIeFTIp\Rt"gLX[MRh/Jh3,!G,2D1lpaQ0$BD/j`^aKmO;P/Z6%c/F768$!8*=BCUoH%=.XpgUT((Q&Qd?n&7&U<5Ru:FSq,o7MCVK<EpU]d'CZGB=EsuIJc.U-k/erR=eD$3*dZ>:ecs[eb>'9Pp9oBad99B(k<+s^-2*>J%rlqO2j]hJU=0UGM]g6.)S)j^qg7d/8^X:8H=i3ejo65R7c@KaA>HcuWJ''R8CtnPWkM'6h*R%s"T5=7b^P5=lQG]L8COV[rp(b,"%ATaWdr5l&.'DY]ha5Zh($p$D5Ra.)%]q\o3Q/e*u<p)Yt.s7?)l8"^f\]c@\YlFIcEk)ab8cG2U^59m@J(Qh&2IUkaPM7XL%CiK_%eEV@5aXLK#lOd1S_s)p>Q,k2m1Q1A@,>-Yc_5sr[9AhJ8d^_b+k\NgHM/m!Qp%!nCM\N!\i]kJ/X?=&BVfT,7gr28fQcP:./;#<o%AMKb?e?<\cQ-H\AR?l.P=P6C2DDNj[?7VLZAM^H)VZ3'cUQsB:XB*g0)Y?[52(bEDb%Ota6bbCF<^tQ\BKB496XC(o.F0Q2he7>f%l-tc@eJtK/AMIIa`VS](R<%88orP$<Kt5BQR]a^n)m2ZLrF1+_<H3MKJnA>CnKg0KWuD-nht^U4)Zs,b#G+-^b4eNPV<'r;csQW:%Hdi1fahFA=hI3`o42#"*TMDt"CCIr4bMrio&&.+N*P-*2@7OiI-[(>A8Di4;<rQGc-S%KrgiHZpA=(^l].BI%pT+(TPtPD#CEi6<%00Nsjq_kXk=uDAX1",jP-aPdNVa'Mg<GP1Ofo3@'pZ[&ha\t0kl](Y,8WC2d6BZDfX5%EYQXf3_"32Ln9FbF9+d_t-Ruf9eGH5r2%?[uIh%.BLcfTURe?S.o1AfZ2YjOW5E:-6S8W$\-=6M=&Ck3'LC:TX311LYd!2j,f,::X9?^.JjHA/`W`@9G$1=&<>YF.E"<C+O"E%Xn>:!Y**a*%c9p#\?AG4'tjVDnt5=)*r+h[f@=2;E7.AL>l">@kPMnBBGOA'1ripm?Gon*5^h3X5$?D2EhY`JTco?*\-P`81$Z*6%A5Nk=ZL$<OJX%'V.XcXib*Il?/ZU;CJbi!'>m0Hm';FjaGYqO\iED7ip]fHn-!:+aLVP4iqQ"[)ad%+smD<W_/s0Ig'e`e%8hV,e%>uA.;XLM8aXqoXG0/XD,"92P.*rHirmE`nt\3ql-/-PAsm@/k^S>c7LK:c#Q$T+NFS_f9M#AG&Orfp;cY#`6alJd>*3[!>$7<$PY%G]a2UqDKsG"ocMNrHD7nIrX2md[jt@dc)_4^CkabIK`eVi[EG/;=!5&pmKFJV)[R<i76^nNd%S-<8*TW4Q?`nJ!BT6)ng1K/%Ic^%bX(nUa$),`j,OiiHa_0Uhr]"aNASAZlZ\*Ng?VDM's7N_D<aGa\>lq.GXY9g8k\-nAP8kX8l78h"dWK`pT!W[;3&iHQ\VHaUiJ#o%iadK:hahlno#dJfpL*)GR(3GKK<!R?r_H`4BB0W)]Y&_E0CN*RI\o&aX;@L`_800amb^-Y+Gl24Q_!h&FC?drfWa:3Enk>@Ioq'N%`EshdbAMA,s*eNcn?@)2=RR4VKi2jA5:O7D[]@G?YOJPn#NY%I<j4fSX3G8:fQ)8hEkg(;hCZf8GHb4pNA$C'45'=>@:S]EkQBfA%-Uo'H6J$;[&%mKo?.e$-4l4\10rOtnZT;48[HZ['Hl^d5VR3%pMnQs-p25"l1,;JtUtVkl9Gc5k@AC&t5`;Ess.N'F;ZjJdm`iVG%h,L&!OY-Nu8RiYSYl>L5/D<$;\)_Gc9cN?+?;PhRoYCZo]*7t2BJN:e[`Q/gS/i]\/7V6'-IB=8VWc)fYSkP*No7Z7<e87DTo'Q5%KtCqU$6IM5\GhtU4c@JPeMug`0TuV>r\"Q$s+;$CY?]]46Z[a%beP2^9GOpR.(D_Bf8!)HTG^ei^;20TrsSf<%4rLJcP6Zoc%$a*%(:]q%[oh\\h6d?_Hi'r-4,\+7[#&6cN*sK9_.e_m06"#en6YP^g>1rZcKDY3"&t=#+$^$26!=(*Uub6/e>S`#2-SgJ6;<'KX0jdJ%%6s<^!-l0mCoUUtWJ3'01Acbq;BlFn4I.bBPKu+M#ROW^Q%:V<ikkTP>+-?'rX8Yo%).)lctB/2(PNC7#DG3hhnNJRK@\ZBRZ[u=%fGVdOj+=)5>I[)5eRgQR,\BNXLG/rb!u@=S`%'d/9>DB\`F^*C8iQrlI!?)rpBNhpH\'.&gu&-UD&g9u>FSm!)t2!f:?K$8[UrN5%bc0/g9ja_actI>/0*_9Q2\K5a:u9D=OQIXNNWHIaBl3,K(:QQp5T4gj'T6AeRk+ma1Q/ITLKY#&2\OIEOjXH5)m=a%>SJ7Za?ilT%r>8#PXj61bPb7(\0%=#9LF;6Va3WN_TA(GLF+8"DIk!KpJ+1ChNT\-GG9.fF>9AHQNm'u!+HkMD]GZn5Nu45-DDk<<m&1W&UFZgC%2LFegH,p2&-e#kocYgiHF#qQY@=^LZ>dJfrJr?!#?c-ZqMD.9^I;'^FRb5mbAW2OEi/Gr%Y*Db!fRc+bWe9TjqS?J6)qZnEQ*lA*%n'k1*r,JV,#u/P@r:XFo$iSC*'A!cW=nV(c2nj5)%mF!?rVMLHH>&6+736<,8Uog)9=d1O:4&\<".D)/[F8[6eTqE-C3euOkB5Ej%j-pc"k1N+#+HF-GnBt!>nbf\ps/#,_LFY+*;6kY4C]4bOdGuJKKtDZ!%f3k7\W8d0]jQ`;l.(Oe6)Sk1SF#"XiOs[Tm1,A+E5_=1%j#91=HOH$ccP)SEE(^!tT9iXu?gof62]K0JcAP[6'^i\1Wm05Gbk88XK0]:Elm89%Si:;Onbp)+060BEVkm.$c?'OX!t[@PajK$H%YAq3/hIR7dI--#.\LBE!M`,HM[>Z.*U?Ag*UM,k3S1U2TU&l6c_3_![q1dSUW2k1]qS0oA0""+`9_gQX@Y8Fa3#R5jJ3JVbdn64F%Sp][PFkLE>>E?6T]iK:7rAW*uW6n<$2BJ9%[e6IUc\"YK3b]T]or$pBDQe[+ca,kMO'F4f/=^1]o)_BUk.MjXA:C<@QX%OR\q<JQ%n_\_sPt^3ahm74(F50FbrPka?,WX<NJp/bJ`.7k+<h#(7/fEuE?MJ]g<uCEa2T6HQhcq-Zg\QN`aRsEA:C\Pr3YN$<NH($fergf+%bB%_mN+rtANK%G(-M4l#3;&=r?Si+lA5KC0#IB;FF5ml46ThO'?.:@MOioR&iE<!hP17mPI%0Br_i(>I(q'dTPCBDiF:id_7e(10%(4=%/#\2LEGqO`FSb*9$+DI!)+nacKdLTB+)Ac^*rKG+aC4D?;*,/u=YtsjsjG?sU6$G:jn-k/=Buo[@gW.4sEDkHVFGF/V?8B>@%s%H[rp'-;CC9LqtYAPho6BCbhKe5U!d[#p"BAoG7VS+_;hQ$9Fa0_4_\)XoP.p@I@[9ar%&qjRUZVY7aHFL0DpU^.,:`Ks+I`9=W%$F<2i%tt3=A9EtJ%\&<3ktEpo$f,P6G.-:A%@bmia]W4Q#$?,tXnM7M1g#i/*Ek*5pU&bUST\CNO*dGQ]5m+l1n<7C3L$?#EctMm%VQ5DF1HW7RXf%XbnVI(.7$?YHqbso;k8,Kc=WDL-HCpA;Ie*6+YZ5TMWeZR5a2p6jKtUp(MeZP6Uq[UMI7ehA?@u"_a<9_B-_B1e%Xj0nu8NnHFa^0V:O[$sl2pFfR.J*kYcDd/Nj2Ti0I,7Mb:T=Ma.h&!@SlY^Mf4gE'\(p5tW_MOifs]Q<qrjHg;&s]bj%ZtM%6U3t%T5G1/9j6Mb8["0VCG:4s@!X:Y]kVo@.)9:kqigEE/].RsA:iF;K0;3$p5Z:Nh<h2#4TF+=A@`)KfVddbS;IF0Zs/"jB(4cBEURHu%nXQ1WUXqEYeOHKh9c86N'df>XRbVUeE:Bl_)'0%%^Dm-(4]!m<#J[d(Ut?)uT^t>=hE;QhJf`5S4bF%XoL'P:Ro'`q4O<p\D/&]*%h9<HhraqH?]5%!(j(@JYg3fH5LX!PG>I2Da94tFq#K[R4:=&gY"$OP.2a5'T^r_@_WofJ[H"5?mN@o/W%)`#QSDkBIRWYdQrm$DY%^$U#t-i5Q?$DhM)'Y.kg??k0Z!j5.Un!#t1CMa?c!1Q$:jO(^?RssA./bUt2'6ho/ZVW7q-6nhR[7M+VC!.&]p.l25p:Acm*/^k!%GOVH!1n4H31\Zss=5IA%i(59V_<*R5Z[Yj>,*/1iC<V-9J's^Vf)0N##L5,k`^'QZbt72g1.&V(*7jWtA9RokAj:@)J1V6L^hO\3%_5;NjSU<H/J'n?dUXL8p#+.OYTWI_@?9Z5=UP&$/8%Z"]BI63f/GRZ>!\ScW[ic5W;!306-BM5,nrMk?.R#)#Tqf3*cAI,5F4*2f%Sae]uG&1eEi:Lks@uFLgKZn5oLuG:([-44MY(^L,.%%`/$_Gf7.<_SdU?OM?i$gjL0.hL+9dTW>%uIJn$i*duWH!6Q]slH#@qF9r%!^ngjIA2sr5UYCr4XiCs%*4K,*>I?fg@`bS8[WKLh2?#b.RVLiH.-[/4Z9^lc],%"I\VJ2Tmq,gPZo$;2`s4f2!^e[A5)16EDqGT%)c(<PmW?3;#jegA3\aNWs'g0\IC$_,HU`_\rMeS"m'j(`Sb[[R79"s64'2u(bbqF"iX=:`")R+r`I1_QC7SZoWDDr.iU4n7@,tr]%6p%'Ad81OL)t?RSX8l;m@nMHXJmr10(%YZDp7WK`%\Rn7OKmQ[*uZ.K/8X_ASTuX\eDdaYl3@VO[LCIDeX5os`tsDrc#E_8m_XoF%Vh\+_%c&(;]+r_:S*$r*2MfeG7TmF[$u5"1lkK$B=bSu^3^DDie1)k'g.$d?<ToW94H>u5?e>":1GJR/G';I#Yg'7.kO)PiDNqHh%7PM0pI;cKIj8Fu+oYfHW`@I>+.NKsr\nNo)o*+<DOM73="n$j+*,Z\-X3Du:?i&eHdtn=6qA75&9[ar!ej""n%fsAmq9=3lXBe'T%oK3AMe[!b?2QMHb9kDml(/9BmS!h?Gml3YVI+C<*g-4d9;K'[/oppg1@:RZaU-Uoe>:`"]2X_]r:,`^2%.>/VD;#+=YDg\=hQ$9E%qr>r!Xj1VC_gVY,c'\F#4(ZS#VC`aiIpuGd7&iuje/pM+laA=M)mlftHc=R==mBOie$N=tFm;Q)SK!9#I8QUp<S9=$[ZTB`cS_2u%^sL(1l8C5);n!4iA^]jc4L8$GSM6"7[5+c/AhuHiflGF_%rj/_\*Ts/CH3&$gGV]R2h7'AO4=Vn?OE&>=QR46,__;gZ_D/SK\G(!%c#/bOXZ9[0gmuLo3ZDimZ.l.@ERiCu>4n]K3,VN3ohX[SLG#oL?B:sl-6Zu=]5$6oT1/ZsA/?R?g[&dc]ME]OMd!"f><TdKbFC"h%9<S=8RL7HqD0ts#NcAc.nJR<F49@\)Uso4EG?dm[ATWq-CtObo]K)><>T6a\&I($qR;4paYD)@-c(AL\ens!PbiV4"9s*6D8%HuY%!4GirgRBo^fVN2f]6G?$]/dA?iKLW'r%O2T@]M](biY%gBk<]PH3iXi"nE]k#6(uG1-&:#!rGFjCm<c"Oe`B=e9]&JB/W%eWW@Fc%JnD\ijn>E7d8>9nmIfZ/g8HWcMN/[9#FR"mC7C>-3>@hpN?!p@)EHM`d$SugNnT-1H?28sZYd:eUX"NkA\;/qGY"`n:YVX.9Jd\A%SCZ](JQh3+NUC_nPN1rDB;*R`KXR/f<gu`>fFB0!H[]>HY\*ee',L7C]DbA:<;C(M.Uf)_J<??[i8thbC2]lLoJE`MGB\*R@$F.O%a'//UQ#PbWR+ChQMRl!RSWe;N$-R:63ue-hh\(Upg`\E%=rk*'V`!g_CNI"CC!`KYj/,+j3*U$H#(7:Fs,96b3fj_S'OtFmf/pc3%lRs"mVUa(u?(42R[Z,?do]Or<VJ3HoV?E&BXVR<-[8ob6]$Z$+\5[^a<E<P0eAc1[II*qN2WK):l9cMtR='n/N6s'c>AJYTVe2b7%46HO>.J@_CRV+22X91he*jXVAhaqlJkoD'1:$663UVgTNZAm9&G!50ASD7>e&tAaqX4^,I9a*F$gNW@[d.mLOC:CgJTc)YhBM2\"%c5>@o*D8&Rf@8*F1!bbE9t.2%_7SdtD'SlC#]BYF2RQBK,mDrOK!S/ZI0q!D5"XI^^@b6&gP)QMk4#7Adt,&tZ@EWkW:oa?H[-0]%icC,<N=1/B7d->^7_8QH)&Bg!PRF%*!S@GP@Z[gB*`j<J6DJB=1ZQ%imhB/3s*Pc_?5RdgT3>-+(iNijd&`\V^0nMcClJa4?kurg%Y:lnb:q'n-Y-]iDXrRsbB*]>uN`'[3rPGdeMDku]c8^nR$d`mqfB=h@+%E^,omGR?,p"S8MnM-.4#MJX*5=bp-8,k*N+p#9p&7(E%Q!3U-gA5oog.EskH];&1gD_4igKjR]O44"IZMBLA::kD&]VfnFeAb@<=P?_cd@X$@nSe._/_Gd'S_e)K]n:rE:,T/GZ`3SU9iG3Y%;1-VU"UNFTPFHernZYAQSXB$0Mb^l_3rrTMbfJ*L5,DfHhDnVD"S:]Y3nUE\8Vh)OD1+OCbb(\6T@pQpZ_<`ff,hFWT_[G7HI+N-%YrQ'Yh%"C]3L4`XKY87F5!QrE8[W5On9r8i&H6L8:g2fNc'$d3,+YFOk=ukc2f;6d.1'PKFK,O/K5r<5H4(ST=Nl$;l:f08W\$M4%m=D5ARfUOXCL!5hqi(];DYH9T"%96<^@k(Q27$9_98ED4%,r7J8&DA<P5USQl`aZ31fJ"JQ^Z>+Rt9CIAC3EMb!ZG1JF$oAeRktO%A&`2"NM$'RSZ>_NSBmk`SU+Z68gr%05T-RS%\l^C+?Q&KahdeUYAmG<0&oJ=Et9Z?mb++YU!T=O&Z5/o*9@ZC0L!P&%/b!Qjlrp!%jP/-Pn(\WsAMcCbBtgt+l$e\=I!C&6WU?$-Aa7R:iYcc!LK#>B=Ye.[QF/3beZR0_D^9&n$p7uXZg9Qj;-l&M!F@TiG@<6@9J89E%=tT0-T0A6F"YA4chDr/"IX:\cLYE?rrV4;/lMEZhq"LsM8rn:Z>:90*gXi$6?b:C>LN90$g&Fg\H*X9Lhg>"Xn\Z1&VgCM?rUAfD%DckKC>O4ec*XZmM#l9gIQ/asBGE;1lZ$GZ_K0.ogU],=XGA[<+rLI^eC@l==3e$YkcD(Ugfdf"1Hs!FcDZ4T;1"8ts(DoqL[b(!4%?QTe.++Gr#?T7Be>Fh=6n`eogjRtr`ICNPphn:OgD#WpAD7ss(4?K(efloJ@dVjX7n69nI]_QaET\4M_IXh"JFSkf&p\LA]gQakd%_sJD(lUPaVB!JfE"=g>irVfQYRZEp+mi@Zg#3?NsCH/U>Istb(KfacIHLTAomqb4=EkhOmnK/eHpAJ?`VtHt>8fQ0umtuH2f@q'r%pXT+ZD*@lCj*#:?-@`a,4qS%o*u*?&pU<dKn,.J.;>Gu+gZ;sjlf$T2f2(hdC=Q8\f!rD9Zu]\H%YMAnh.qE4kInkWcg%@hqG0=l%oPX[e/FMkQrtj[Eo?mML-[]c:h1,>!ULLk/6gOH,0CI`JXl"SDBRR@>`/D=_e+!(q^!QLUX$#^_Kk8^t,l/MllLu4Y]2dM@nAUGI%2XVieVVZ1C)>peHri#be_=`"VG@K6\I<kZT?%8frSNh!VG[(2eNu_R,h/rOu]ab^%W,>n]/bu'rWLqqT:(L!q2q<X-c+!A:+T237%Mosl@KC?:Qh>Xg;UF?'!&(?GNZF1eoro^77heta7Ic.q'GdmA$2D<t@qU9W-IUQ$'FPd>4+$SJk_^[kks60<)pZ$o'ooCd+0K\M2%LAkMEU`0IUQ(E7(ISUO]DuBAK)^WA:jL%nI^aq@a]UslR<ILq`pF@>(=,u]4s(eZ=rSbAO3dgO?]Y"1B:%;5oZs,QEC]*khYM\dh%YH=/00Dbut0n33r?agN^gM]aEIIYj2jl<t*EoWq+HiL%PI_8rM\eW'`55\@FfC_m"?F9H.lZr$NcE69aQ(.I0G&:od/a^ID&%\5p%hu;kWoe/D#LFT;f]"^K):N?Ef?oU0SZ'ES8")Z!RhDOS5%o1ENnmH<_ldu"01&LRY:R,>b[n#58^k4inCfc-JDV_j/lGS12n($XE%AiH#6_G\ZT-iK`A-(%>KSY#42/fm+_%E1H>h7`jOp5Pj1S&O=%rib\NGCM`ZLl<sA)SV5qm2Or,DjF2KldMuj4.FtRV8<9.V1Tb"%Dl\m4q?RR2l[,#Qopb('PHDR5?[MCUW./CI`qNm88b;=?hu@u7[;k@`T!fs8C%ApL[U.a=;83P[k$_LDmJLuc%9q::e*c`Zq?RSU%((8c)nR@Z%#.rVKGFS?9/+Qbbqr-R"2qHR/H,6Rs8)%5_WCq!deQ]q12T$n\n!HBkGQ7$d.X`;d>GYs/D5Xmno):`7iq[HK6$MWi%k9\m^IRAT5^-4UR!?V.:qi\P(F(2]Ac-"EE:D@3k3O)h.lg=Qs`55r5kJ-KWm752]^./D-BB;s[]IU^!YOtE?I:%B8s.L<YCi2?h%*%_m.0M;1gk?7;IFF'_:fRE<L]TM1?^V7E^c)qAoOpnZ,K>Z[!N?A1HQV*^O?\+AY%.l9IQg@HE*rUB]rmUiYE9u;$=UKr/&&l4H%T9\69EUh@F&"]"ETuipFJICgl?OD9'*Ye@'q]c!h1^6,JJC^K%mG@S\\$G2gmOo*"H<"iurOdG>GW,?d.!U39[0?T1Q\+C/]kG/D%qrPj8^:f"%Yj.u7/3GPQ-X`0TbGopYq2ODi4noW'h2HRF1[\rq_"M8"lY])%T3fFENtpEf2=B0q4F5X.gQ*5K<>k6LK=l]nfkJ.Z%Yd#T"Ei'Yg!CsED1d*$\2bSK5juP<)18EdVj%JH1*ZoLeJQj)WcckLg:RS,Q%:22J7W3a-Isi_WQdQ:lj,Z^;M@Y0]/:h*Q?[m;l%^&1`$<u+7Ch5KRBHe+/ngBKkL]CqU-$P7I*5<P`a)HdR)0)a8IMkM+1GnPlMF31a7Ad7rJp#piFq%LjOpLOP;bTVmOYO,k5Q'0;N%@[S<WP\H%ekA"%LQ6S1uCcli;%;fY<lk[sOf_DQ,))n/U@MG<U+goetn8Mo7m*?1<rh2>*l#)LKWa.^Qd5HcFR!)HaJ],Uu!+^r9%%/&$9$iYV+V-Z\GB$&rbWMMH62a2Z0*lI%/=-930&iX+&@cerrfJh>2qIV(-e$(Y,iO;\7moFH.mIU&FUE>YId.EB$<a`kb2TX&$%SaAXKr,Q`Qg9")2@R5$Z0-Y,FnJu9qQ.&7lY.ltL2uYd]ZrK3dl[(/)1?sN4m*7M%Z>.GIGK--R>AVf^0o/kj2fAV*<PR@f2h+J3%gk`?Q>^uD>LDt7/AGH#Qb4FeGQ*M&Q*@/VUmE2J"H[kYt6%a#<C5&FXgbuUY]pD%Vi5*F*gR[kAn,DM4#;AL%G.241p@"<s*O_*8%)oL+_E@&0'od&(i:fDZuN73K#>1dc@X,Q;/<?f487GB_<DKh,BH8a0eHNB1EFRHkfrEBm(!_j!.Fnt>f0hubV-E&Bl6fTGIC#ZK`%:SA^e2/=t.fY2j*VA;eRh!@1DHgkYGeEKKlT9Y?RS$#]De^^rVN$1phe<Ac>cV*O.(uXObl/tPYDO#ZWs*\;)iS`DL:et5lX=[o&%rh4YP=aBj@=4:^_b5rL*/Ut&(7)*U,lka$BGn/mFVpc8kMT@?D_QN&hV/H)2n@6tI`ug96^UBa!s-&6cY:>T/f+U,M5<hE27Ld)f%)*I?dk:hp7h\Rq9]A8l`UceFgEgXnd^#l*EnFZ6X@I<_`YLoU/f4&Blmb^WEYti7>US%L2HG+^sgU2BYnA,.mrpQ=1h+]m+V:-6i%_%>9_')mF:6c7iCdOG(`>5Ek!p>B8jeI6DdSrMCDWjM_4laKUGMr+HnpKQ7Y\(X2/Q#&U$7@(7II!><PUh`'<8jDc.g1<3mBt\VE%%Y%V7rqpg*/_\qN_n1ubX`<P$5bAMsGCuISB(L$B<RMg*fq$9jZ2a3Rf@E)VDEmFZ:>UeR0AcY<#.PcQFT5.Dm`N@C>^i.+qc1,t%Ua1\k+M@<CIr/^,55\9:mm#_!5O=<C2B,(pMf%9qeGIRu-el+Jh@[Q+hLU)rVqqXBoQkl]i9%E\S1/s[i:)g$UN\r[rr1crmC`]0%^\FRto*fi7E*tf]W''D%qU<mF,fO$CH>$OZo/kB'^=18)nTuJ]d1<SIr:8A%3</V_&Acg'VI8Scgup[2H5/>%JGueG=*^mf**.Nc%gRk[#jJLDL_oLm%:"/00(gVIpBE.*I]7],7?c'D1`ZLhfXB4\hp^RnnNW4O"r_lWB5IkZcd73<Q_bKG&Yhl^15K\>pTAM#6SY#3)%/N#IoLX>9lgSc-.lZU45Dkc-u%fTT1!6?6hHh:D(NuMD7STq^JY,f9@LR![fU<GXS3kY?*@oS4<*;bAnh4;483<i2L^O+Aa)jT6f%V1-4hP-$rT*?K`KEZZ1EdESfImGPIJ\.S`Lm-e4jFTFE`^]*H5:N*tN4Dcr>PiUTnS&M"<m2d'Nn))uVo<SAjG?m6=lb0C"@Kjo8%G:QHRm+ap=j0`S&h"eeC1utG1n%[W35.LUj09mbaY>R1QmS;lsNLMkcEoYK[d3Ob(:OskPs4fj8DXV,YTE9f1li,K&>O!UehJf[0%#GjX+^&;h&n0@D;(*?m^K:Qk`pe#RVF(=:/+0GcC5<ODQ](#:@G\CH34?C(*pu1BPT[MXFDHD:4EbjCY7bYu=C[:_EmsOnI?DG!=%oZPte=(=tm-\'o621DoZ09>Q\[dJ6d%=p=XYdc'iIt-5lh"h'+I3]:Y5t0E&+A6%2=@M@"p&8t,Abk^hA$k3h(VOT+5]-Md2/MiY%^G=N:lRLP?jaG`d>;lSE.=89*kOZ5^5ApMoj?]WQ,QFCH2rCY[l-b9h^jC$Q+G4(A*.a!k:+/knZQb8NTK$oeGNt7Xg;!;C.rpi#%6WIiCFe?/#Xt!OaAB(i_c,5AL>S$AtBQ%JVdG(kJHQs>Y+L^00r%`cflWH3#Erj^+I,-e4GBY^0`JqFY3t#,UNk1BtS_;PML$phZ%(c6MH0thm_De6Dj]tF4>_p@kHr@FSU?[ODPs7N_;YFd_MAB+n:V(XIkf9[kKQUtJte\RFECXJ],+D$%Bp$lK@%k0EN=kS5m6TDB7%ME9L]UMJ&2Y<K*@078.lo>3A+CU%.$?Te4J`Mq/k:EJEI?G!f>ZSNPo`1nObF'B_M0'&erDePJ"rKUAE3Q8<;/@tlG=')D2hV_V@%hDi#l3'EmOg_BbYmJ3#[rI],W-s(o69`IA^j7E&_PMO:"STiE#gW(hN&)Y\abh`0/h\"/q?]X6gg6^pdHKeegDi8dE:B+/#hn\qm%4Lk=R_s=f!<e'VpmC9]H]Q3W:Nuom=hQ<ndS\-Yb.Cf0>gX>'#HoR*=%n;5#m6?B%FN$oZSb$>8W]e)/ZMXF/.!s5,@HRjOqXNk<%NNonJSV?O-YCE_AIf2HW#/V/7RNEp9gNgB=]R/J*>bA%25WD:g`2\X$G2_]K]uGg*:FeBda$,<8;52cPGFgqsd=:PK[>A,V\"I!?%"H@Z;o&8kLW!^So-OO8Ij`+34P<"$*Z6`DrNR*M%B$#muI=6V(lMT%CpF`m`OSnbMEb?2X+.&S>q+\W8(hW1u!22*E^VYacdFW1-%nX2LRA8V:gl;%*u?_3[V4Cb]M/uD-_fAm@3h-^)k\3"^(=(LL_j?J"1KLen`a18h2:,qLun_PqTe,cr.F87W1mi1/RT5oc1Ip$US%osG$V<,\8VSS-itb/2DuDsbH/^-\KNMF][t/KE,W=J^r?CU]qnmd,sQSQAGhC#K+nM<`0@E%[rcA'g-hF#1F0^\:g`2*p$23S>r(%*#uX4;W(>iXM_L(XhJSR?L1;Roo2iKY^!DN!FCU[3,=u%LL8Y_Y$B]Up:cfVp5f*Wmd_0CAUJW5,eamcVY>LU2*\`6/8T^Gq/Dm^%ns/%KnSqF\5K=F?kR7dUY#+K8=WY#!jY(/%.pK(')],D`"(0CPeT:>+jVm!d+CAHE4mU;S`qnTL>.Am_2VFA3LL9c=cgMmWn@.M+%X5toNb4PUmkN.@V$FRg8Y"_$GHj1&AhW;Gu\Z8`'D')r.F)X,HNJn)Ml067=`I-^d:Un,Oeg>:\4BXS3LHhqhQlA8S2*[VtIX1qI%+f.`VjQelL#-$_S@X`OnZ,72FE1]AI^+$AEfB16DnV?SNV"a3)b2pp)^13O$F)EOX1Zab?gQ0q:(-W(g5<=8krpTA9;X*:,5S(@T%kd+hh*k?T@n^40:3L>e*?b0SfEj"gMO1\W>1UA;;#icJB#s8"S@EIuQIik;!^3Yskp#V[dT3f/PJVH%fE:nd/]lN;]eWISPG^,Us%@r'iZWs`!8D2Qu6*_\Ndd^L6jo$@&akO'BC5!0*T"%7D2l,&M'V^!^9DEC/]dA<VE#\r\5^]-DZIWPGKgmC47Hu7tTLa,tS*P^Bf%oA?EG715R\[WZe1Vda/.54qKG99UhGqb`W9qr?/W(=L82@g?NgYEmY4pKt+]1k'Q*our84F70#(S]>epHg:UY_2NYej6?05?fYI@%/tH,9oT=L(h]8o6I<GGod2!Ot)pNc@o[raX\qf+7kG+WgmcBig3V^jU`@p[Drohh>JN(<OLZF#W(lNss4qZcHos&>kZS<V=%usHb%W]7GppinSX52!QR^[QMS<dqP9@'[^'^YKM<Fk$=kCp)VVlI\M8=\BR75$jZ2]=`4Xd^)#.MttdQ]Pi0nf##&Q(Pr',kM*nR'&KVo%;bK31)g?2:?2F(/p;%54l+r00LCZ&@Ci=b#/DBFOe^%`@X6&[(lKb@?2ML)54?MTn[rHKL`TKj%f%47-l+>OoIpVr^\e?I/dbW$e%^%CF;K5##Y_q+#V_Y<N%>nhCpn9fB@=oPql\(j[?o_2[!qRH<Fji:?uG%^^K2:7C27(KmD#/Ac>bLAD[0CS&sYH>IkHT'SD[/PEN%edKear3KJ7#Kr_ThTr:Y3`t5W@el"3n8`Vfim(GfF1M>Kdaue@#OLBR:Drl!ItlKtO&s4*AK:L9EsN77hpYuh>"G5$g/O^i]B9'b%c"1d8qsEQ>MdNX]m]X<pG\(k4?EW)Om5??@CZ#*Qop&`#2]p&MVjm-c/K`QDLa]3&WQ"8eUR]&SH'@fMQX*gDS/ZnL9;+eJ]U<*>%4'gpu9ja&Fo_?JlcMUC^e`QYSKsJ8ci^3IN,s&?UlmD)iZ`b/eJ(j^T3W=O"rNn28![m.iR*5'\r!H)9f-!1Mko,SDHh=-d,*:5\%<LW?6:;WGI:/Zg''G#KA?hL\_MFH>[S.:EFkiYe8V5*E2D$KAlW62F?AcL]/ce4kQ^&W#MgT<.+kL'"sll<K)g]-HSh;a-[HUe;_%('go%r)L77YLcuA0)'9;^$.\LT6DfP2f9C>11T4F/Nqh$41aj_h!=XID`,4JJ+MX9gr@4WZF>#OjWAd.g$tuJnJgdaJ,Jh,Y;c9#%V:V3J37@+eg`@%N-*4:fr,M:Wns,ePq#93;OWQ3'a024S^A<'s5E%aeIuWM.9+)hZE'E<SnFs0VjOL_2q;L=%rjqrLkLOMJHA0*d%\U<L"IbiA++$\YN_ll0"FYQ+"8+OR9#i9uP1#N#D.mHa7_lo,Toj""m]Hf^;iLuBh2obR[3Vhpf4cE\^U@S(7IcWtMa>bt?jG+Vj%^TK/<q#1`;DW999e[P/--Lep]r2YJsqrup\rlVV_R99rR-[upBoBP$O67\'[#pEtO6pj.ES9=/LVqf_^RJVo'^\n_t]/4)1Y:!YY%^:Q)n!l6d).sI$0CMk"K;a`H[rq,2`muq%fjmLif$SUY2[nk5c5Q6bVp3e+(gNt%&j-aQ+m:pQOl11aiq<@T8cAgf?4CT;ek&*>p%WVtuem/6OnGM/G4&a],])ZjTXJ8`Ud0A^t+i;L@_fo\:bcGgh!bH6OIZVAB(V$E'aBD:uRXLYV.m.nQ<L[VF-0<JP%opF(Dm)O%J%VcW$TYH<h7I6)L\l",7SZp4<ad_`J+HV5AY3dL%Gi#1D+=oS<grGTPO4s#WTEbco>4$/6-]f@GsC#)&.9[g'.C\OR8E4ke_+.)_?%hs!k]s88JR%XklNf*Z`jIgX"THoXD!HC.a*n#e7i'QElnm^,cF0?iS*D!hWj]t#;nrmJ%Wm\@C7P+SY=B$,`B'N=3\4`F%!@I2eM%eL[nC4[pLJQ7oFk(&fA@I;.7"hH2VlB+Q$YY"CB(0AXe!h7N9r8#g4t#BBO"hWUc'l&B$+3UDa<^\PFl>M8S!Zeq*r^$E.W@\+h;%X<siONV"Rd4oNs$RO_=TELs3n;/bg>/,U_fjD/Z4Lg)Y?diqG6bkTWqE4\'c)]=,_f,ME1Ej']':;?+S-+UVIf/A6=rl)G17W7;_%_2I12lD(PrWB40nHd`KpQ?nmh]RJ:uH+Ed^2u@K)Z?Q-)hR-[2GlL(Ur(%oUDY3+GSibef]eFp.Ft[/?IGIQYc1bON\EeHPc/7m4%D>%<1Y3bMr$2(H\Dl)=gr9]L#odA?Tp(kB0l/'kDe4OZT`TWfJlM1)]]s[ap(4%p[NaDEsD&eQ/m`ZY(p=?^nhXp5AT:YE*+-3mW%&)Jo+ocDr#l[,,Ge'6a5j3Js`VdD*Zp7B%0-;&%AjjVK(Hi;m\Aaf$HE2iU"ahpW^pJ6i&oQK-<YP15/h>Z*^+)c&j%d0F3l[@TV%^!Z_cZh:Hpo9-dId^uo84>M5iFE_8CBln`5imZB$Om1unc,e+iZ*tt&h<c^;cJ1QF2`;:4ceTYapF]4">abK[Eb,1/p=5:Zn'A_-%/:W!@BOpN'*C"T1eZFIdop7Tr7Q0,\ocjtX*dejYr;#FDaKn@mo5aA/AE;"1hOBXOL[sQ_/%=ldhPRsDE:iAEaO0s69>9ugias/N%H1_'Pkd\D,BlnCah:Cf6UNgk0\7^(DN4\?%I(9,bo]k0]];#`E5<g5q\T`C1o]Do\D012As4Z]8QOj#Xj3Q=h7\>Z8?6"AnN^cLI%mr*[trUB@)iTOp$7mtGG0+XC6NW'c%r-2X\j8/1tMjK_o?C61ij3r_Eb+6ip6>uJb6@&ChgP,Gb8%f;R/*>iFRr36._VOIYE8fcP%+4i,]c-G.TnFH.6q\Q^(7UKEQ]mJqkL&JJFN\;CN]J2M!]5fI>h:VMOHg>1j`sC/(\,Bkhr`ks7]6\CCIVc":I5H--dt:G+GOJe+%*.*o^(WN&+r-UR!qI'?Xf_a!AEU<:d\+dq'G'=G:HgeHBpr34+&&r8&&!+_Y)S%UeGMg%M?eASQ3&`aE,<iXoIeW++Qgr,VQ`c<4%IrOH(pia",a$5"Y0?1c.Cs@t^cV/4^*<39$F)g?[jeipnP?5(,Y<9>co&A)gYQ!O`NCWFjhL@P8rSlDb`6lQUa.Md+gl9XW0-7:R%H?8W>rk`fOIi%:Ood49pbL;;MinVJ[chZbBlIqN$'6f-[:-AOHBRJh$bO(jWpU?47-OuH23:V(ScH,(cV%5YOQ^=W=:T!gXq8qs+%J':[EppTa'o)A"TqoPbFQa\=!IdPsZgm`dE?^^h8OMfT#b.$W7g$olR;t8D\\#J[PrVk;@GN$HhKCQ/";pW1,GWk`f@/K'8rna[l%;a8%2GqhHBq=3"Bc!T@%?b&2fDL1D]ZTEU(d`TDuf%m7]Vmf0FN(nf9RqJXKN]^"u`\'uu)-sgaf5BEVFEQa3MbC*8f(L_5m/.^6%o^(+VGA66B>J5.RDLZG6jNHT^R@1>Ul'X@eZT,:9n(ZF;SV,b%1Jbk\2tQb)f%lbmfnZ23N^#^GAuCu%gmsGbmg`qG4rqaHB(%jM%fU@5oIeCSEp79HtZNmtS**aPqmB0ceH2-mbjnsQa>[BV.q>0[%geW.iq<%(rQN[u=j_sm#^M>/C(9]W6F*,1-*k'[hgHY.f2GZN>%Cc1Z&\BoVcn!^Lc'C4i$N4Clmfj&k\q8qFGDXNt<YK<5WB)/M'EqB8D48*N0dFr@PVsXE6eH:/2q=QQ@FDCN(IK/8'ZJX5'0=o8j%7pfNnPAf8tGe<5.V^9a0bCp,oH2V7H,?l,3\M8U0kOQ!pFu>9VgWu`er6qVQ5Q-@M(Ol-$m_Y#=]g)0GPcZbTDCdH%L!@d[P@8+d%@hZR^RS%R7C?^&gk3^F'[WM=BI/NK]S+uDZiZN\#cc4G`9-7*#I(q$+m)J?Q:XbMQ]:[r0s#QEo]E`Ac]<RX)hRn,umjp-fr-\Ld%]tAQ%iH#mm=Kobn\9#D9NB]EQ%oto#/T3jYOSbWQ?CIA;HhLibDJc0s2!b!t\S!!J*R3t7^:#48f7c9k?a'7d)f&MU<\FB]np'9H%qN^eZ[kD(`\_V(-D'h`ieV3,2HWTZcg:;?K427;uqJH!&gM8UsT.OE>T6`_ImG@Q7SSN/8>e"kBk]Uq:QYtUS5(@G2h5g?uGG]9&%^Nk90:4N7VmqDXqbfoYWp%`sl?X;PK>/,Q8HgT8(p$YE*A`<4"NQV]fa^&.r1bmQcG^m5Q[+Ka(C4FWJ^XuaqIK/Zoimu/Ph8R\V%[m,_`^&NAW4?,N0\oZAK?[BD-@s$u!qi3)(bHpr?h"%1FT3m'>oB5N&h01fLXB^!rr-fr/h#"?sHXh5Bjjhq[`Kd4-G9<qn*hV=o%?-6*0X.(bhMlV2'LX4O(DLMMhG3/:mZ?G]SroVqHNLrFQo]@L(h$>h4oo31>pZ*h`?B+@-^%#rco)$\/gf_A%ErZ%9c)717kAMD:%*IPMBl1(>?>Dn]/T5SS\fNGr]\_Qt/Hh,hG]061&FSb^+a.H\orq,9hr1/\((I.=mHiEl`SVJ;qMpTY\TBd0dqm5s2DsYo_Z1UU'%(T5hK4aHSnm\K)1\N@R8[!_W<k+99`H0IrihK8Vhl/#lSI;s0UN8D0jGkL1@`pDNh.iU"B)nYWLjS70C\(1G8p[+mGdJLDU^HB71%k3)'&%skF&O!!GjY9OQ9b/DrCYm7niEUr),jnm<?lgAh?p`s4\rp]F6k3Y[*5E'ME\oIQ)]19%`-BB5B7UAhScB#/9I=-N^@cR"!%T=aPMVfnYjDD&W41Um2XdDCO\muO[=57+NsR4!2Cc/3rT421Q:CNA[%5<$$Ypi1M!lZjNjg%rEE^\TeDI.d="`q737V]Y[%mQ?tf%HQbOVH+!J9frGoI5OWIXm670>[!quLj%FH#T-(42Y.l[&5GhcBE?AQ&GlRWrr6*2t42%!(@scO/^3k,]s/Pg.<YXt'=74>HHaW\-%dJBoINt9ZS^E#gODtKXi^>;L]Rr;mt2cnnlRP=!NcI5S<D^YLcj1!3=bl6AK07N>*?b#dsjnAA$-X5?O([aNA5/)1>_7M3.n)&Wh%jSb;>n%MT2Hao:.rHrX'D!01Vo4$nKSQjk;j/%g/h`ob-^:um[nm_0B^YOPRpTH_eqJ`Zdjl*ASq/'bgA*`CLmf)X+qrk,nol9$>%pm[?A5JHhT\HcKEI(Fh'nB%S\rU8Y<r6*24HOi$t?L3*N[k?+lkBML>f&oOVV[l!6ICs]>^Pj8Ihg_r;R.c#W52&31])!Nk4?GGC%%S**3c6"ZDI<9`/g9092EcIgYr3CXr]_o'V\[hG,;O[R[p%D+hp%?eGq5[#ofbcl`s6._^UT`.[gZQSjjgXj?gX`LoOmbFlqr.Fh%m&MMkhb9jc5:4EobCG=s;NO<\mQ,*s1Z!=upf!6Fd8aiZ_uG.\D2UTN8'Ku?d>.,X-eWuN:+P4'cAd\ON^b;]q_828.Ki(,*e+]=%Q9K]Oqnb)kkKJ5M?R,TgIr,JS;o/Jmk6$8#n'4Y?q`)KN6^-]b^RSdiS=aH$6/B2],3jF9@GR73NBFr.03ip;Q#+`WTN:bn4niLU%#Pq.'f%-.:c8Fc$je&IN-*(33P+OYX2<UJ.d`hNbgZP$:<dF'3atL6cLX-%uYOeVOJ+rl!=3^R8Gf@RAZ)R\q:Kf7jSi[*ZDaDCe%`[59uoEUrgl42VJPF_W@hm4d1H;!">F)uC$5I\CT4SUTh\,69+gU1hA`2t]mBDZ)?gH9TQnZUibI/&^Qn%#u4\,UAR52>",kb1HC%kF[.:q'Ug]?Va-5ICT6)n+]D&Kq2936]ZHgWr2fX*hmPNr8BT45<-jriVN$F%_hAts4:R]1p!gn0_Eks07,*Dp>C07[?Z7@h(lIb%W9jAI)e]0'g<B#5_u>k[s/dsP_\5)q,_F(`n)i#qD>Z\a_sP@M`6Q.KL0i[RF*%6%qh#F::CODDYO.FWod(p76F]VZAnM$sF>olG%`b&-<%de_[\+=BW>9Ecm8$e7,_>Zn"m"1_7-J@uH5(qT+XV^hMA"7\PPRd1JJ8R9#kW;$Kc"q96"NUn7c>`hpAt'LYq42RS5gaae%Xd:V'(]^#X"NFb4&Hif*I%gr13L/"nm'K\L*T2JK_e]ZSli:<^nc9gn+6\=A7.@o+fUq`N!3e)XINinmi/HLH3OeWUE,&kR$VCQ9%5QA!*nmK<[%qMOo"8LH;?i#!Wi&KIJ7[@eX7Xo0u@kDi;mAca!io+\m4)8,3c[IufDeDEgl28uTDnLG]=5JA2<-e5@$s6^0a"4aa%GCG5Vha9&sKAU1Vc8;jck.go2Dt)cDR7$QV``+_XB1#GnGM$n^^;%IH(Z2K@`\;i>>Ftc)j8S5/nm=&Y_jIuqm^K^tn#k+:p5.IP%J/@@WfCMd6mJe'!5!Cn/c38V`88r<152XR&)f><>K?_CC_%C-:>>0o<aUd(J;aQmaP7>6rT6PV*3e..K2/D4IV/%EAgkrDCJ'M2j%jXGePR4qk+?,GV_5hjN&,5f<t=d)G9XIkJI%b+W37*gDEj)H:gKjU3&lV55e-hGHs0:][VP]#sk-\ODZd`_mt<n9TJ@,kmJBZpe,%U*Z[36=(BYj:4KE<(,W+:WcJM'#?hk'*]44&"/P3Gg=UW<WH[GWk^,H+AnT?d@ku]OS*.<)VX1`POLT+r$BG@b3i[^.EN@O#iD7s%FeLSJlo_drG-fI?iIURZ'J)PpX:+S*-efH=i8k89L<;@7SS@"B2]IXX+OT3P,5WNj&qKIW'6TtlaDu/"oKcda:eLQb=c769*`Wk_%e<r0`jT5HD([H0aOd-"/'*X75jLOU]5k9;;EZNj8'+dd.F0X\*Z^_::%g906JKem/?OcQXbKZ9:!e13-#1roP.8:u,Aur\eW_>dj%6^D'\UauMPPF6A[MM#Sp@rm$cX<ko_+D6O%!c*[q0N!`_>r`bZ=9ZfBnkHsLCm4+6J@nIVO;iEQH^V+)Jn:Zj"*m<pMC'c#fuA*/%Sb:BC!531gN^9nC#s+,$Mftc3qaRhV&D:H+bCW:Ud6pj8A3#Ae2ldPOL7Big;C<Y2*3LEa_2[VCCi8g$]G<9F3o:^Te)u)m>]Gb]%X=lk*%BglQMm^#*/3o5l:g!$J-%\q>=(*0i`uABuK&lG5.sB"qjt&9"%9,;1.<86.S3MYI5Wggb=3aYOEW!&2;?OQDqIASk>mJ=4%=abj/QY]A4,5BiYr[Ma]*VjI/F!?>/hTO#C?[.1.-G3^"j,./8q(^g9F4*8A\7AeWk92paW%,.HRB(0j+9d$K.W+N:-c[A0`;2BM%?',eb],pUF2?t6Pdk!Q0b>nrJ"(<XU>si,>0W<J?dK.@6#6@Hn[Np&42cW&g'N6Ghn[_ErZjhl!ag)Z6-38B8Y6lbfM$0Y?@LJoj%6Nbb*>Z%8d+Tu8T]XVs6a*$ZDESaW`k;LYS61%>EoDVuW5;@H_kuQ!k<dqlfejZQ[(>lEqpf9N%\&qj$bF[j#rY48\BCIL&MJq1s%Hn1i.\,9sS<DN-;G8B*,Vtj@S`OCMTT#%nQBte.So.>;)hm00UQ6#*lmOZ*6:@g&eRW!ndpf9B!\'f!)Q-\GojV6Sbjtk5jA<Y<s%>P9o2ZD[J`4,\$fdsT?2k$.fn^?&/^/Us4-q(qf35L$[SBtb>-i`kq0hb'gB<^+d;4;?a?^',i=bdZ@FI*8.u\(k]3j\G=tG6ZrF%VtcQBc*u,8^*TgA`OGao^6S\fDn4>EbFRWsEgFUj/"aeidV6E1:\1]-(>n\\q3F+e\(k,6bFRd"r\WL>BCW*KRW#%OHn1c,\+47I%<DN.fEX(D6qD?F*">n?3AC&T[>P9o2Ei8`!)rb'hXD7?3kqfFTT&il_8r'O(NN@Y`*1dO5N[Wn9qB0lao^hYZ!Yj^[B`dL2)^dm5%-`!7j1mtIZ<<C$KoVM`E3JS=TSa4'$c=-AM^#)S8gtkS>eUE'S,r`@j'7!lH>A.:0bZWeh_#,tTLdF^AdIKls^@;;e;lfl[(;9jE%+HnK=D`N+\QsHe?KMMe*=C*S,_@_HhK92_u\8ZXP]e!hr/UY>,m\O99pW<F6NJ2:[`X2oq+grC9^s^ZjcHbt=_lqnQB@QHI+]t"`%2Z<r'I[m4h2__3FB8a!3_,;8M8NnUXA799SM7f#e,`GAM.)Y95l;.k>6SKp@\s3&]&7I\6A@<X\:a=Bl5fK*#"=#(eJ]`*VF.e&t%K!JWXJ9'*K[=Z"1.VP<!rMV+dJr]tjTJ?Yh,b,O@C`7aFi=bV]WI3Y>./Y&P77S$NVP#2&5X@++]4J_qC[4Nl"#K^qjAXX`qG`W+%)ZU0T"-ZkOG6.oZ'L<oLfBWKL^P$+_<uYK]Z##s`+gsiI\Sf-a5)L1Z/JgSh5%eB.]XEC)*ugQPM3\#tN=M3q9;p1I^g4f31qp8&%fjR%GQsBrMTqZp\QNj$sYg\jd4-BaJ=Wcs+l`sD+#VNQkF-/m+]mRpff2+lD<JmN@!6`MFf:e1Bf,BY,-nnaW["=eZ3C"3.J:oac%^R689=4K7H(BI?gXr]r]?o/.(7,h<4G63E$'SLhkZsq%Db7G5PQ=C0`UMt;%#-./-n-oDT?kTIJ.!,J3&YLT0<(d;RF+ToSR1@ir%%"O"P2%?@J/eD-JlHiY5)9(:'6[;lA_W`^p&L(7U'_Y*(H<j[i%KlT".fkO1]f:UN$;-n%M$1psDhJ+3BWkj)3*.8r9lB6=%1p>V%&kTo?9%"Os>+g)H2k>jtE]:;a2&%JoQUjqf..O_gS?.9c,S*!BQ^RRT.aTbpK'o0Z4YRFVQHAP'AQd@c)o9PTP^KR5QP27Z+Me0m%X8('pY`KhOM#0e&A;(W)?U-&]*c_c"F@uK[V/_#pW_[p0,_2u[4i8DiZoATuH:ZT[(c'4Q$$MmH"=4:?)['bdVbYW&S"LlKM]sR<%ip-%](Y[%GlM1Z5?G'_re9qtS-_3JSPPgH8s$+?T#-7s5$c3fe;8q:G/.YM=1UK5?3t$%0n/*:ap=;n;h3/t-;?7EHLSP2@I15CK%k#8";A;(<Si`u`.hWjd6a)WBO<Vs=gd)+u,VUaitb*0.<6;0bLnn3n\%,lFG4Zt5*pIbKTPq#>(TXZ2jGpk5.DMtf$JX(sh(^:KU%?5:7ZWLr-(/fYAVW,f-S*)X"mF<W@F3WoW/ZnW9W"a[jBfn,pUKioQ&WWK,WO=9($Y^HLe9H\J?O!Sfi-c@BEci[BKeWM*j^VML\%0["FMI03fs[Gu[7DS/iW"-A9:=+F`]j,654!Y%#Y2K6j-#\mq"6%GqF)&dHp+P#>d2?CoD:u/,^V7POb8mbPjk\RhVTeH'HNPbpc%N>&jscGPqflVSs(f'6Za"6GjoF]@\3dL>L[#N)J`>X2#"8.9o]2]/%6J<G/Uj@!>-b`mo>+@3T(TZYArW5DH05X>L?0P4(k"H\^1%]M0*e*%E@`PtD2CBU]"+L`"A!%.+1bLrghB?nn&R#(V<WU[`HK=9TI"*<G`<'C\t,-H%dk`<6g*Z4*7AY%OBg#l0j=NlQRS.9'-<%80U8ES9#]RW9n$BECg#)OELd6mIE;Dj*X#*k]e+%5]%1?>uimU"sEJF7X$P3mTVN4"U%dm!O)Cd+a"&%"rqRtq4UYSMBL[c&)f=o%[hWYK3%jZo<L>=GSY-6m+$mUdP%bGN5XeA/#7JkLbZSr9"\V[tH9pUY3>LZZ.'tub0O%)0Jk=8?dQqUlQ`1gm+=&?a'7I*5XEZ$r%1"=nQS<]D*@#D*CMf;9>D]kG<S$8e>Or$VnO=uH4OU8<b%jAgnV!'//bBeVh85R`+(mFA5%*qL:C>EddDGdSnp*5_+Jjr5.(tduP%.^'BgLujL/]]&DqF>$<(33,F.I6$4<Lc.aZUeWO3fl.0k:9t'u-n<8]0NX!d%\iQd#=PM$^#@i5^]kcPDeUc8OoijaHFjPW-hpCN%1[tsC^B6LU<Ar!$Q\jWp;dlJZT!B>S,M#Rq"bE;a83d4R&Z83YPu43p&JOu).:?hAF-9f;[]*%;iN<$TYes$%)A<EOWI0Ll5SH&a%2XklYSN]45bN(BT0h)ppRmKCdfP7,`d$UICIYn`@s!J*[!D[($L^k.fDUdW*fa=E^H6EE2SXcU>D:jOlEXLif!WjH#'n[`1f,Yao%?u\tg,6DP/-sD4ce:?Uj$:I(.68\ApbA@7i!9hLO5r0E/ML_,7e>k%j&MoOe_]#HF"pb6+P=&!AE4mq=.-D"5o5IDjUF]MAY+X-,%eJF=[Vd=JU#NY$Op0+;p_YsY5llncF[dA,I.UYt//WIr*eJp"SVt$$'"kZY!JT$LQ%="Z'$\Do6AR*3TBFhSV`n/>_EF_Xgc7:e.%apda:[=F',Ylu@\BNJDG!h7?&DQ(8jiTf"XiZ#cuLYMt)KD?92K2n:q6+3&J.>1/V_:IXe%;?_GM%OcZqKJpb`C@'CLYo%a)^%p%%TrMCP4e[([-OmK0f&m0hK?!?NR`U4%(]oM#L0-u2MH*K3\Um6>kK>(9T2f4*i+<*lF(S=o`(2&S'^ag^G(i<R"el8O"m>2;S?`b2%6"C/0daAH&=ot!d>(S'SJDj*pd-KQo_%"V2G"4m#N>:)r.hG]ZW#u=R"U?:)=O5iWrb:&?9M^0[G"83?:8%l[^m#:!a@5?Ya0B#[%!fP/mRK?2/!YR61._5ck.Oh$,BlJ(]4t2'%d$1RbAt\#@$dPYN4u:,9iF,_]C;;cP38'tk%"b#u*aGW,KgA"2kU&U7VCG<^j/$Wj%9Wc7!CuJ.C:b'Q&quonj.WgO4,+kmUdcb1-C2?rK/%Udn0g8fnJkd*%n(Vi]$Aid`ZKNo#p87B^.'[fH!:ogV@2k-,8CX$TP'tEm%^d$f$Ps%+cZ_X5-Z#q+Pea_/us&H)J/]?*>/_0'b$>'O)/#6A(Ni6&*W)._3.5hFSk8G;>!1QX$KRjN5a=3W2E5Dq\e1*KL,le6e%X%J#&>eZ_)eMi/bq5AKHjsOMMZtZgpeW\qo!bYFc:h*0LYBcR/!DKa%-CbiRO#*mDB-HjNH=U6n-T$--#c9#\$HWVK)Bb1$Z@Wu3%3.f-h=C%p\WD\KYV5VOj9YBjTB6?-V#Qg4Z!Hj5"#=AP=a&I'b/WrI3>piJ0M,J='jqK@?7)3'r;=T[I&4E[7&u3kn/58j%5SK;\%9Z9i*E_\3!JHgKbIRFd3*<cRb3)d#/^t&]L_IDhH(TeT_Ku]hFSq,`%^dql9Xqb:,h$bVZq@P!i![/jJFh/G7'LosuWRt!:.Q/<'%Q7@NM)afDmWN=i_+DL:`,dhLkZfamfSh#GFG3f8o.`e&p791?AW=97q'in60<)XO4%$HLWHWO"W^i$?JN2G^J9amH9)3ls?%>nD&%TVWSIg_T`sZ&_=60bat>S?Ub-D.Vc6"?f+CqFtbO?\WZENCgFL_XiN;&m1#3n4J5$B0Y=>&0rk"s*)-hnG5J5k]eCmdim)1GU4hM%cn!Lnm)1Ct08hOpGU:-Z<!MT3-/]ClBtu6M,DP.*nOi;lL7Al=oebTk.)<@oT1"5VapgBXi32^Jl[_<STn`t7!%N$$LR]!3)WIDc%6FJ&(!LEpkBcQb:3;mR<-NS6pr.%QE@ABt6p`s5rF_SoE+ah=MO%t'8OG%"_l1cMRB[A-SJ*t6&iF/ZZ"$R"ogZXrIHkJ1r)Ndg#%'#N=p[<>ggPb2/u7dH4fXUM(pN_9HEG]j0Q#pF+?b9<bdI556H!s-#nnH0m>!L+D4?4!<3`g%^N6jItrQ)ML$=!E7dq#RZ%_C04=%nk'07^rbL,2F%dDIL%4YC`2e90HqhPGU4oB,(@<X@5VeH^b(,L/3?)WQ='ia)/r7,#_Eq59Al]ZL>3F4'"El]?3tR0QiT6SM51Q.%cmt6Y.CeE'5[5>:rf1'SJd/n$rT?qg&jf27,gMEO!Z]bR6*E[W7Cqf%.)>-L7g8erop]5h+>l9$8n>s4QiX+<>kCLf;gkPHU^^f<%4:pH!\GHB$Mu]dWVZ`5AD[/E7B>JV`@;<\F'<4!pF\0[:@gBUu#rs82ANMLN@1!juF\+h!0^$bi,(1M4])8LBO[,G,&ElF3!3UAK%"0R1`ZZmO1%1%h*F`<q^"qp8'DSS1B2&)hO)aNhWb<ruE#gC9up]^f@73(e+n,iD/hggKdis*-ucpqNHm'm:nZs,KM+$dmgfLEnG%+<[i$iu^O^Tuf\$!FfCRn.1&p5UAM^%mUF3A]R)$^7L,X"#Mt!Y($GWDT7+gp]k4&aF;K#5Z2%rqua1pJdHSt"&=Io#Q4`keh_^t%-iO/"V?.fgiZF8;6J_5HrrDCiV@<5)5j33S3rT-fOf]&f#:qF_^?Zl6/Y6"S^4-,@G-C>DNdh&f/Ck7)#@Jr+hOO?GMT,W)q?LPb%%bJ;P++X%1R0!=QJ[UYpqu\-c!RnXZ!SeV-]D_gJkcGoNM15MkdS($lh`lW'[)SUq#k2/u`4PI\n47V6b(,*EqFE4@%K]%nQM.)U%K)ic<.0C%]=E@sjE"I7bg31P'!+QF%ET/)@.tdoRE=bD1%n$<s7TRM0rrC;RA\^MAeEf'V+9:/=DTG6XTEa(8(P0UiYQHKZ]Gb[q%Nf*lR?"L'sMZA'M)=S2:[-i/E!-(@9!XLu3H^o<d!WmeeJ;6DP"8-KW6NG#1F`"Q>![okT2:f>E$=[SqTSjrNbT##R&Hi5E2m2Hk%^jEb$l&Lfi'PU?UeqoFf8IR3\p]rFfHLd_i5d%&E1'9]A\.&ure+""UNV@#*70$Par7(BOa;7*Z]1rEPltm__&k'gP@DGG7M%oU[%`(^4FU,ls`g]Xo4c]^BZ'4C3<>UOt%&=YfC-BP38Z5kTL4I,.93q3i59U%Bp,s]2.[f]q<=T;YFn.Gk/cSX]/ONUJUOHT[=B<ag!%K$'8.cfEn&722*nF819n?=jeJl^h5E_'n9;lr`S)IYIl3?#)S?F9r'#q?1G5)6h[ZE)'ig=qCX_*&?(i`4l!I@m-oP4q&:o"+mAo%OKi+KEdB/r`qkJsnGuiW_HLanZIL1#&$fig<f`B^%2eCC31J-RZ/4LKI_]%rQT?+/*Fh67JP)OT@m+\RWGASj\],04lA^Z4K=:UX%;:Z0.l<tt1EPPTs@BV7M[X,l2(HZ$*#FVZKe_9:5(mZ2Je\b"D#>Ff8)):3j<%jnRifL,\Oi2.i=<H(4fJV7'mPc9t)!_>G@rarf%H<MlJJ@3*>Ap19K0SmV14D:jP7?CG3Z.@)*S#-TrlbNn.0;rfkLO98h<6&2"#G"u_4!RP&orpC01175nH6QX1^!d+76#4/($%Y3H%XTooo-e10-_sj1OXS!0_AJq`'-]One>3cc2Sqi9tbdU.G`d4#2M/]T%*Wa"o<8'(X6NW$GnAJF)WpB&&Z(CfL*Al>G@BfpSq@&A-%$lJ;!cVrF^a&juEU7m/:`*/5#<S2FiXS'g2C'V2uq?Td="4hd[!?VQJob"(c0P%;@bQ;!`a''#RA17W3qP]SKTX>il1#hGS[2pfE%8d!Xjlpo/bep>t'F6Hfn.41M9[FTt341.G"XS%11WV?L04Y/3jre\$(q$UrTm9&\j<))R[l_2kU#^p0apP@kR6e6ReStN6o*X+Q/%)R.f1Coq@!Z.?h@hLkoF4nr)9\Q<Q0!h<X[)6h\-N.E"Ree_.p1LR>?-dS/'COKW#d@d`c[Y6%<)!dC>LV(QPVX2qY@srmZZ4%T9%@47(K^fV-#e<V7f4_.t\E&u!b3Nm,VJ?^/(EH0W7&#3PQ0\-I38%AY94TmW$A?;[Z/.<B]',8/HCOOW`)mn2FSsBS^oahJG/NVI/%8?@]uI;?O9I(?Dj*XYU5DSTQhR4>TdD=."8Hk\AEYG\AE%2eFDlY??Z_*14@o3Hu3,\Qt[:<Q5,N$2KS8nf;:KqVu8+BLiF&'1T;%OX#t4C`(0F$oY%K1Bs?mdWph"Rfj)Bg*f9E'/NB7'T=Xm@<SV+FSVGZ8sZ,botS.gcG>DWJYo`fa:37S*Bg]9c6g>%-tKaoEX:jH%SaQOde%70gf)i'e7[kJ$,.pg`bfP(2#YkHDk>14fW.>4gB!T6@9`[nSJHfi1-8<>?5Qt0n'm?#/"QVo/VMJb,fcZUoia!?'#8=U>%J*:q97/Ge@!OIl\p#egOJ3lPO'jXXAmIIdt&826%[GCrXGAn*qGP^C4rUVuNA![./$BThG+tnT35I%q%ChH"16NiN0r<F4i;#8Ib%4Gt*gm31'QT3lj3d]^<M8#;:@;h(/<D&pq7,ffJq^m[qgc9a5eBbighYkE^bG(=36?iRJ"o5PDZ:S,u*c$=+L_IJ6\T%_<qYIs?;%@i1<g:ne4b0`=,735euP.3lqk6RY%fi@H5i5tG>Vo%.3\oF!=\&3NgnnD?s83n[=3"Vb!S4c]k)$FcVB^HIYWn39's?cZm_Hc#&2%!q.)>P&qcD\+^IQ16$Eh5Fr=*P2rNi524u0H0JDeI'WJGV.2K-/KhtL_g5K-5-#<Go,+!&M]'TR&TLX,dP-^jG6=b&Yc+7jR6eDd%EHHTD-Rc>?`X%5C)X(D(E>CZhglp`s#VA$7R1qI[Q6(h^Gnbr#e6p]#OLgAb;rN*0;_H_ZJ+h]p?iR9iT]hK?/`]RrYNI=*H)_@[%*41:Bq>IekQ6iYKXFmoGcAkX?L3H)t\%nsf7=9rJ'Mq[JlCu-b/7PhtBSR>AdD3U73$X;&,_%VOJsIN,)d#2\Uc:52D@a%)kQ2-b%KgAN+++/+n(I..l2l%hWb#XAGCB(2-Or9p@+F"K=n+tYbrUoijs-u]ugl$Cdq)]cPPi7r)c#t-[Pmjq/qTjCGMo6mbalc8AJ*FpF%^[U6HQ2`M-_-+6]pfts[*^S"B+^IQ8NGrLjE"k]<_j0\G&&k&oI8Ao3A8hMP;,%2Hr/;*r<D(L)k/t5:C_Lmlm_=NrE,)170c&Ka%ZduiF'IS@i6VG2f+ij@cNb#Der3,"Idk%SMDc0qu)dmFmd:6,tc<1SFcgHd.G\U8=G(I;=KUcS_9b=u_EdKf8"JM69&j]1.Io61P%hRNo9]Vip2$KI5:)U/^(kRoX+Tm%b#o\i[e*bbs[Rt\0SUOee.$MaMU>Pcn=6/d>2D@sd?E]O0f1%oNgs)?7C`P.FI#3GVYA,l62%SZ(Z\F[G2,"m^lA#:>)^S*/,PXB_U[]/3p4?,0>`[&8GDTO9;JIWB`eZG_Gf!==(M7h(SZ6YG<oK%idBSK^sU&JL'1pj:n&qShnh%IBGrr#t*qLs2Zd6rH#5crsT3sl#3_5GPL&G?#X)l;*hKTA/Sn::S6PR6ToG+Ll)iT*^1.VIk8A<>9P"Q9i^"Jn5^jYN+?IP>mg/-%njY`!1pc=p@jiTZg]frJgr"X2c)"eFVN8gpir6b1OF@+8\;A*c0`SU8U/Q&0"=[\XKEV0"BPE3_kt[eE`<1)*^td,38Kh7C"[I(F%"=0%ik'[ulQm0M%N3K^?(CAVBE3lmhaO&l#1b`pl=imN[8;UkVs6-LV^\h)%-au%G@g0,fs6a<1SF=4"Xou_Fk`gW,i#KGDYTd7O%:[8*kAnr#<VdUGdXaq-@>Y"i@NSf<#[R%9g"ePhY@bDn/d/i<r[u3">Q4QmYVB)(,8B.t*Jk`YI%]9>NkfY*iC$;K*D1Mtab2fS,%$7_i27%`J.%502eCXHO#bcT:U:t,mCB<X%ql5DqEeV2#Y[6s>3AU9bf`s14&";\T%:n%d5b-_0df"ZaOOrfuSB_`VTI3mrrT)dum%'o"nr?jJ(/>"eWW69-_fN>BNp>$=61K#CJ`B=n:?#,s&c>*(<dPJP>o!C;9I>[8.Z&4C=/$'2r04>$i6?m<=`@0r6I]&YhXh+p#9%Yb,$!Z&1H@CF*3:['d.iX'03aGJcO]^q?<E,%TnfCU0u&9HB;:NMg1rOTAT0K4-?bQmt@RJ3DTW#3B>+[VQnY=-XmN35+::5b2g(%73<n:Z4AY]6f-g_YVm@lH's7fG<G+'&0`KrY<u*9N5>TDJjg:$TJ.3J*d1B]+b*5HO]_qE=!71e7[J"GZU`%8ipOV@%Z&R@@"8D^%'\4Pj$=ce]$5:R[1-uEb`c-b7#rO=D]2<ZV[]U6Ca'q+C0rESlDs9il&.Ct,Ri?SZ3d<7a&[n9U8qM+jk@LBbN?cdg2[HY3TSeKs%%p[osa6D=sm"PDD)BfK4XioLhLr=+!,nBu=!YGZgWVWVtX<nhh0hI,Yh+9O.ED[W<eo5P4pXgEcpkfE93mdAB"()scABYN<q^sBQ%1!6L^ojI?+X_!^BGA_F/_TdmZk;pr2p;/5q[fn0#/76<(@2duXJHtqS0M%FD#eYQP'a;[a$==$kPaIU=XtgO..BW)c$j_LXOjgEk%,K#AA+`&o*a+->3$a;m/*jeM/7M_]:F2R7;/fdbWDo?^>ShmP"m.!!D[THAPE+TtVGVd)A%gbS-3BOU#;_kC@+ni2C8-af/<-kD^%+IEe,RbUZ6+9r@th>Ik7<g[9;-jXO/8l_6@MV7*cKE_\jU1FltVIYG('dG;hePI_.2j+@XL8_!\B#%&B[!WfYe0KT<E2QTGVqiTG%D`%M?O'Ou.)qQ2a"B?\C[Lcq^ARN%`AD[/0l\RBKNI`dD=!P&'!452EVbp8R@RS;2JkiD&Q]SV25a]d*Js5eJ/CfgecQ+_KAEfZJ%;Ct\DDaPKf@R2P.>55,HaCqI&GunX6ZjleM/(/'28CU1,-&T!+TDObZ0p"e7S2#q!+J)JN*eK'qiXn2I9"(JF87`>LLpW<eQD]NM%'^G'a!o=._@2`?7H30lmZ\AJc\s6*t(3`n35K(]KM,kPO>>/VE9Sti53uE)iN-]=7#Wt<#XOdAW65FOAab:b57iiel55P(BmXR"@%5RWSScS_0-`0VVefMaNtop\tZZA\j`;a]oGL#bRd/Fur'""1,F<SM*Q&1^K&pEOYhf]Iio'X'iWJ[hM@F%d;`6Qhp&Y[Lou,RBYM%/]u-"ARs(U)$$qCJlZT%JNQ,NPZlPm%b;!I'!.Pt85O\1"LPE3/&O-h2rtUT"Q_9bAr@k=VsdenRhXV[#_o2:kg?ko=br"cl2rp8%;i+&p38#niGuY<KPWQ[l^@_ttnjRH'`'lDp_k9eCjp;tsjU%t<Y"r2V5eMbt;slpG_8<KU?!p'JOsAg3rgk\*eC+@_jlug(U/Zti%/?X<I0Vh(5e@<ZpE+>[*#pm`&)+[RI3@LRW-o7B.1/<Zu,EWCc9u(fa-r>PaTt8?H8JiT'a\YJgKZOk*[:><$'O<#IEi[E09kk$#%X+mA1=;!-A,R'L03Dtj7KS";3l5C9/aAe=?2+E@8=J;S_QC2g8l"ZHI,$W9*:7#Nc*8XJ$%>HXpX6&fON>N6`l0;.klV'^$0?(LE%<pLa!BI?M<"s]9<E_,8!W%*=Wf900s"hs)*&;q6e=Ff*n<r12F=[<-7"UHgcM'<5DJ8*UX,mD?lOPI=>+G0qRN'q=c,7I!1Qd\:F%FJ0d`5oqK[P#F-lJ,kk]c^f('f(W$&7VE9O>j&ps$(,`Maj0_YX>t^6FTP(u/6^9D0qK>B2keVCI6$d:,4#,?!BO-mo0hP)`_KCL%<!ba_%Nb.u'UBh+16]]mVgs_hUqflqqhA2[P).&@>p'WiQEECt9@.djUubGFIEYDQE$nBWOi^t!?>1*lOR6\gnd(1b%))pBkc\T1%_Q9ghYaQg!R0%nmVHU#,l!b(r#10+^24lBN8/&?!H=gSogK<r@LK`1DkOo[TFh3uld/]$aX<8=,`?aoZ+pEiN>2BiO_+=(r[0dqX%0=.<Z(f*$SNCVl<@3m0>`JP1$e):EOQo,,1/R5rhJ\/jhaCo1UTGELk0Z&+JY$$1M5+#`T?K^R>U)*l.glCG<WX_Ub@pM>%'t19]%3\:dDZ9]uKJBgQbj@BrYK&GMha>5H?6W);u8OT:a6pFQ56"uL#(KT&?SXKFe+sOZ6Dra`X@rOhdb8B"<kG07d+e_f6Y>g,U?3"($%V,A-*Q-Vn[4F2H#6=_F!IL$R`)!b*pXOmm!SJr+O<m/@9/;K;J#K/F))J,CTMl-p35Xh4jeh<7![DK(;0to9V1@*]GW)f"4$kM8O%Z`Up`RP<0%gd5!4YF$q8br+mXL14K!OBJSNe'Ejt$*b+Do@p$LKM7T?Ce1Xf\B+f(h_FUqK0*cQ(spr)9osOYA3$p;N8@R8mnXLk%9Z?X3oQ<^'E*?i%2P_oU.&s8IN=$DF]_#(C7qted)\_!m("hp'0Q@jB3'tap2:SZD>q$8K3D9FA-FLtCKmaO=/Cmiq+(WNDg-0Xg%`ZXMCe@T(nMZ1ZG\C+,=luXU+`r[%ec_2S9A[!bh;1K(2NXQE6I7afR3R5irpI`\.d?%'X@AT^>%78TgH!/LP"[U!-K)B8E!FugI%k0.LrGH+1J;);;>2AG!G9NM?0S(V,!nrI5P>+('-7c]+<9Ls=-jgpX%J]fIg@K6H1=)!ErKUaYmi[lBA;#l/a(dP3EN!_=H8/"6f%+#&a&ZXPIn`pti9"HANboV`ri'R`5%CIS;FS^ebf!2b(A)T;WV',HuV"s?Gs+HAHMJ2!0!mZ'U`"!22Zi!HX'ljWq>Z@cFn+i"FW%LkS?P?-/<C;&Ru4>lfT$]`JQcZsBKM<C';65o2o7k^:Z,l])@,%#IN-Rta90!=!/YLqHY5-n(q7raBQZ5d:)_7BQWVb]i/NWI7Bt%OCE>9VkhQSE]2.D"Jr_5Y<E`J$Ge!P!TFHIMEN^\:E:91L=0a7PjZ]QaE,S^cP==Q:!@Qj7iKjN(<bGDa;R>g0ZjF\Kb<j8^BZGc%V:N5c$)n/(jWtLZYJWi/YqBRpDE-5"kEQ*GB<=D6Wm)tHR%2RF#r8r0WrgS:3O[uaj>4C$J.?1_4)]/71BCS9aTohXj0QfmiY;nR%Kp9p8Z6XR2;fk'c[`Af+LjWfP4qh$YZ6AEGq,mVp&d\mo.U)`r$H[`8fF;F`!md<i2<h@k3Q%qW.\_"l=333:^qPcg%'235E[0A1%@]L8PTP6BnXWg;F@ML_jCa;;]5DH7q>Rhbl1.;Jge+*'n:`\G.&&906PDq=+l&*os`([M15fZU:8LZ)4-n?o<2@JVCch\/;UZ?Ln%$,gEW+cC)^i9%`tXu4AnJO[:bi/X(lTq4ThjC$HX\fhhG%hQne8)@CPG6Pd``6N)r*'e='UDj]b:G5A?XB)8jC+kK:os>^58f^>,%4U(ofZ-G>XIgKV(bsRce+oBEX%LFsA4@%jl$6P(Q.&@*dQKZ@iQM+A."X8::<V\C:[00K)Y0+:GJ-<Zl9ER.&86;')k>F;b666/I%g--^T:]Pec!L.Y*1]p0c^q?j#Ln5M!!4J7;idmHSP>-oL"gTY`16maN&:#r?9YY:N$];_TP^A6=)@O_`Pm9@FC)%(PJXQ\sR*S.<%6\ZT6B55i-$#91SMll90<7::CaMLrLJSb_o;sKYT9#`p;0GRj#)3.@t]+R%Aamj#6kJ)[!s&kX0,]"CQ6R/W#7G>eEg.@P2^l2S\%/F8hiIHChQ23Oqe\.95Befoao%m6.T8?#Q"gFT"SOZ2s.7JJW.-LDtOhh2^K2L/).)Itst"uM%!`aE6h`=SoX`c_eBVgqYllJ'<9%.Q""lGd=u69N2JE1Aqbr6ku"-T53'rbn@(@^<NUc'LGW+gQ*,X_]ibP#:cVO1=ZRt"q#ab\q[/VL`AGoNTho^d=[\<`LBEu\VIL$%C+].31)OIF1@(:"[L:8j!#1CCl*9_a-@UNckJEF&)GJJo%9B#65(q8`/Sh25(^;$K&"lhX"ld?BF+ral'Jmfk%PipBYhVG)R1@:A%J@fMu8"0]!$=Kg:k[BeX`6fYP)qdIdjnkHA%8cP/da1s!I"@H5jtZ+JZN<Kp'7i2JOoi%L"&eOMLpL'k@F7Nc7b2)7K@I&o)UA0>%3VXXiI9EWT6Cb7:N'K2l>8U";2N2:M$]dun`;9RLb1B8J'XV_1qln1bUdZ%6JI*eO$^K(TNCZ"*:2q%k7^3Q;8u5]n_7:&EYFfs4%s$CWlAOu==?_q$-b%m%%a3.1U.?"M8A0Wp3S)`$g6m"[["q]2c:^;;G4^Bof*S&#]Q>W!9!YPV*'!?Kh53^N>(0!(qd^2\4]QsW@%cT1+:ojpk`2_UF-($)Eq-bd^5SK%\^=;[%*R^`LQB\E$b4X"aBK<_aXlB<FG8K)b>M+Vmt)jG#.G>V17X(_YdCaE-`:$)FI8S@!>%%@3Y6LJ"]NB8aQhUfcc);.:J-j'$boTTp/.C4Ue""AiM9%'.?P8r^hFXsFJ$6@VA:]^@e;4$]&\.*b.4%7ub<nHda&\WWur)2'.7%hGlT>.hm1Z/*Tldm^K[6qiFbBY<l>##3k<Re8[Jr`=Bt:^*Sm-)ZgO-)HUsZ#)441T<i2>',\'=<^bi`V?Z[<NQFF7d8\^<a_]Vc%XjhK[lC_lY2,f\5+\rtX.eg6SJfHdXH3WZ66rOm/:H;_tC)*FbN=b^BHQAc5Zs<G]p"e"m9i1N)fufD=KTq_D=U)rH+F>$3f*7F1%!t2$*6W/(S.4AoH;Z\CEftdA3_rmIj+^3[EZ?hg8:f[_;$62^(&9f)\_gu(JV?LT$E(6#@k<^akKs^$W\DU>S#>cosP3F4Z:.+>@%jn]S"a:*&r;#t!$-ksj`U<%.>aW'[C<HR%p\K\%d"Ao>]oKN@.1Xs30@gAT83OG**YR[R><M!7*$+fBB8S>cFMD"DW)r!Em>F@nV%oo_U1>#R;9_UJp5!1Lb)%()6s&3MRGh^0_;($'-l%00PAM*RB)!2sc_K;VBH23h^^W6LuoY=<X'65H$?!";L2g&R44Im(dUKom&T%M7'L>!A^;cWC!u("[Jrf2J7.90H@.L4dM+9fLKY<!]=Oa0p"U9cMsO+\Gm-;l:JK"o(=1W$F6t7R`5adoP)[JeHe7sPn#Mi/%D%X%6MI[(&_"*PO7r\9>s"97,k;N8gS[B@,I=tM!/!:nc,E]#_ACj#'HgG#+=L1B,cb?q&17]5*'r:B&S5QPKeP_#TVCF/?UkbG6TeeN%__b8j+@ar_'G>hGLa0dN_B'*r!hZg+beQ:JTLSMk(5"s:jpX=-m4/GNK'eWtkF37JW]&1J#b$&[R9erreLftroF7oBnR^u(@>XkB%Q%\kM?@d3JLh[#J&;MG]ml]"u4hB>ZJ4dc1(f#o00SeXN0S\c;Nan>7JCpVrhl\o"5SA#94X>HgXeGP,1P:=H?'83#7a-Lc,E_%T%\#o]E*t"%,JBbm"!Ql<c.(b;R+eDX8BcHr%VQ'(ZY7kU"]Ko:/l5<P'%[+A:42p%l6;T9CP"8'YH9/-0eA-gMO0L[F5^8[+ZPlPN%fqle(ACZg$?l?%E7iK?=bQA&I4r7o;Z)@k`9WsBb&%kpEOqYr[BXW!`)*4:ISpO=^6YRVZrGl=o'bd=p_70\,WhGQ;J4=bDe:%=;%fcF"T;=s)P*ngG([iDH)8h20aS[=M,jC6)WgfJGW%5Ej-*Z-^>@lUfi2&(U>`O[P3"jcC8`(1YCO_^oVF/WZA.ci)Dec`rsK2H>T%oa2*WaMXcJUE`%RPo1gjP=1B7?U_2n@M+0FF]&gZBf'TGhID3K+F)Sf$YZ'YK4RMr7b:O>bC1^QkM52"Ajh7?WR-g%<$`edL0+aZ%L2@PG_piEg6&&&IV(d>:W2/9VE(nis"sPF\m=SrKp,C08HJIAYoDlQq;UZ!'-0Q(2l7\))B_#<i;Eu6Z&4)h#FiBO5\LPYs8>J\$%+*]>%DH5=57:Wsp!pas,oUs^Za,CYW/Xc2rj6Vu$4^)dVXIpoKDi:cI'nn56r@0li,M:bI3o,IF@+KID8eEIFl:7uQT'Ar,ZbUXJ%:)u5;+ZEne2Qo0cl'.kA%!?n!@VR`"^er--Q8VX#*-SSddS]:"@r5OHRLki`OK+-MK!#K(gYekC&@-/;k+G+FAZN()njY^3/#+9m%T"8`f/dD:*7Ag*;V:1C+ReCI/aY)b6<f'hM2=+IiK&.$h1N/NU2B$\=(HJC:.m/\AX]*cD<>XY=8fD:0B_(1%4TisB*X"dAGcJ53%8a.]CH9,%D6W8gi/\%WX6;t1l!QcekkQ2l8"?hmcRQ3?K$fCmHV>j3cqX9O!s!72Uco;H1SjnX__#@B23$d:Vg>35iE"uoVr#di&%*U0>^,IA"m5ml%[Q60\r7]"aopAi/^U1oIjAXP9=9.dS-O!]LuTT4!L>rHNqX23=De.4r0CJYkBM.m4u0HdSr)jMg9EA`f.-2EMJ%nA].c+\HXO#6N$'W+*l+I!s[,1%p80";td'>8j$?3.hc;l=Og*NL&8B)E<7nMsM<L_hkSXNE0qKP&&$5+59DoN='!RWbefWgJIR<%Chg:G@C(D"V(o0t"#*N[$q.P>LKnOs17l.uLHF+;`bOC;P]bDV!d9!-M`<3p,C'L^5daA9Vp@dnhQekFBii7hE[Uu2/&^QW$747L%d<hr>]fPLW%\<@pUMA`7,@[;$/7=Gh/Vk.t'tFB??m*.[(q#YRdAQBMm^6:L"-]92C^:)CYuPKE40W?,/l+3kQ4^1:#SlS"cc&T(%#p^?h?Y5^TKi4.8h*OPTDlPP$7W97Y,hTq9ajhe1"1p"llU:l-1:.Q7IQ^ZM?kH#S>.V[RkqOo/<%I-4Ag-6`fD.nj?9"Clf$CqW%IkG;a'-[83^IS9Pmk#_p_Y@MC\Kr':QY0\sD!r(M73\kB.+^t<>@^<JX3Pg#G)]g=3"KJs&qahaRKaY:G\br>($51YWpqo8qo]0H%.cdVL3CG!*phY<%(eYB9:lL"IK0k>S1`6K]3*&)LHnNmc"&RBcm&WV"\&#jilGsr=KmD6Pa3-:JNXZV@OV+e5MT,dags264?3nbC%('J:"gJ&Y]>cKG&]-q'Le0'DgIO\o=^*7OJ$HYSd_B"WE>*HRtX0PHph$L`0a[3"u?=3mFmD`;*=@3!i.MR4N95P\a=`IFPd'pqG%B2u>Vr2:@)Zc3tM]!^m@5d`0o?S@D-%CL:uW6E!>(Q.>a+t\V18RNa?&Y-^ZCt_XX7Ut)u=4oFa00,:slOYE(I^.'D9?RCt]fLqq%%9->U,Y^POA5Vg2D6p2$bMs3J(b#rgX0Pa:Nf)add1@(!Fue^@Y)4c'jg)t88sS!"Xh8nNSr?+V1m&l;=K3K%.FdYB\]SJD`]DPJ%\DMh;l;J/82,KBGQ5SsHdRa\*&1:CR,\E<=;)Q&<jRtL@['XN(#c#6m1uMVDh;4B+<Jt-X>0't_9L(S>SkEdFIAY^gC/K5V`3bc-%pt#(o3rA@Wfp_X%+gr4)SZT]+?$*%a<Um_pjtNE*77YpCMrqF`?_W+hfJQ#D)aE=^i'b(WZ5$K)$H#>K<U03C'he_aCjQ;FQO6?n%H3V3tg&iV;.nHLMp=%GaW<&hPFsL:I2GSOq<Q@7h7cK+)+)eNUF"luK*[-k"%_0qGMA.gJKEmXg@<-2K_5cn:RV&"_/`f-RM6ra]%q4&S:7dNJ,LBIlZTM#\tS?'8T'm*ASF:J+o"'!r2eR>SN0/>t1\XL["kS[DqHLR,0Q!f25ar!$:XJA;(1>%gkb=Ba[aL_U-*%.Yl%qd]S<5`&';[p[qTG"n5>K84Wu)KFC=,_Qr6EOX<PJXIEVp46A@[OQi;UV#U:M%>\FMl]A,3H'"UP>76>j\9KFVGn:-2P\)99%+D5%9cFIZ;(82JQt**/etr_GO&dp2Hn-^nV<U8Qgu)ol-qV+QkSrNlS$lA(?!![+IiuQSC&5t$Y5B@f3;iSFK_n0(Io/*&&$YB+ZSo]i%TS>NhciNc<!<<NV2ZjV\\cH7WT*rb&.gSUgVHj3>8SBYsGc8X_q8/"G8Gtmi*C7'G=Gs6E>TN+Zb6&Xq&7DGrd(P$U@0g>:OC^^a%[>fKQRA<+/5SB6&,Qr?^Lnh+_D55ocFJ)Egmf636F]jhIDuaVaYlmmsZ\`9p2)Bkd=B!Br0NVbT^lUGFS<:d8*L_7-!/6+,9I)#*%;kLAP[dR.L"JDIY$,V`ZF_Cjt$QrkSZ%>[*F6!_U#E.A''_lWacOl]R$<0*/KOB-,(6L"[a_$kI>K_^;csqS]77h*P,(]t@eikC9%*OG$-%6Zt]D@grB1c33SFU%snW)5jS3X*=>.<B5YgH&;4"HhEl5][.N"NF&"_Zg.\=rEr0oQ4!.Q3!YVn-!.(%%qX42'nc%J7Isn%"qR,Z4)E=)PY5(OoWTYnF(j!p+aBgAXDh^k_7"UUFD05l*QZE(9pS-a)[..KLcc4Xka7%iLm%f@;+E);Zb2$HX)r(jaGT/@Z7-fX%LiPjY)h;0oj@gI9Z)h"dl`q',TrUD#XoFo?iZ=$'o#l2(ThHjPS\,`d_!o3UR8C4=3YiRuJl7S9a;7\UJO/h_Ba\g=1c:#[9n'IT%KpecU!u70/Xi1PcFCN9qE%T?8SjarYa/lQ$BS$3l&bjnr>'ZbA9B5H[>'X*%giB'B<?T'YKsI4@0ikI`Me$<9_72B2\%Sgn7d^t?%4hZ&UWG?6SSA;-VW0j_"#t/LMVCYZaRd_:(hMN6-3Ap1ECu?L)e/AWgK6SMrmuAu'H1On.!en;Gk74mlJq_uUOOFOSYU/V#6"f5r%MZEW(iW/eE<XqJZ&u7dC8khR*#G5`L^DW9-+lrn"$tb>mPP"+A"bb^!C>ODSB:EYH,.,LEB@npCWe+&`N?H-q=od4o\IJF,[P]5_%0I$`A+?W#J:sjn-b`:ekC0J3i;mm1\VM2iI#>"B]ecK:LW7+rGojou\=C@H&mfCUfUB)bkV85c,&.!9))L$`<,4,Pa'@jU;<jd&u%iIaM#20"^Y$d15mAGEUq:2Z540,9;EkNlpZDgQ@M<Z80lfhqcNah+g_/Ld;/dqr6)b:8.NF`utQ9WA8+!98`?%F7blB<qn%1#AX*%a1=%CL='Srk^p$TJ>h9;iP6'$dHi=mefMu(T#Q:;YT6kP6qgQl;%83XBLaYe(03/9l*8fCil.sJ:"L:uQ@7`;SYe5n'g;L7P`21?%m1ErpHt9Ug"<Bl$gJTQTW#qC\kES<+h-n"fajh+pf9Amb6h%K7%atP09DMBl+*krS";t-RgGGU<WOT!/Nf&#DjkH#OTSsOf&b;\H%FJ4@Rd?/,>S1@b]@\A7A`q2*q4=NOXNdZH)=@G`G5.tWs(<!(iD%UhiG&hFMAWBI2)O(GPW].!iA[rs<:R:iSf+\D-=p2jR2AZF)%>8]np0`<J:J88RBpsoc"3+dJo(iKRcp+9E=E$Y"bVQDaV==Nq8U&I\5o,e]dO#AqOnQff:!up6n_DH3@"`+b7`GRY,CR-j3]G'ZC%Z4_M:[,lc2KMY"#nj5+c?,pNJ4G(L\e=i<h7N!j>>DG!/NPLorn#;gEjcPADA4)tclH@fa:KpU`G1@n&/?J(!@$aY@aBEEuUd?nn%qKAfG`CPFY.PuH2jI@`E%Al$0$JF!1(!Z/7Vm+U&b$ngjmNUD@Bk:*2-Rdu91RcH8Gd2XqYs+%^5qQlR/k$Mh0Y?*13EMGO5\GV&%'d-RJR\1Q]b2LuPCLID=f$]\h(>B1XEWF8I\O+!/TLOA5>,`MOQ)EQ\#=qhi$8V+t"&u@Y/P&TO.(?'c56*uf!OA0H,9VnF(B?I<%LR6^c;28n52?6lm!2.,.j<Wb6PQ4NP9(T\6]![r2P?U3_?)l.5fO%e')=XK2Qub0pH]1udO@e(C*;`^0eUAN&CT4_#W0[::l4!bg%%^cID'b=0T.k6!^#e&-BJm:%_W95/m*S)On#>N6M+[@qNo51ThVI$_Pb8T,uI%NDVKU^QH7M[2_6;0Q?RP[cI%(31/Kp?ZVN(a,9%WS5*=\>+\Ip)g#$%8#`ESaM/1KYA?5>\[G:"0E:^>OFB&`CPn/>)aa[D34p8C"dm7;.Ek]+CSD(Wg8hu20r@G'lm2&Y8#\a&V4Ak%nDg4jTTrhNS\hZR?E':2B]Vb(gp=g8j(39^R?WU(\Vg-d2UMX;"C%]Lb?@S!1egTY/7>\n+1@92ISS4G%aDG]LK+oDbXQE.$EB3A%8qf+01_gtoeWD\@@QSs8"#$7qaA`-_MeeNoVH2f#C^pgMWR[ePp<]1:QE)fYGpbLf73OgOl,IDa!B(`nTjQ!Fl:_b&j/Zoj'a^P7%P`Vnnbj9YN>m!A\D=H7kXFXPUQ15^46m.$D&qZDc+=R&C1aY]*+Ju$D;e8JM<a`.'W;<pFg2G<A`[gFLRU4&1>#fB9fGO]d+HqgY%[I![^jG37*J<Zk7?7]E]H8sLrP]@Qt0-S"CKsEs'8SIUB+#GU^cpV0IDMEIgdQ(>";/X;;86aS1!-,P6dR5s7H#;t>oIYCD0EPYg%!$uM9gbnB4,*l1+5eq_C'50]&Fkn9GP`&J81dS59JoDpfB*#83F40Ta[9gY2KNj^7[E5[V2""\G-Wsg<l@$%>T4&@dNu@/F=[<Y=%&'ggiIh=@4g[[<_ekpBDoS,&l#<SVn,O"N\l<\.u">H7H"k5*Q8oY7S;<J;@F#)4fnBY?b::?Hg1QH,K)^I3O&FeFfkVsfuPlBWp%?)::W$g(V<rMHV!@\Zp.0Xb>@ped'[WQ17gj[n/mRO>6U(OSi]H,sW>/I[u0e)t0q[E>U=YsX&!VS0eBXt;R]8@0+V6R:s524s/n%AWJ3r(:c(fRHWs-QeM:U./_?QCl!4X"%duZKs!6[W#LrP8#OOP1X!>Nf.-l\bU#5sUAl"GGk,FZQo,0FOMK:t$M8.W9l=etLbYZd%D5(>_4B,Js+)S+3m_Gts]9<j:374kV>/N+!!*NZ)%[E6&kjWXSIEYc]N0`UF^B<P$ODA=i;fe4]=j'b^J_$=la?k.57oNX3\E(fW%:sIJ^$P6M'AuY>>,^:6h;M!eV!2Z.PVkJ`4JIGG,9PCg6+hTLJQt(Kr+!%"ZMkcu.X]crCm>";Cb:"hkhP-.0dU-AKlFG"g;%?=#%46K>56\FO"0EsTgB]r:m/U[ATdb[fOW2@6OfEAH>LBKYa?ic4FirH$b\MFZT!eeDVa;VIG\nM1e:!IA]XM^PG@W'N$Bs+'#QaDir%?sYL++k*IO'UTK6^d:Rue!(f:5QJ)>-_Zc"FR;mC2@2c52&8kXSjHmsCJI4/aYhu*7'-lO!]7/V91:TnMFHVrF,>k<"LDiGoWAAj%9:7fp%X"kOLpA,fG/;qcT89nC1`Zj5,,,k"10THg9ib([*qb[=MU9qsCg2QOF3QTBf%:m^;q/X6^n!sj-,O3b`WVTreL6ie7k0^U%Fct]@gdn7=RTf![l0$86+9;-Y,-lbXhuH3)K``K<;)8\uCgcN8>g6MCDBWOT/kQqqbXd9\Ou3m:Zq)7Tl%255R1;L5hMXq>;\3`9%Gm+MDdOudFbgbeoL0LAP6=;Dm>f!LD<P+nRUrrFo?9s;,_YR_tFp\,fOH,$"3o<]?nZ$+hjLp58p#jlI_buS"l5?1pbWHdXJ.%fg%O5M1#a2FdkW"@ulS'Id>QE)-fMIq,d2=)!tb$O`5f9[B)[Ki`Fc!k>(SIUYH@3M_*nIMRc_Ff"P1%l-NdSNX3XDGeJ)6C>B^9gJ$%C*Ffj/%l-k97W^$V.L3QbWmGp2k#20iEFijA^F;rN6m>Dl!mn<'p&j`!0B\=!)t(,lH%2:6R6Of1iu`Z&d!`nJpCo#Be9[LRaK&L%eAOMgBkMk>k8#A&X7N`fALem1'2h[p.om(b&?eq0/Vb)B(r6<9ED;@m[1"'jD'dZOi'd,O2!#='No8h?9hc@3e2@Dj0.g(KIaYSl%(]\#h"b;O@/P$7XU39Mbe?%<^SZNal=a?StYYf7t6r38d6BDq5W&!F#^#m>f>5h:a=9*mPP15fk.BA"UTZF+WN3o!'6Ptoa?Z7]`%SA@JiJl)U(7%m3Pc-/Vt74>kEY6:3lYJiIhfCgVC3u\+\6WTXaE]/L*Zcj<a5Za&uSmbK7!"`"/99n&k6-Y?XXZoeDMM:&#TH-TS%$T6)=5aFd>MM3VXb!nL0CT&GAg56?5iBUB7VM>W2cB=L4_8&N]H-r8#CBZ$CKhSlH)TC!2?p<1o,M'5%EJinV8(n(tC[kpB=K&G.%^"neWk-f5^j'?d=/lJdW9sDX1m$[U^Z6(?43o"4Vj:(h2*<I[NQ"W"5'a`*[XMbJRS3h8P7?>rC%"tP#ef/7AXF+)_;pu[6YPb75%eptY092'm>W-Aq'83/pMeNSr0KC01Fd@)3Y"ncEa*io/@5aWSm$ED_Z"Q'\>^,ZoL&.GO0XK63*.PP)H9&Qjfc96hZphY23>ruIH%WsYN/rFHie)&V99OO:!4aRuOWeb;)ROZBg2a+.;4Q0Ar3`6A=WJf0TF(("N2&RRQ(nVj_<<YKHRRJEeP!`3_K`qj]?f7M)l[!DGC%;3^TS":(leiH1g4U'QCrd\n5:(id9U6"(Ni$N#P4'!;:b#F%'J'sO-qF/u6Gl_Uhh$7ZIY\OB.X)/0=PD/b.!5f#kp5[)uu@ZnoW%-<?+f!Hr5/'4ci2TAp[(&q`Y*44s*nmk&8j[hqVn(r"@1J.:O<P<XO$Q2,KI%,ue@j1k#\6qLlg[]uXlgS/(^rSj'[=FZ42nu*\o%]b\tPlEVQ\eg_`^IP7fSL)+0#BIfGG[X]8#/-W$+neC(M>GE\bf.p!b"UiZZq?!SB8n>YffOr"LO60h"L(pb/)&:9c4GAM'PSm.%%:sM[m5`)nW&*OYthba3n(#LC:JOR-gf2S")<^"sb3idHVX""0IE)e]7R0Csa@joi!5>LgH+c#2\J[0D<K+TV+H7]iNlLKhDhPZZ0%oJsFmMcie9<NJ+b"$Ya=s!<X";[*^^?EoLc7K-RBY;YP[O/NnJ&N,i*_Ef:QlVLNfNNZn9)YgYi#qWYI(/.B/p8Wi^Jj0tsK@A]1%ZE0u*D5VsN/FXQp>8b;@H9qL/_]?nCZ--$s;1]&R6;_eO;+4JB:e%b@(>6c8:sObE9ItPurRY";J__6\;NpB6#cZ:QDl7"//2nER%[kXW';2knk3Yj;'K)g(J6_3)IJ*Fauaf`H9gc3p8k7%CbFF2(]ERFmlp,]!q$oB5FJXqO+Ca-k=j*j?N3#s,lmgO:`6P`]SbgLY[%ZeFZ=dub']N@dL<addOk)JhW=TMu=X+3WA9VZT;$'cTC1)j8#EA^*J-Z32&?*SE=r9A7+UgQ3u:U-G3'A?`kJ4eU8c/8MTKDF:]<%3?eqi,cdU"JVI\M37*bg_R^2uZDM\c)j5am3]#9I$mSHTAJ')2,D^$;7p/HlQW^djR=PIEgQ2j7&HYm+)NkuF2R7%q+^*4klo$+V%KmR_C)NmNGi%]inaeBPPlS^#@0U]gD7l#lR4q;]\6`*M?#<J#NjqF@D,h%bm`=+UL/%Qt]7Uo!DWG1rO4j#;Yd@GiCA8HnV"r`Z0%'XJfn8;;BcR"lTC"V&04Zm::W4`riLJZ78@@f;<t?4.lt4-IEs^tL^FNb!)j2.`^2RB+NtF<p025s&dP<^AeL4j!QHSMVYaeLU=m%QZm=1Q6b()rWVm8l@jb!TLNq9d,9PV+NjrrZ64u(rFE:)N=k-[&49a=J+$WXm2_U?noRt+YR-<I(NMS%jN3UROV'Zum'XP0PRKuC%7[RCVZDnf:#UO7o*VU53$s4naZ;.L+5$GMuOF\/]k+tqRSHG-n$I!XgP(CE1DkLY?kSKJBV&g=#/M*=2G"K,VN[818&pKEJ=>GNg%*O0/+o_sLi>G#sf)&ZQXX+1;<%'t\'<=`1e<0Qedgi6i.3hG`t9If?SjVo`gU0^N7#;@#2:s8H"oFZ1%_&3bkZ7]tE&PRq%!:T^n%-F9TD-SUs<mJnU"6K9&qA5L"YFMfCt@T+=nA#sdoV^>fandUln)QY\)=>H2/^`_`p-%dE7Q:f0^VKehuTa,)g3`*r^;s1#[:*ght%+-';U"=&:K(R6Nalche@!#Z$&1!W`RT4hU":!%UYACJJ9B.Va2>3r2Y8qtJVP+?bGR6BI%-Rr8_f?]ROjq%&K-/0O<JP*@7[o:Dm%2#9`h_sCLF%@%>F5F$FSQ#,BuVZW3##!o0D+/rcaO-h]2SP"WE!Yb*T8d=JN0lEq#=E.1*[:@=U%H@Zp):kp5f"I2p^\rg396uqc%=L+rUomF]@@GOV:k`-tTd[qVdACtcNjT\A444<-q9/`pL*O''qbub3%g%sL@Oq"+M%p1U2)2c7R//cRAou&.l2X_WqA9OO4:L#[-%Y<YR(!0],FP`K3-Cb3VhDnoo$6H0+]N6J#:C.dL$]g%(i&DdFFG6!i#_tA!NPAsN2gjmLCHVAYB"X]^9'&W$0FpC]qRKR;;:LGqr%49EQXOE8I>,X_FkYKi-?^,),brp&i#$V]]hoRT]EcfPHhR=FY?-A+`k3&^<&8B\\2_9#f$1CeB0rN\&B^YiYoZG-aQI3c[khVGoQ%Ac\o/'*XLM24rM`6Ag!QFFX0<LjGYA[>fYt3OqLSi_U::MnUG",]kDnbt,JYU$`H0Ab9^h9gZl$<s3"J@:FH/fSnIpUZ4PY,l/Mg%#%Sqdr6Ks=(7_^f1kr[kN0qZk7jj;H6)"nAJ5]1K)8X9+`#LMj2M$h)FO4-dZ"KiBRn]a6OQ<dQ&KEXYO>8C[<SNU?;<^dj9GM6B%b&Zd8J/BNbBQH]@Ec(T::?:sQ'0csF)oemD\jp4TS4lt,Kt/B4NBnb?QJ<H:<]G+Ea#)RH]`r=>+Uo5-1fd?4C*3q$:SM`j_Umd(%V_Y<5`-C[BYo0HU#%DPuR/B1R*NN!<^?_fG0-kNsBWP.m9quk:NE$m4,?Gp,1raVc%]-S@RGV(#b,c(Pk4dY`g4=1LTpM@]1K._L%/f)R(gCTJo@RHXefbn\&;/@Mb&.DK>kDKh2]MThr_*MQK\R=b^&o+U;c#gD#$H#,=h)6Q`F3n#XR[fHl"/ASe5+dZ[$e7OQ,>[^*%Ml-fM"?+4"N_#2OZ!opU%]>2HD9&O59c57%r3"tN1%,),f?R^IR6OD$P_f4.]&QN'5-,eF1cBqo!jQesckojn4=eoY%N6j,%\h*`%Z,`_V!]gc']K]dWQ$B@lTX!(FW,Sb<@)nLc,tEThT9?#b'l#0UlUu=0I,WPP\W5<MR".6lqi)q!OaSf,\N"9(7>7'F26);K)ClpL%K3N\<3luj/dUWTB[45Z+FL:,%Z'pEG@]_6o6n]H&=qYL".N25U0/>Gb[&csT\ee5IOu$0Ue8Wc:#qEH[X*$?D)0bR0i)Br@%I>:s%LP4laYu9qi.,T-n(m><>_bu%I"c!Vn#rDj=0,;6p%h&8d/9+Y:8X*9XGV8Xg^jbMR2RmR]^1eP7.:de''1rVB*Bt?<O/<a2mB_Gb%[Um:hQgLG#gM'/4R=iK`@UX-L3_UtZQ"Z=1k+FFa"3F.kS.\uElMTI(@l"A1%]8Aq2_&NhfMlt>(m5#4(cDVYOTq[+-q+B#Fk"6h%pQcdU<`qTe`nV8A$qkhN.1M=Y1fg9)H=<Sk?R"AD=]AYgj=^iY]87bMd[41D3?K5Y3\.59.O:`LG`MuQ<@t]TAdid'2AsdQFlUp#%Np<K&6p/'@W19,D-Dfa7<eS[e?Hm-uMBtDX%Okp";(^)'7/S@D(*$f:CF&3ZKW3Tt9Rmnq$W[_B$)O3HQcM4nR`Z:[.$c!K0qbJ$%>:.R*,4nI_O>5HN`:$5D6c?W3AN1`7/47$?8\lV@O(2?,?Q\3]o]!.'#\Z'-A#>h/)I=;aZ".\_anUNf;Uo*#1=dL46&lYKeji<p%B\\/2eXL0pg1\Yq+?#PPlQT_Ac7on!)/UGr+k=r"D_&IH-p\mQ6ULBmd4q1-`lS4-XAb?Cc4AR?T`<KJ0q^p8De<n_36$aa8XU<&%Rd,fGk&Js5($HoBGBNf!afnb:r=CH</dA+g_=rK+.liipR#<[RA=R-`.\\6qSYR0AX%GlLAC9C^'f3PakS\3pm3@G>AA5Vl4;%Ob%BdiboolY*PF6)9sM#.@l/br1a:Ct/H3mZ+(F6FWT.'>oP89;P2+s3P^')bc!9UPZc%-(%kKjnM=n`f)!%a'NK3pYMo7:^m'BW4#G%k5oE;0ZK8,63<QsUY%:NEe6UM*d=AV7\gn%<IRcPg_iYs-k$Mm,[Xmi^bQMD\BrAD4&LTX$I"bM^1)c9n&!;aC+kN0?"WS/Fd)1*%/BucnQpmk8Wi5,Le$b(2(AN/T$+al[RBGfM0deg-'JNMUXBFU5QlBRc#"?lde1h@p4Uk"s5rqAo\D)"/'ct'2eQnASYS%eNj<:X6%ICJ?Rmonq$f0nbl\kiU!XFUt6%(PIe4;cYl`@%me2hm!!g('8,C]#oLS']h%\,*Dc`:[B8h'/`,m9paZ=gDSY7N03:-lTTZdP&TA%,Q,#T'Xo+&D?"%7)["8ANqK:@6drF$5L&-0X!5.Y`-ZW1W(:RZ9O,[noN.VB>g(3hOj1Lmk%HOr/N=#_XN:[]&6M7!^4V'K>)C]<%m7et4H?RgRn:=t"6ePZZGK.512G,s"dQ0;k4VY=IRS;16U5BWbQ1JlU*R+ab[X`V_CYru)`Rcr?B:DGi,KQT1O>@^7_%nC)'o?V(%1YR_p`[ESiWthuOO`lP-b!g8H:t4jYj8jX`HeFr[qB^,hQX%^rie)2?8G3.P$[$Ee*'J8OYZ_;3jhTu`VWT1jCOL$^El"Ro_<ZZq%"brVK<Hg&s;=Vbjb>fh64E@uie:Z'p/f,:J9O@*oY&#W5".0J3oL7AP0NT$,km6E<Y,A-1Qj\QHoWpTG$W3VWhAsgoBf.KPR"8L5%JNJCm?j,-[l5e)K9qub0F&bi?%TokX1PP!*QHKCt7k>Gl[BlL0>h8Op`,_u@/M%^4%B+[b==t@]F7je9EhPVN53H0'Gb!<)ic=G<%\T><i]7E#H,F>GS@Rqk!(Z&I&@Ri$eq9.fQbCrrk.)uQF(W7[DboaH#%4g[jic82No81Yu5.A%,S;$88bf'^0ZHU"7\S0Ah:1,\T%#gEI=$WWBZb*O-mL"0k4OlZXcah+mL^g-MHda-ac>h7/,m_.%%?Tn@[/\Lk:?[r+S]C.r]p>MJ_hu37m+27cAL[>QIb6O:3:65q%%_[I&8"Hcioob7?!l'lOoJ5QIo'5\Dl;*6PiX]HgDU][@,hgDn]EhlHKh7FaL(&gEGDL[!4eo,t_oii+'0X1+t6=+s7`D8]G9$7[#%%->(6hQY(/fP/,=B9=A0C&,[k6h8ab?9=(hbVfq^1*:iR/@'\[5-W,ZkB7UY)*5K95&Kf6=aH,2M[[HcZI<t4).$/'?[!8'cD6uh%JOKdF!&D@q()bp$b6^V'[DhfdA<B/d=o*tD`iNE+Z,i)5.@s<d1(4X;hQY)jLA,[sOkJB6A<Bl[+?Z8uA-c@*3O-Z6)i#j"#UAA[%bdma=,MR)UZcE@i)-,qoKHmh#k9H%(I;B.O@7M6"ecA<r1:laOp^SRe;m$!$,_Hr_.VG8BL(]L,=>;1d@<8gL'9N]E6:iOK)0DV/%@:i7[6[%=d!1ZT7NSZEc6o*KJFmILG,RXmkjpdGhDqp1[_:%r\,$@lNcOM5</qA]N"-<p;jES4Y+;n/)Ug!1OZE+bto*IsBC-n`>%G9@ch!G.dOA;H`Ic5_@Fj@.knaH3RGq8=LFRV0hXNst`Zat"QYA4Z)&YH2fV(!SIn4>M![.7Xk11>$[;X?2IOWN^BZOf@I<6mM;!%m4bi?3p\)M$nDM;n,nW.%/"UlO]`ZIKTRS&@@p=L1=Ym%G_2&dcC3br,GWlf[(6X#OhmFo)it:A)2n%>#t>]8@AZD9(`=I^[GSd@%%ZNQ/$r0J@hn[;UTd*$=Vie6bbp/2Veho4A51%BZd?%?G#9)9=Vs$*eSOK,WTA)(=q:n/RE?Cb+iKB6rK>9MjNK^hmHR8Noh#/ct%]jYF$cBJ,Q^\6pbYPiamm]WLZae>\';]7&Yq9G'Riqso!-J=*V?<:($)^O\U3FK*@%VM=)jGb^5+b?`kT`J[ViEk[C<,fi[TurX[%9f#m]O6%72eU-u9beZMI$5JPqgXdaKE8[?'ljCgfjG.KT0<=Yni#0HmWZkG^el7ZQ)d+?nhtUu>N3f!G1S+p3Rc[R5Z,n_[bb_$`%)W;nSK;LDm)<NkKbK93FhF&6<^2KLaE>#eA)anNikDa>.YA@[9JOj@LC)BK_n`h!4:I3LiBEgJ4JY4[!nB;01.bJC!\rU6Rq1Igg%&4C\+[&9ngpMJIAme]mYZVb7jbRnmbF)BPEFQTs7l_*W_\E1bRj:ijj7q"$S@1fm\KKDL\#]OZ2O32S<&\3Ws\E4!%;+`K0g)+]g%4g^j!a-5U=%?XB7P;#$'G+#?aA6n&:E:['m"kdF+R'ljf@Z>TAQle<"+#.oc/](GKWbScJ_'!G4.7?'gGuGr-6,FWn&bJGP<??>3%;Va7EiiaWp-2+o<kYYm>E8!c=r>;*>S8p>@LYmBXIt!>5A?X7%Hm2nqNo=Ns4+Of+:f9d_bhfVU]*bYSRfI%o^fHB[U?Vj!+mY$P%VSHW%K!TD4P@^tqe1@30"#"h2(aS&QLt:)jK/Ict=^`,3MM'33b%7;Y.a^)3I>021!=q-+N16#rT.T\(8nQa?OSpeP:U4Df7_AS_%9`,L"Wk8]3AmO$Gjjg6N9t--1C]h)uAQjl3:4kpE0on`E(i2QZP=CR%I[Iu$;\EpWk-6BR'c?^KiuFm7^+MAc,Xj9tEo7MSnZO9D%,_[*E"YqNu_<<G%$\gQC7ad5IfVhW91jGCDPjHDOJfH$BA'kLKAcdNArO\4Q9;BQi2`p2q8.<IIEk3'_7,0V%JrmB;ZBNRkp??Rn%PGQN,'8DJ&6e7rZMMF_UH05o3]>)urSKbSgS.1OAi5K<N#9,^]G,bk*;e@#%!q-^j%R]Bcf^5gNTpFWIB/ids:knWIlfE6%[OJ;`%$XV\u0*k,oP\h6jXs0R@=#iY\78OX2V2XUV0p*/8KT?K%*/k7;jm:7">Y$c/#&N`Xapk`>K9?Bo7A1!^)'uC2>:o!50VGDR<?8OR%d>5AE`;FK.=d*.,F6fut6V?q-TE_<gGhc1r1<sD`"6&!ms-[<Dr]DKc)*T"]\7-HtQsuX%Yn&SIieF.@P\?]4:tCdRV<L%HW`Bh=%-MIs-U>Xh"<+ug*ih//GZp6uYJj[k9dADfbZ\5)f6m-pk$$K:?:8_Nbd/6]a2@YdG<6mU[_gQmT`_4c-&AlkcSU-Tj:U&UNS]"/?%dD6f)o+q0*>MPUJRKY^@fUBj?e"LEUl`m^/$@8SG3QYa*#^TOG"*D.5Rb1`5E5jAN2Dl#LBLKcc%7Ao8),<?<$K*YMU4Scok-FYj%mJOhfXA>8E'FMdBZ^`MfIombpR_9]K0He&&/0i"cK6,@ZoV&gYL(YN0_5iXVSqW^%We,MX'VsYH;((QJ]@,M@<R"X8oq\IN]d`[A%gp<*#")O^qgaI0>>787u\NBO:Fcd5f'n*n24DRDo&l9ML.6%lO.'R:"^NGIe)BC+[2+I:VM0tH0"e=Q!."&@3\LI^@:f.8%7=%`f%8r4&$H`aa`bH0X[ZRd::[#U)2n2Ycg7f%ui2U+[R.7UM91V:DE*QkCKHa!.h$=H3k)1B-`'nT;I^h4g:-OMD>6ZlbE`>BA2B]sHg%11L\CS9l$'0/P0<D">uZ_ooJ01^*u&.Wl<d)/Y$1kbY!T%U1<lc!6nN_:E-+6/]-'k>p.afoiA?((qQ;Kj2,KBoZehn9Ps4B0.f,%Bh`.A4-2M.XefITN%d&%oeO?erbI9+I$pu&Wf+/a4'O$H`BqcSnPInJODi^UXY@4*kg6XI*Md!*fES]Rl*d,;68=*fFWV?E<l$&S%#1IKqd[7ukgS2"q&RQ<>r+:G-fs,0MH-!G=qSJh,cj<th*6WV@'Y5:G"\NrY/(>b$4@/n(/-,fao5&NN+MoiQ1QD32OG4;a&"B\"%e2)aT!5_-cP_#?`QR7&Q(pr@4!F`q&-SfL!#Ard2!fJAb(Ju<X9(Ai3G/;QU6%8G_[.$4f_i9G[;EU93%R!I21+?oM+hMPiCPnCK%?W]3F,?gME&hP8q/YsE/DKlJB$qD'WLjGB+PZQN"e2-6;'Xj^4K"%Q+l9d",#4s/_L7>a>'hX3sWDWf&Ff[F(,?#3"/=0lhg:C@j%IPeE*"7[_hiIij'dt=pmdMT\2l3k7;@R^2+QBS'mn7BB`hkRDg;+4a"p,F%=Q7S'sLQLfRZd^!F2g]W4=]*.%SjVT:MP$4dp9./2%UT#e`Fe8See/;=#_L>iL-8h*gLfVluZKT5IRUh0hg%tlpXP":g3\4f3;[We+Xo>:t`GmHYTdT_$!r9)!Y1sP:>u0,ZADWSN:5H=k%L>S5)+%r;0*)B$`U4tZD*3DuVT&o1/d>4k]Rl"?ujKT)>(8qWX#u+9,Tg,L=5(\>iK1]L5jhm+<8;W8&gnVdGRP:t!S5""Lo#Q"*%g8j)?WG4/V!@Vccfu49_`"J)4[l06I'dqSN"c-JYPTB$A'iho?WC=iYVU9L!<@WX^jj<Bk\u]r]C'=@,L,/WK(K".%)2cS_8:V,/%4j.##-7Ep(B%CeJ!]5%'gf<4h#@$j>S<K_]9scXsD'"%$$N2X[UJg@<cA_\-MAa,6o^&rH,"X-r6PgK]^VXor_#:ITCA0"O`o%>"%Jk96H;ipW+/[Hs(O#$HO'1(rYFGN@P+(^VgJ^p.8HsZ,8I2c<.NZ*h_!s>Eq$FYU1'%P'VH*C6NDrWNj)7FI]@AP/lLsa]l+uYMe%&fO0(b6Za#HAu8ZHh.r9CZ[LAaTGeeOg-=UhT6c?]8B(+K"<D"[mGcgk_5"%^95]-U!aP%a##SnjoNgaB/1Vdq&a'd"dq^]MCFK$%-5@loS@[?\=m!h(IG9=T3b,$qONX"<jlqD)dHMX*_2F"A&3\/:$fc[k<!CG[cnr]DMRF^;;eYTjSnn$e9l!B-SBff3<(0U6,QT4b%!LkQh_(?C$NNd@`Zj&b%_bpt=3=iI4#UQNq@H1!%jY4HD@%2Bo<</.XT:?!"Ab:^[S=D<5&L?[%(&BVIiMrA_F5umq(c]2>&=15g%$NVFV$MEYV,IQEZY#"T$*LT>EX4d\?JEAiFZ"#!1IZV$a&sB7'2i:A3jjepH&-t'-JtQ[T%f=>sQ+0(]/X^C$l&9<E][O%u-\:a"%Kq:i3BHBU@K$AO"9&=Ap5%9@Gn\M.eq@7<.,Y,!dVBFC^6bAbIgTXC#g%HAo#8UkqF#ga(AS_1\[dlfeb]Z]Vmm$,K:N&F"k27jj%/O0#q:!]F3H3b&=OQn[!mXf:;$AAY-m)j$pn\DG9N4;L=5[!!-@<K^LZ2M`^Eem=F3HR]oS%6+<9LP6CP`;uhn#AtkX,j)h5T](1%e.J0qZ8@liC>Hc.LYEQoNte9BYfOD6W+Xrq?!bqV))L#L;Jerl3[h5H$&\X]KQ4#4Zc12nV"Wk4%Nc7nS:ZTpC/-OC_['R7"]U%R%6@t-G\p+sE9P[gh$!73=,_F@2"5)g)L_^_ZJS`dl]O^k,Re3':PA$)3*qgjI)eJH7nlL@4UrmqP1Jb?fW1ZJNWT7Te,S@pRM.nd#%*UgSO8/PCY`mF&S-:8Z?T#$isPb)R2oNn@A8Q(s5ph7oD3(?F(aZe55g.G\?kiKZTF?=A4if(lDg`>Z-K%[T:PT*>/*#'B#NOC$$%@=m6kNpHu@JM0/UF!MZfh6SfQ!j.`$`/m5k8N^FHPG))2&a1&7hW1F^;]EkJIdVU%;+Nr#bC`q0['7nm`Yu*=(>h9Cd>"Mu]E/8C%50>%,n7ACe3$5QrTu`bh0.:m!Zma0Hll6mIk%IAmR\VN20iD_L4Un\1eU_Y\])o#bE!aFP0;'UHb1u2m<]%,GTP0hWm#udcI\HZV%in(8I^DUOq.%^rpU?\%<7FnT>;mmc;G+q63gWIE_J#W.E:[LEbm6Aa^'Pe^,ND01q%1RccFs!6O0e,%I_KsCUB@*Th?W8)sL.r*t%i^;s$1ZUftA"O5n9+Es#m!U;,9/ZR8c#/50I^cGZ`L[)*nCF(k!('?(mL%?O'r+[m+^ta^otdi.ArS81L*-L9lt)Tk=d):0TE=tP%UNd`93D+EECSKI52&3#6#,R)0$A[];8O95F?`)(kRdqRP]0=Y=(H<R#R)k7/_ZQ.^@BK7Nn,S_+gK9$tP)f;N.s:rFY^5/t_28`0%d,!Qq@,Cc>a25G-1#><;J@bC?<hFtr=&8M]el-.uO?0iHZ!TIIq"6#.#?>/%9s'=&<u+_P3)ct>;_CaVb%55.+e3bR>[C+7i(U\o%Qu^TBEd9D$im*e3M^]I5.@1fK/fIY@/Z)e.R<!!rjcVF]dUL?FB?I'iP`%V%/hNr*FJ`;J9Y'@\\[\#I@;!^tA'2'S4&`:!;iZKb%QuYVh3EhZ(.9@9`DX:'-ZC#[MR;ujnjb>SQMDOA6cBKi;.G(+><u+`;3E*(3VHhrFEcj+uZ8:V-@`i7pb14Iqb<&Y*/Z)crVHd>!%\a3##[[;)\B?IX$Pfq@:CPsX.SLN/+;_IN4\`c_tYVYD#@`jCq.2Ne!DE(QI/uDltVHdA"\\=GOEA?RD1$-hmau*hSV8\\"4&[ab%VHe8@>[C+7l:ebTVH.PHb*Br1CX/.pcBRY?PUhY@2g2''=\QB?1Z`L]l;nd4gUG!KB,auVn@["rXA7NAfBn*H3peMn`I%AFJ&q$&%6c9,XE!;`>3bF0#1QAt_!ioTJE)ViSLj'>_Or,qNA#JYnD^@m/cTL+6)p_RiQ&]HGf<@L:C*i.@>a9l$k6S3"&:@tKJe&WmF;[Mu%UETED+o"k<BaDGY&:CR=XL;4CJoAkei!YS'$]a-a4+]+<"CH9S?ZH9VE<KWT#emq_Ht=JrOsBbe6L\PRnC<6N.m&?d/HfF'"CG@=%^?Q!<[Ldh'8+<p?i9QE]CC@s;%)LO8_&)6oi+i_:(Nopg>6qt$#en"aI)-DBI3JC&No942_&"*-f,_[D*5OQLJhQHr^9J5s_%D')%+o$X#I&-KSJhK0:%ulV-99.p<$c,ma_&!l=YO;b2i!;O-'UA3UNo3Psn=df5Ht>h;NJ6;+No942_:K.4f+rtAmg-Y=&:DA-Ht=Jr%\g."@6L_B'_3YsiY8MpF0*GX)"CGI@^9T!Ynj;hW8+>Voi6./=b6u.Q(4n1m"CKprI)uqIaUro7+o%3DpsMLuV&dC=(4n1G_3Yph%00+V;/d,Nb#eme[I*iOR@3PE?,PWnOa-T3`Bo'nAD$tF*n0M.0D2j;/99.s=No<V=_\[M*?Wn;\A/N%j0RVP.HuWTinrD[e$c?$c%_j;@\<uo2F*5bj%$t!0T^?-9HZnQmP0mn7TptCbeb6u3h*Q+3[L9EXm0/!`@feIln0mqY/Ht?a]P%4:0_XPMb_cIV.004ik/.>l>%$t!-S^9D,BZ=EZkQkG-,4,,C^a7*B+ka03VeO=;44,0pk$t")b?X"A]BGeIl0RRl\n?mu/MiQb3$c<c#_q,]Z0C0OimMJ,%"_E,+%0mpknI!oGu`fB$D$cCR:_q,]ZY<.KB0+;4B0mnCXpmP^fg;<>:a7-KjiG1N0Y:U/i1CRVp(r#DT^:H"GIE1j-L#Eu2iN&!tj"=21%Ui%#532/KhY:^5jE"$)Z(r"oF^<8ll7>:p]CSl#G60%YZ1OhH!XGG-@"#miThR/b20X>5-H^kj.%N4DGD[C0*\,LGqkSF1A!J8:%%:N/\;*.8,3?U*Gs)p\baX[^D_U@Nlok)0J(T3e_=8Sj]$TSZ)L[+^P\"%A;?Wf+DCfj_%a"%3\86;GZWL`lV;P3LX'&Yuh$-ltH=%&E&6k<0C/_iP6[cqP"84R3jn,a=2^[Yc6#6B,!Y5BSL6s6kMgAR2"(271eq*ir4cYLofHn%*\8kbe4I(MLK6_I]-*HRsBu5."W;.%UpiNa"G:H8*fh.(UAt#.08q#4GFEs*3.feEe#cjh6'+Wph/Z?q;.Su71Q!<t/0#Yk(dU=r-`==Ol';dK,)RMf"ff*R/;bSDRb]I0%."]:J1(P)8+Cg/H"%<e#VgUk`''Y$caKf5_"J^SD`tLq(-u&RK@0C!XQV:[8N$-VKbs4,o,FC1l(gG0CK%WTR4%HNRroimj&OcVN%e%q.kL]Y/&0Ta6c9X6E;E!.sbG4FP4&S*'JGW9aIYuGYu7aj[tn(!n\&O^N'PPYq:=RBPa'Z''ch+eQ8#G"iZ#DsWL,G$2d'LC;6%A2P8o&1%t+gan=jQ:^f1M'>LRA$lUeB_p6!"%7)9.7UZ4=qEtF^k54U%3gU!8`RU<#X\/-nBq=]#^o7P6Ob5qptRra5m.dbM]R"k%#U[42edIH]Lcndgr'h9o"O<UP6NjA/o^:K0U"il\/;>9:</(*/6kF4[+ddieEo7DX[fd:2dtJrI+P8L?q-jUVY@]dM"I[3mH?l&)%fEi"mG?bPB=CgK+0=_pO&E*inPVE:q*fk+>^)2Hp'Xhgj&4>qJICq>Y_dirjFPCUAZ5BH$F>AY9DC9]hpXY+Q/_UGoU]D&@.F;#Q%2DSDtkeaC=:a_SLh.W9a&\r7ena2HC>_SLNOla#87tk1.XS\E`H[=`:=;F!!O"9T,BqbPDeD_k>MPpY#r%FP[_EoAsllp59Kg9HP%d66n'`::63^]t!OVa$.akR<"ZXk*,p5g8f7H9<>^!?$6/4:i&q>'N">&C!*/9L,Zh>h]R@8/#MmO(r9mRC\k"3!"#4S)Hn'AFf*G%83k*#2-XIo#`*`/U.r6h5jXB:+*Rc1>d'o^DMs%$A;R]3!O6?WnSop!,%I53-8#?D)S;!J7R2W`8[]rj+OX.hcX[V!@6gs"GS(KA%j\KYI![9.<]/;SL&];H%*K#@QqmHYs'EN33[[JD*!s+N"$.`bm6u:ZqqfP@n7#B<qZRu;'NE,n^U5j&*g+`XQ]eF8'>6I?iF8aB%%!>2*$&$mH&d\+i+M\?Z,$CV_iLk*QKW1'E8#`+:jb-4u]&J-B=pWcGc<S"s1<tGBEW<qbB/HR,0B%)K?,9W`?2QUTIbk+e+*o]0\%&Que]U#7+;()-?\#`+jVUJ3-\+D*(t+&<$X[-5nqJ4R;Em*kXW7:_$X*XIS#?F4?["@R,4Fc@))5eIL\?^-(#&&cRY5ih3SGS$;)%He@&Z0Z"*O:&:'o'*6Jp4HB^K@[#Kjj+2a59PASn+L5n9Vtqidgo0o@:-`X06pD:q@4CAu9HtZH?W1h82?I?3B^:e2Lad&?fW+``%%`>;!![9JQe[isK+MsJLgEON@M"Br@E/,V[6CJq-.6Hj=#!I/T+Ms3r[cC`"LliLKrsC+rG,D,gZ4I&!?Co8b]b(f/ch,c_!t-m6%![JUoD(c=S/i^>qKHI/]fbXHeX="d&4[QW.!KUer!qVP1=qQ+';Pu6ZA3()@qRdgDfHZ7i&n\lFB:r#.E`_OI:A4>"PL0llCnZH@%HmS@Y\KE(^fPrb56:<FGkReD@G)8^W,TI!":"G&T"C+.dSF23S9B-Bh^jC(q,==k.h<kb`6:>i++M4m!&_VdF*ZgAuaGr[#VKPHt%Fp`V6eRjWYBO]R<,4`207K0\e`pJT'$tG@jE(!*#mbTI4"NK4dos)7D<Pd&&?\fV"pj`N39"6Y5GIKE/=j_II]I/?.O*G8Z?4YlK%#ftSQ:>_(!;DP)<2raM:4h^B%Zm+'F'EqJ3%FOr`;D`<dkbIQmnM;J\h7=<PES/IiIQgfQQu4?RL2Z7uhBp9N[]O%B]SC"+[Xksk%_oqS&X7>\=f/%nu,<rZP4I?hR3^ScV--Z;],8R3S0.fKIMs!;bbJgu@m]d:=X)Ni(I<9f;Du%DN]AIkCp;?WQlA>Mj/,pY.q\uI?%qQ#,@nF#%d^NfLb?iKWbJ,&_uhu*!B07Wf1h4"p>r\$G+&RaAu*SJItqAXi>4T*b0f^A%L-[tj\q[Ypj_[leDrGT0*ohU)8r<Ib\%h>?^!rTe\-pq,F4pk(d$Lf2>H9"fFXn!JV'rAWX12qIkug`H1(raGcBHP`BJGkg';?_2`AiUXNtIsD!Cs8@.kq!dS1m[*`Vp%Og1%rS**Wr9&:=s0-qDh2h$=Zh#/t4hQ/$8,W+*huEE)%mU'Lep6_6WI<GED$]HPA%9&*ZA`HFisd;'Y$s)_F<5I\m1g(2/9#:7*rPPC%RAuV?ESbucd)28p)!9$s.ih>e:X:,g:-dRA`t;.T@^=#>a1&H8,k!P4GjWa_rq)L0hf$:LdMi3Ean7H]7+q$@`aFY/@]X;us!>0-%^$KV06fr\-Vh751.+6/V4"A9d[6Y%@7Z`St56;#Wphl(:E$_OEk/4*JcTf2#WOI?Le&T6"G`hk>J+6%E8HU#O1%-b_]CReBq_,iJ%pnLWX1i<B73"WgNN0&4Bm8>_U*baQHI7dd"@a>V:m5d>;NHR+p!1upN,2N._@+e7+H6qG?X\Z-M/&A%&jF5beTnFC8:BGhC>pQo2%(Rks=-,E+VMLd?I6n$P^[2%m9+qpC3?2iSc+X?XOX)4];9Ot@QBrnfUQ^HOra2TV%5qEG4d/pT<[cWX8!?`<d[oEh=gJeZ,)"*g-%Gr_Sh,a'R4\oE6A.s=V9/[0V-:"u?Sn`SBa:f!#A&AJYe%+oMmaJj=1;LiV;b.(:R61\#+<T+o2.';VH+G"QLZ7EnfWtBMbgDA>.%L0cM%4"BTIpkm@]0m:%'%\u6J/dj;C0WC`oR_OG.BsqCO'q'RJF9O/VGR7Ukd&@CBXtOU-F:kD_1A5e9PkgKYi#$/tqC]%AQ5j_F%[.-L+1/:2rcsu$Y#`g+/iMi]uEZmJI_;EIS)`+R`FhQP?U?Y\(_G,i.Ck78Nq139JTjS4-QVM0cXNF^SFX?_hE5k3+QC]gAM>UrC%VP(;aD@TYD@qEV!(?N`(0s2kqX=U1)iH(EiX2DX\1i2g+8:VQ&)@7RH&B*ea)J^1<3D]VOM3R=@5_Vn9UV*SK'FPA4)nb6u@kN]O%FV$M\e**%oFN?s9dOL2K.7i]m4pUToC&n[$A]it/DEXb^g@s)Q+IYT6L5cX38s,jS>h,qX4H"09ZoZndTb_Kue?D;0P`O`=(Fml@%=iJ@_h>04<^Uea(1b%0PJGdT!9^k"&3cm@+PbNH'5RIso#&'kjpn2J/TslH2R4u)hqAaVu)B:(uZr[p45-C9*aSK0(7cHOZ)u9i^%L?kp#'T(Me7cYQZ5%hHmnqU_.fbWYhVPl$[%UG&B=[VjC^Q&!tq"RPti:F&*fVKZCU^fAK<mGjj6cM3>CWLh5-oB4mXUH>c"n)_7%$&@(0A*_.nb7Z1oFb=[3PTFQFPmJmgg]/FS*X<qDpbjiU*1CiGa?ee3]b/A_efG=Y[VjmnZ1<aTqbDW*Pp@FjTh3:,P4?7oYXMJY%bq(GB=XXDWd/l_?DI0+t*,J&j8s)%cd_Z2_)$M4S77oYKkiPkZ3#k06N<[<S")JG@EsB=P:a@oiPk^:tp#?+`5l9[6&jdJ6VCVo'%qlc$>a9An[_f2feirDF<8$p*T#!6Ue+"^!J`j%?0gB4>q+l!=T:T+;"9mS0b`@.s?%ZWcq5GrG;%3F\Ri\@+h*e)l&@25WmmQAuf%jRjWU4T+?&T.D\mo'o=3SiT1ta$;K1AXr(=84WaSb.&sRLCab35WTcW1^c`N,?>4I9S76cE/8OQI3_SoB92[]jO4+7&CukX9)K7+%q^eXR)\EM6(k<&ZS&giE[chm?q#2.FD@L':dd'"E"\6eu_kVoMcLSpPl])=?86=-R'>V2M,ttsNlo285<+[suL'&V35ok\23Go'>%Te-$Fa@u%*giiiJRa,o^BNg(Q4_au<s$_QTfoY^e;(]JeTF#9cmMO$()%2g?qhB@S,#mKkA`3Qfb(g/N=0*N3>MUL<#=-+o^X/3F%T_=8:,C\e5(+8<_*"$->gJD@s_t\$[H=3NRn?TC`NiN'AmC6RDA8'/bHU,OQh>#>0OQFFlBB]kWLL+*9NQYfT0KkgCmt$A&PsjbO%)DjiMk-<$a!Qk]E4HhLSnqi^:-EBY"g+"LS04,lO+sB(,)ET#F@/tI]L*dXqadbqa(7l]gi<d=,M/<FNdl:*`U!lX@%C;k-ISdD@%L-&+n-Zk]6Tl<m1eZA55["sFtZ)ZDn,6mu^7V`caB$j`H"3/7#-NdTun/_iGF0kUOW/LkM0iWQ=hTs>5iUs&G2!2.<\%9JiF`@3K%%ns5$AQ:CG[P0m3r.?S.]GR]37ai'^&;\K^)8E+R$f<in)(;$$C.,T4UMKRCe?8JiKa[V8\6pEr-M`c]ED]%j"GSRe3!u-_eW$CF%MP0@4.%'(=2]=ceBMls>&qfkU/a,](#%jg_kc1JX#+L8!Cnu+e4&KG*6YFb3_g5;%@Y(1[,*MFcs.p9KA;:^$(K%jQ(q)pkf;:>B%04AW'+Q#;u6E7)4SrG#\(A^IAAOh@6Kt<d2q/(eAU8`ub-PN>HeQD;NUPXY"2FS&AoI"80(#>rpos5"iJ]<S,CjMqA8>>YsUhLCS%clYeJGuQ0<N,K`*\>%(:)mZ>s>KqG\C;/6jbb/!(gu3<N)t9HfhhIkc'Q;9S.eH\8^TO(*OOl/o>DE151%[56+r@lI&X;@M$#dCm%)sVFq6E2,Gms\dk!>peES^E!nahgt/B!t+qk0\B*ZYfb-A#]p2g(LghBZbF)K.g?ELs4''&sE5s)M)li)OYNJhF^_/48fZQferTs%\SjIW.<D4Y9[<RK.$VH>f>E<-S+oGFZ\a`fZ>>;.P>XKio.oW&'OXE'[S/t,RO5$sB_Flt/mbSV3NFmu-aA5FZ[+d=:rgS)@J0-`%-#BSM/LHLo`QpI-U%*gq>[I6,&PZMUZ3`:k#l@lh"B^Bt=E0/:VB6W9?%A6oZCPB80)TDS_@ZqM-JW1nd[NWI1`!6=fG((b+3kK[%ZulgU/9KE6-\M;E0[%Ng<#bA9?J!iJOOcqAA;:qPjj@2(+@f?U7T#+aG&W?"V@Bjud]0AABYuP]($Jnf;#5TnL@7^`&%8@uHc,_.%VQg(;jN-)Q_-7VqGnrImnC,)+@)'qq@`l4*%H]a__04'4p1nQMhocK&CMp@^F+a9`DD6c[DQmJhKBZ-KOJ8arDK&p&KDf+oY[):%%opQgNpMto^?>_H(EeEVF)bg!HKBX^Aa?8L"DK+IU%?=)!Y[;F'opQhQ+R_3I3%hbXFtYeAYIVJkbmgOs\\WC4%H_GDY[)=&j!H\j%l/4Q\fWMd$Ia&=^CMn)tF+_^$So]O/+ICkk\sFA[pMto^RN!fEggI[Z)m%ZH@(YP*qn:eC]]9:q9t:`SpMtoR?>cuSF+aF[)sm<>%KDh5Xm+:$#]9aJ<fA'cEjp(FJg`U-p2n;3kHed`fkIo[/]]KF=,r[gOjT`a_2`S"O_0ICe#WTt$DD9(GDD9tk%@1dIY[2C'm=&rW%hTH@oCMp@]F+a9pDD5@;KB\O<9_WR[l'`PbfA'cJQQ%L-ggI\T#4&tX@(YP*q_^=bn)Xbo2)dLt\\W8=2`RtN_/Yq`m.YOQrL+[A%fA'cIaUMQQ(X-.3RL5I6Qq/*(Ebp%kDO]@F<YIk-T*m%c8!>#s/G'9+DJb\bJ?Lo#(kc(=!ilG\Xc,]pQJFpA!':1dDt(U'kEIH*%rZe[:\iZeG$7i+G46GTkKH't\dqJ$83Z<eOb,.MK#$0<TI[bHqoWr'lNY<ji@[,\9i6.WrUH3s[KRs+Ucm4<UfsaX<%m2"L=2B<o%m28+s6=qc!*\j90Ze)Np]6!.MEH(_kD&%2Fe/C2;PBZY8$@[`;bXb[Z:<8OYjs)L%CM?`YAS/99foq_\Lc&0]1Y\g1)lpVfL[iIr%ZC`UA(\=l,?)\7R#m6\U5I3ZuOs:k`+@Xlnj7Ok([F0;Z%`oE_(/O""NAZepXORr/&8$kL'IOf^4N&r[O9%qL8`1UYbX+-$gZ[XI%$lP>o&u>.)-IJ1mlj+Xn>EntQ&s'WJ8a@L7$7P#s;1&Q\R7&=S@SgAA-L"e),5F]*AgWFb1=;DfpSi\$i`="%FE*R##_jf/>ElK^%q)ZNpWcT6O/bgYP9P&QDa='sS3CS?6M%bgtXtT,X:!fG#LuVC5cl_D?-r\kT:I^^k4XJ7T\C;/hO=8<!j47/+$mt;8T/'tW=88J\%.>(@d8>f-!9TA<sB$-d+/^!#?R5.BUO[(p;b38bk:73jOYg7c^.>,$f:!9+XX"\=XVc4PDZ&/etWA<gO@.;lKAQ4ADF@qg,KIc(0%<Rt7PInGt`fifIrAMDu8H-J'D7SQcEV94nr*V#@DWsHK=XI^oZU'VWZ8<r/iD=Ni?UJYO68X2S3@F9Y(apRo5jch7$VK8bRI;ViG%X`)rmAV[V[WNu3_p/Dp2iaY.6asqKinKq=,46:b3Pr8Bt*-5[V'<NKB=,+p$j2sMf#!>5NVed6;Gl=-aUCVIkVed6=o]_SlMd#/3%ZXq8=KfrcI]=pI)q(d14N-UU?ZRs1,_@._,QtR!:1V/C]RtM[;[UYg?AdEN5?1&$*b#os['4t'Ukp9I=1Z[747mA9Ci(r4Q9u>*m%cNuCC4=8:(XQtla1[%cs3FRY'Ng`]L1MH_Ai#EAA0M9#MQXRum:>%CED'\KYfeOrVZ_,XOANlb-Z=R0@c""15$[$[=Q5.!B*g:/W%BoT$$=j`hf3E_)*jNON4R>oXM>ZiebYNtu_WdEMZE57/Z4CCkn<s5Ud@1[QcM>dLYBT,BaE(]nFQmDeT$orB.K0od4d:n'99e;95%r3cb7TrAi7%t16''#FPq#Tp8P6'_<0SaG[$B/?\)%a@krk<F$Bn_KpEQ%Xm]$Ja0V.+S9dZJ86s&FS/qhC469*kPE*a*dLCc`>7&%=).X&mlk"RT;OC;cW(KZ@C[=.PYAl6D,6MB0(%[GH/WTNOujc>3t;lJWc:_OX*Bh*B`Yna:A268BqOH<mW(6g-ud!9akgKuY]7"I%o5fUX7LF!0R1X.)U;.N[1gG#grcS)#Y`t"^<U$ZH-DCJYe\4Hg&NfB=,/V9uPJS7UB>=N!<29Nu.#K[^/J3E9>3H0A2X2;c.KU\?%[Zk==1m;p=kiE&M*RVZ`mijuL$Wt[kr;'j&<=2q),EsE<ZnAmGIVd)1L@ubCp^8$^i.?)em%@?I.VWPI@\^aZ2E#k<2.,&#l`++8%E$^-J)4MJPTrBbKic[MPa=\FKThS;%3[lfn&ZZLY67LcE8iBS>)==>%3gE,bJ#Gl8(_0S_&VC2Qq7'TpI\Dt*_gqn^CTXC0kWu'g%[#L3A5rU0V7qfLA4G"am^dG0KLkq?E*N1:QQ<WcZ.n$n?KO?=WaN+Y4+A&V%a==/F7q8=uR-Impf'V57lrH:c)$==W3eF3A8N=a$%7`oXQ17?6g2"e^34S$ZLoKZ@"rb^-8A[(ElqNm1.@mnNmZWI9en5S2,7LG%$m21(o'0:qD.;=DRC='O-m[/TFO.1GGb'TMkK$fP6%&.l1[[ahiVbF/jXa9W6a#<%Et`JV:Eg)ZdmR0+n=C$`W+m&4mc5pmdG7-1s]VrD>']ae_5MV1(>bj&B8`s5n$'*!2f'3iVdB,VHb%G>u9G%LqR51I"n(oS3?AR$;1V$!(Eg`)"2;Y[%Su2?qj=fHEd,9b@kU\:@2d?$84($/f^J0O\b_HF;G$M^H.jpg!0?LJUpL3[m`E%]<t(DN(a"]?e3lc?oc_Y7N]&5>$&+SKZj9)\Jb1E),:\:EoGPfR5>]+)9^rGN7T;.bg//[6j'J@%,"<bkl/J>;=u%k1t^(]S9]>\%AQ`CKK]Hk1W]-oVf^:tE>'\b$$oW,f`r'?^;e,;U"D.M\U`fqn[2h,$1PV4NeY+bp;.3D%`I:2"HBcZjpXM'mo>Gl2BUOm-_3tU2%*7.Ob2k"#L;c"j:%ARIr<WXQ=[*?TmR[KGZCe,0rR\D9Ri-5ikI4Xl"^_`cF\-iC[dZK)RG'T`//Qq?%B,SS3[7>(cAhn"$n7pD:%7oRM0Qp<GS$u\94M33@qG>+U,9R&APCm2/94_YJ#,Lq>`lj'e%W#YUb@8r#1f/XK=\0")9<C0<-.Sjl-hoZnomCpZ.]Q';9\1%n4%#J2R9&!5KPORaG8obAUg4[A9_5`-U*N>3R)&!4d<OQ%<(N>3R)&!4d<OJ2tN@g,DC"\8p//3o(6+GCOQ7154:$BXg"+Jfeq'b?Ds%$BV7m8D+*@\d(dZ"/P&[;I0B%ZN)G$JCO8m.B``NH%;,\JCH_Iat#aBH[q>]J/%_X.BNS!H@V5]J<W/].P!b6.mPR75ft,jPnbEQ%&!4p@ORaG8eJ02q&!5KPOJ2tN@g,DC"\<&*8C7O8Zi[%>!E*&$;V_GN[K<8m!Rb'Nd^/u\s"Sn"I0E/M"\?T7UppK%mK$3j!Rfa*%V!%glFq,3/KbY^V$]kqH=FcY0!,8M7.=$G#<e-Ds5T2.<8pc(F<e-G.!3*.%.=6Tp<e-Ds5cQ>"8pc(f=+CuJ5Umftao#E8\d(c9%&!5ANdc__pV%k+1&!6>hOI?DFGm-ah"/NR2V!7tY=TMFV"/NL0V!7tY>ldj.!3(9p<*"NK=+HMu5cQ>"8ff,*'d1IY5Urgn,C"`<%4@#&MB]92?J2C>XPZE;k4?uLh5T1[d`>'MT4[=lG+:SjC_?uBZ#=uZ4Uq$_$_#pLt!E/Ce$*J[`OQ$V/iZ95]'d+e5OQ$V/Op=Nt%"\<nLOJ2tNf`Iu5!E/Ff.BENKX8o6E'd+4q88YL0WE=]#jpI3-#=u`7UuDF'=92=i!,8M7WU'X`?NF'p!3*+$.9_7d<e*%#!,8M7%WH`sC<e-Ds5\_f78h3/A.mQ]J+LMq,71YL6$BX6g+B8r6n.6<W<==m"9.E3,.mTPMJ5eWrRN<T:'d-3]ONIol`Z?6;&!2MN87_rq%h#aBF,k)_0#`k]'Z1Nj83UF%\RF85Za!e.R/k`UJj("mS9]LV1b`&RAZuel/"i,&jqeCKPTZfY:ZdLM!TTP^2+)=5Q*,g=$\S+><%H*<i\d\f$q'LpFlZ*>QelaQiCI+Wr"R.:nC0\GkOBiJPj$tC7./+CCTm]2"hZRUKN;dIYWCs7!AB,r8qAH>6X9IS7JN#EHZJP@!n%]D%gBLB*5T)e(#fQApUND:ELoKnWt_&Gi0!_5>(nfT'cKOjXCpk0b*]:*B:mr21['6;>l>%,Ns$BVLfKf@<tM$2\n'S/;IH%ImZ0%D1b5T)hChlb'<k>Wd`s)K`g6+?/C<R`e'q'O)<r"[Kh8n\@MqMYaLM6(1#Lq&XubR"[o?2.?,[4(0]'MQ6)\4%'aa(\;cTSI2]1*%kmUUM*0]'/(`1L`Nm'Vmi>d*>7?5:O*9\!s?DS`rLF#=0j%lPsp$oWaW<np;B>6A\%u1VJDf6OcDdcT2ee'8lf^JIWpHQVHW-Jjn%\I8moqkFO)rJ\0&"4aIth0f!bSmS,1:<XZkp?CUEHaj670=?r+^\h7m9*d0qG0dBK3\a]R05!bMKE=_m=67FF8.EeTdo-T0b_p3d%j[?bj,pk^7LYb&3T3rBiX\+;d_Vk*@LQoFN?9a!F`@sCuA,aco[l5<+NjC@=R(%M>dp'P6h31(RW$r:*'Am?M"A_PcU+^<3<*qS!%qFmM.CjU!YcN!'>9lPd?Q>CK7b&`8@kV5YULM]<RN^]:+Y.CX.g>C&!Hn4[!]d^jeicO8S'X-3BKM`kg2&i%PNPKSpp8onP-rEYG%^_?(gJ\K5)_l&W4c,U##AnR\7SIZ5L$Y'j5DsZ5mpur5pS5@XS1f]_s,#L7Tmd5W/j6\G))nU!r)XiZXlh_l39636RY*6ME_aDHX%$;>r3l%Pon_P(1@ENIqlUO^d"@&$R^Jor@WI+rInP'<'0YQoa00Wi;5Jft!&1bme5IIu[C^4dT^5fgnVd6,JO_HQlDchR.P1NHp[%Bl?]?FaO;Z1UWVAgYu>^R0me^ob@9%B'%c+CP[gtSd1;)$Z#M_\AlE]M,/JHj5FERcgo1u!'KRaI8S?e!MD^e'o=(![uVFF/!Mo.%\";sL`qU;U[-\\^&eP6hM#k2X9ImB_;d]aS/O3Dg?OhMN&5m<T"BR^J>o[m3qTKU:^%I&@TI1cgf5%TZhSOCEWP33X`VZ,m'nlnu%W5.m"-#Da'o?JkFiK9u;/0aDZS;,6)W!4n5ZJM,6Vc8*RmbTh?6_0_j,s(]D`8`JMqrj?%4FQoC=5(^()u@Q-Ier7E+)]cjCL8e5%X`7Rc^!//GQ(aCrc%kJ(n""c?[!?pj3r!`]:\s3:,+TJmE!e/+C[f^,T(HOpqI]BU,0PLr&.#/+Xr9]L[0LS:YoF+?:8k$`XHF)c%pninq&H'=5;\'T8h&ZptIi'1g4<i!>'qCAX5N.i&D`m,8?i7r89#_hJ&%VLBhjDmfF-ZM3VG*FWVTT;=(`],$@:uMN;8l*.-J,BQ%2LN"IkVO66Dm)`Oaj)/?@!f]tb>+a+$:IErOF`Kf#Q0us7KoF;6dS<+W\JQ*.\Ica)#$l@H(\)\;c@P\%um-'a9`lV.LL!QM>Yq!%W#UQAr+p+(qsUZ"qF$Pe5;blW`lc'KKpL/G8K"B`ZiFHtb;5"oTp'tgCb^4:_X0ASb@7k.NMYEdW1n5oCm+-&hi^q17d*l,#6qcc%ZYgCEVa+,1C5:B7r&,g'6HSK<OYu-t1VQS*30DQ9P\@-mAlG;#Aa0=iAI9e?hqF.tAjW&2W]HBU&3f=kU)hpSks8OO$k,3mKGA&H%moe`^2/]k"./skXOIE7$&_=).:p[#=P9a.rRKYO55\Lk^UGZ7gV01)lFfjB"8K$EeI6O#R&sSJT@"G+6e[0.DiX+_c@,%qp!km0e%m_@0&'Lq=-M%DR"caAbpEW`1"!<:''S6R_/`AU-b(F^n)9"Fh>Jee)d!qSUMK\UGjI]7:$V4%r%d`#fA<(.NU0"c<gk8%Js*ZQ.F%M44P!kf]OKq;Z3!`"B9"p)2(_MaE48[Xo.6[n76G&G9:&L.YB14'!!\Os$;o[Qr,bO7'9;ME%9);H/)t"NO8MQGl04gI;,G(=<7i%W&<Te%s[G>G"6BT9O'G7Yc1W<8g4#(XTkO,%r/'5D.7TQ(Rro0)K@$A`tR<_5>EHTFseW4'GSW1;2DQl07d.R<D>?l)^OEIR*>cY%2\HlAak@JS]5(a^9bWmT2A*6J8L^s'YfZbOJ0O!hUEGamC3X<I0A\uB@EV>Z).KH,/ZPUqTTN+SoXL.Y3M]NY<98])<8]Op5R\PL%%I=Y1;:>)c"E&,;3TMli^$i;[,7IQS*'1jM&TeTnqAbcJD!Jgil+LXX1f-d&LW8PMRn,Es#?0a)IT,SGMAVg"qhMW!i(h?f+*>a/%ai+W,-*1Q'c5O:a2MnmU+fT>f[$)PI/2F%g;i=mj+gs%h@jiY<Jn:\GK=;j*?m9\*OZ7UL&01ql:=f,&d,CEFTkQj\"Fd5PG_skQ%c6d^QO\LIO-DM<V$%SJ!f'HVje'o)ke>sZJErk"J[J<:GUe&,ME7,kTIBgQB_"%$#@7kM;airIOHjSVe'-pA+^_+dQd(H&$BdeMs%"[2q1HmF,THTNU_,A9c-!%Q()0eHhHm[_OF2GH%t6&[U5L"sei.,Mmfc)@q$('%farA]ZhE$VLUm&(!f9eZftBEigpL-s@p2=GRT%/[NR=:]sOqktpS,P6Cs=@Ra!icc$"q5U5DX6G5hUDQHRjN!Zbh!4`qB0WiKs+E<q(3[LqiVDdf5fEUE1<I<$rT&0`,:/&OH@HIbX%(JUk3qc$12ed?k+<b&qJ1@P3]5465)_5>"^?u%6E@jCHB`\,?Y[o\*P)q;(MeZH&6i!Ho3L)55JDJJd@Lh]I^bF'HZcA`@SQek&#%?7L$meB0S36L^,JhFjB+Gr(R+e@:4e3YUu:6HY(blf=X?f"dPn;%T&X@t=:2O_2bAMjg)lI.1NAM"\@ln.:]Y8N)$8UL8DPGc+cp%%+C4Vd>)CGQ2'Qq:V0_sUS0*iUA8f7:/j9l=cUff,r?[6cTM]]X6@,l+W1Rn/<)sU9Y-9^PV2V)W[InRT%_gP'r=B!ISj"bR#75*%"6u$AU.'iS2dg#2;CRXCR+phEa*2W_U5]W"WR'+h*ZbkN%5r@&$SfLf4"3F9$HSD\0JG7MdCc^`f(bE6p>*1<VY+1:X/NlOD&YbX%?roYa`KZ;h/S.D@YQDmr_Q@sqj-coDdG#?p_)`4`k@BkJm=Uc30,%c*.9MOnF^R\iD5[au1k]JDR#.kGTW#_@p7YA5E@8&Lr\4hk%O:!,9.RuS^^oL7i@Ie,8V%U^[7R#n[`Sb6)pT?D/IHjbB,]8auOYK:O2%mj[4=?=L\;ps6/id14Y&Pr"5'\$u5:KI$gMNP@:IZhR%]\Sp`c%/*?#r"[o&@ms$_(fEn8Rm2(]5Fbr!'+k22EY$)WMA$P$Wc5%`_W9T/Z[I+6LBbfaJq(u0aE?$VPX[627#nAgJLeo]LomD%&roFJ1)n3d;,+-]6Reo=oi.o$(YVQbYZYq:<52R)5(^"l!aaAt2teP8=\G6Aiml<X)0X\#;mg5<S9KL*_Fg&8<6]rUXSB,j2'Wc5%?`M;T&>/;TXR8p@8+RHRfp-H7PAUV?,ch>nYSrJ\<FPd3%:to8MjbQ$(pPqsLOn#G<d>i>MPgpf#TAu(d"DN6Hm*AtocG5iA8m?V%JK\qkBMemB7bnQtkCDnq,Y07(Jk0(#C9n<O//#)SHRUCVj1qf%H:2<J(RmGu#Okf3_dHTA8RRHc\',Nr)hZ'e9uKg5mV.K2Z;K#7%=_oX]%:[*nl'5\N`I\GJ.Ik%X9DPfS19>1*l-`GZBnT9`TX1V#aNUGoVNk%/>lgK0S>],YU*LFii#!B-9JWnd2WhAH%hfk6Gt=nG%\"bS+!2<_EAs3U>iL#*'l_[449_M4P1LCu/'`Bk9XVP)f1rD4'"0;/m5+>.37^X05.kbi5a,BLc?Fij)DbE":RL++%Of>caF%*Yp%^gs83b0ek'b_%<Y0\GYfTduR0i3\E*4ED13$7FNqVjE4Z$["^Z"Q7j_Z6o9%8pmKCEol77eJM/ha5.sL./'5dgG1j_mA6H*HGUjR%Wh)Y5YXKQ:#tujTD8Vi`dX%1iVJO#LU@5=X[Fn=p/:qJfX2ZRU7<L[iAT,5-F@heh.WW<A<N<'G]<J64O[+/,ntDdT&42eZIMrnn%5pJ>`45e%WFi.^s[fll/4dU#70P-FL,1Wd7LHCRh$[%ht:6_CD/YAuOKAY<#+Z2J#5OpD_D7%#h)RN<39B>e"MrA=o!$QX6<iO][%kIWU2YK<bD.TUttTWbA-N^aVO+"R!`U3-NC%go,oQ.p60$"A.4`_(;h\haIM\3sN2ZD\/'7&i)l&d/jNRPK9oq+I_.)TMV"JNjYq%:io_p2.XMU`+#EB+i7e+Mf*-)AAD[VAW1Fn?9!NL:Rd!8A90(*4<^BL0+2*tS%3?e&OetQ0QMZ6Kj.Z(@>bJ"(''GFKTSQlb36\m%Q:jM+O$\b,h"$+E3?JJ6_I7X)q%U81Y/SU.?in77X&3\@DO7>-&h)[Ip2Wl?"oHi)SP6Qh:h-E>)A;C1f<SA##.\kFN0jB?f00H[%0)T3"#mmt8"i73KFrKuR$5q4/q;ds/MTh(ELI;g.ZZ%h%OYfV_MfJUpf._q,ph>6'bGsCioI4f:&Pn7]A_e-J!0MJeQ%uYk]Q)#Z%lKTb86'&P+r-<B#,AA/]DbdXVbK3pWOpD13TS)&)L*nD.N_7/FCJ%T&U!Sj`LJI5gA?>FVUZ"b&eNA7%\W"obk^q$$Dq21dqh$NF%)m_o=B)Wb+709nnd5#G0![GW%c%ltN(R8Vu[mbPJr<H'Mn@-cA\O[LM7>9f8SeIRpbW"fd<Q9lH$UXR"M"q4?1oO&[;iD&R\LYI1%$J:Ng>$/s[CZ69Z2bS&OAk[se!g,YbH;c3H:?@.#aipN=6ZB#mQ7;O^>1&7]4'-N4oF*Y<)(#r?Xb8CjDD"L;Rd@&HB84;C.pgbb%N>s:_;2I/D,DVO@IkPhNdJ<rhJ[-1[W'bd--lLSVcSY9*.c/M92UgGWZ^\Z\k1/E?V&TDUq.8>`LeN7#\%gT3kf)t$TM5oDHe@;=%L&k_Nc7usNaQSTJI`\"PO2uuT<3ODtos>RHoQ(WCBUm?"UNY8LDIXL-`lsU6i)_hu//oMl;0[@4qqZ+n>%_?!W=s_c:O:5ehKN6l%K.;FHZcK!]f,llaqrEr<GVc5:e]IkFEtXPF<`Z7`e*2W<+l/;L%iEB?rPfT5C"U?6_O`7Q+\Wh(?t5fu9_Q=H@rTDA4'#HH%1<lQ%rb5kGc/,[%9?(i_M@Z(1L8Z/Uq:]4)A9Jqe"-XYHco!"gLJH.ZE3;lL`"iaW5.4:%d7A'%!)MCg[:.X[X^noH.C<JO,PNQ1[q,/d%T]3*=ck1[_a?e6:1c@P%6KrrnbnmL#H*+JM2&2SCdd8o\JI^0maVofUoT<Ho2XAcT+&-p\GRuJ&L2EWQL)m.[j(2!ASok,XK"dUW%?ZV<'DM[1)SZqE6KVpJ)oN5PeEPXK<fh>_`O3(BZ5%>[<W:=D7_]+%2P<L%NZ="lhZ&n55ZgkiFXic_.9qocUK8+8=bQ11:'Q)1u%N:@CP1Z[Z8n@?+E:<Z7,p<[VbY4rVTi<be3bWMQ(6Md.6=A6qr^R-eb50ls9prL3qGDFBB3u6JTMl^s9i"]C(J_edl*1?(T"^duE%^hI(#1+rqZ?EQ1Maln`KaJ%HX+_9RM1`^NHJR/LaFuak.)QSldb1;V)H$_0f"8;CJe=>Hk@[P^]H_N)-o#X<jAm)LTYUrE[_dEUm%C@64UMf/t:N7b'"Lc6Z8T=f)!\5hE=OWW>,;,u*=9'Af`'/L]ecBR\Bd.nMlN/*r0r*UF@1=UqY(eqDYW+Q-([7dHqYJFNMmMg>-%Z%pN"MRO&*mRA]Z]MKnnl&*E&S,R:"Ppd(*ge6YM4OHA1"qJ6c6*PA$8efV:<R2LU=Rr/9-Bh?24dX6,96l?<C`=aM<Zfl?eGb5H%W$-,\^?%,*7p<WJ6C"g8_@m7rDLtIV,^ooG#9BeEROB?"Ta\Zc<jW5LdI!,T_9!?bR:R34ZEC!C`l+B!XQ8[2KoM%"mGO#n$]5oU%L($+39H&S`NRL=((G61T%]hHc5GP^k5oHjVfk*7q9RYQaK5ub9+MqlHPDN3ekItftd@&q-NZoPe-t/X3+X;DV[Kh5];[A@#BOHm>%)l0^q1A&(1\moM*@OiVTCtf0O,.Ao=F7(e,`I:I=boSA#n'EX4!i3`m(5m-mgE3&i\e5COqG:\BUqtk&Xc^.D^a<NbB\sm&2D">\%`LL0q\0!HkF1M(lLe,['n"s3r9TuM\mdV^X6D0/?ah8hJH>qu%6kQReggc#QMMm[UH7X$OVA;'N,B$)L,Y^5"Uu[ZO$<V7gV9il1%3/5FhQ"+N"Jsute^e>NKO3od,@8j^@J=`utMWth4N+b/QdGj;FI]3g@=T$]4KYu1:*?0c?$S3#hV3\WoS/)]KTGl1A]+PXQAVk`q%8B>kOM.h4pf/'Mm^:s'gaJ9X;YR.5-ClfY\%NDYWGO*Y/ZA6$%FQlM88^0U>FjWTdFg`]d*t-_,Z6LRt@W7X0`rhc&BuN.-m):.m%P-3FpC:@##iV@PE0fLV;*lBTFo<V=Okjq/[6'_-UnTBHm0.!G7H/l=ckEjnc<[!^Q(Z#cW'G^P^"G/R-$QjI@FB]`BbtR5VO>k-D%R:ns$>qN&7k+R7'rpjeP(*EPPpOC2q*!GY7RnMB7`S0uHDMLYlOO6$f#"/P"-;A8VZ7M1+aP@Bf<KLg^#]@.T6_ao>O3n_G'*(%=%PL'h@ogub[E3/&B%<Et7l:=,uD:d,VQ;,V_:U!!tCcNE=^3S[[,c-:D(l%D:MQ/;e$H2d=_K;/pY,mf1[W.V&:'*k'jJiTqbh=5[%V3*S;!u'55nlBo/^tmeZ09e?&#b96?jJmjF!a#?Q$d?Hj^_)[:0=8mCFFq>bbD@5\<<N4C+;M.\Cc/nm<?=*"%\JC7T#3H[?R09.%rW=0&TI-JI'V"+(cAKhCeF'"fA_Qsse:r,Ho'G#spj53@DEh2K@,0VdJLkK]*iBc]nF-]Mj'^bCWqfE!VBe7:W=)-G8Gepj#t956%!Nnmk:GC,fEb_E)@!$`ZX(/2eQ8]M;2-!V[^Y)EQEgsq7AGfi=h$K'fX[p9Js,gK6jZi##UY7`(NM;j&E$H\RAh;(%"%k[4^#rnN%+WhY;Vq%Pj=3J^eZ\n\i8s7FuJl^Q<N#2q9SMdr.LRQ88jX/fj=D`,h:7=s8.h:8[%!cZ#D-Z)'"a%4@;jQs7cDj?Mfkl9tZ`Y%Z%/LLYe\k5PFnUrP<7Kr5D+HT5gqN.V7SqJk]ap"Cr]k>K9csUDa*3u[tK]%Z?F;<f\'H!*fSr9>:pY9`G<pX<Ahn"Za&gsRrm-A,q%ps;>37^F>Q&SO/a\BMsL(%*k'*u&m!r*K0/Bo^*kTiKRud9l=Te1\[,Ch!G\Nk$F=Ku%*N(/SB^b%/>'A;+"RcR!ND<)97r?gQSr%>W0cc!rG+ZN6>fVnuBLa:,o:q>4=QnO?L'?UJK6=Q-n+`:!B!0:5O_sa!P"oktl<:-M,_97UY<\.a_kX\&hi<Oh]E4a@-%[o\G'8%PJ;-a\'MI\8N+s)3X&.6NC_l3R##Sr/@gTkgYX/T5O7^F(@A-am);h<PR;(pFKjUdfH&V&jY&Cu(hYnBoC'4cT#U8d%4jS'l(5N#%<t'tH:%f45s6A6m!XJ@03"b7_:JaLASZfG$8*/I[e=sum"l?3D_I\l-We,%6`*cKa'IdgcVt`:9_a(G&l4^B^JaT-la('(WQuYT+%L=BW[QGu(8DcJTnj_"I)@n].gXK;g#5>p#FKoX^@Ac*)Z$9WCYHQ/X3@/2]DkumS.m)G_*[KVY/ntD%Rn]?hLm1^&[b$]I`>oVFD%CHGj"*?)<1)AIa=cP/o`Hb6=io4`]jHk'FDZ[ON3"ZblYjN@!0E.+0tl._&3]NGY8[RPiB%"?Fq"9+A*ouVC#RM$u:N)e$aGgh"?%5=AeWIr%B`_3NF;+V;+K[O23)B_k!-%:.Y,&M1ZWn26rrP(r'LrZc,X#<:@ZX]SsA0/LC??M8lt+Q*3Yi[?-G#KFVuUFi%KfYhtS%9e?eBAIQoYk7)eFmFiBb_W2Y1BkfJ[ph+p;9V^tdDK!D+)m2=,*K$+?p*&![]UI^#qs;hP+r6K*iX@V33J)t-4;@!,TeBn/RORbF%?sC(SS@EgH=:S%-UT_8OTb6*(b&9.Q_[nIIjf@2;`0;LdWS`Vs+Sp(4IR5&9]<>+RE5"\'R;X+hYZ?t$:CKHg,@9Q351"!YR$k#!%M$l3sUH.Y@6BO(PTI]ZaA2:8[%89<JQ:]>i-5SOJElW24@rPFY#LpnD3.1C8JhOfM-F@H9!+7e!65[&=j@\JU,A@k%s&(^(Q#:(o%DS/V>:n00^#\.nBN)r-+=Z%G(*7N]VY]uS+C`p!5ES&C5d3dG2HW0FWB-?&LNA6RC1`]J6=WsY4X'O$u.u[oY$BrR=+_*3/@GGFJ%F3+cAb6k/j$F)*,=lFI*iRh^qF3+cEb6mEq'm>oYc6Y"-]<#s(=^cMWiEW\*k-Dk7A;+le'i()12Nnm$,qEdY/&\ibXK_)t_RsE5%BpTRs,qDYA/'LXeQs<ZoQE2e-ZGNnXKumn[A]Y:Cb6lFU'rG8;=I6*C\ZE"e=^c;Q@:-=W[`]#ib6gOkOfWLQ=^c8P@:-=W\7C;A%aU4fb$N#u$-C5J@,qD[$XKX?\@<,LZ>I)-,ZGO%\KkZkgp*D4?]<#s&=^g,tL!sUec"2UXAVJrNL!WB#cHp*U8B;%f)G4%d-Bf/K%P8-CdKR]mG.njBn$F@h]Q%CQ%10NR@ZGNoj$KmQe(7,aGQPF,!'m>oYVHm4>Q`RFXZGPAJq:"73(cZ_%[.&U[K*/@BM^&!:&NJR"%)N/Y.s,br,&dJA$]O"m_$g_niT4,telVmRk:jEA8_sN#9SX#e7BXNd^?R-J\hZ&6b5/$?BgrW77bLM_)I,14L-V,r7;JO0VJshr.%1UmQD\HES`U*Q+?8MJ1;_+[LRfj02tQ3=P)">_Y:B&+c#EChjb9/,Ch?l#):`[/GP]*'oB$"e>eAm>tmC_Ft%,a`kD@&>6d9J4.T%97iR:Jsho-1[Ph!\g3YkQXJAj_/(a?X@n/u>_:Xp"LIJ.bdJdabpA`o8MHW*0\_aup0E:'QNXY,"EQ+#k&:Xh>S>8j9/,Ol?tPU1%@SAH^Ap"FB>S>8h9/,Ol?oF?Zc6^;C0#=&NK%Y;Rk$/PCjq>ns'$TbVbcrF\I7Z,&=;&i^,a^;;$"hs=QuP\OP=[IWP$hmg@&>6d%/@u$@/I?$3$"dKVbiTP^Zm;#KQXD/$/>2:*">_V9AoJ&g=q]&`9/,Ch?j;s*`[/G0-GdX^Rfmg!'$RX,QuSI#?=)u"kt%`^R-.=i%Mqn/57bJ@gfkg99edj+I"4$Ra]o[<r0FQW:m&fHlSZ2"j?B2r`b=ZLDZt@DMK"Qkf_E"7FGYV9PE4Fqc*W%[#HDLN48)mh[_b=r9%YcR([bL2M"f9)Aq,L*A9btCQqG9(C(3n!"Kd^4+l`H@tjkt'"#,E5>dRS?9jQ]<o7N\i:-Bj*RG]N]addueAeW9Lmh,L(;o8Gght%k-9$(9fc2%!Lf%U\;mpL*GOAQUs4%X(h9?dX\21<>t:?MNjS17d_'[tc#oh-kt%<08Ft8l[TuClQ]AG`N\i=.BltG1=ut*ClU]LQ%O]L(rVPPLhXs;1a8"+WBBjNjKloNS]3n!(Mdd0$CYj4i<lU[^JQ]AF(*U.M`BltH\=?=mAFJR`8UikomS*NW2dZLtD8(s8h[$cr]%/KJPH*GJ_=d^JI4gX;3Bf9(7*OZ(gRp8'!NXs6ADRd!A4kt&?j=\Lki3mt6SUgr#=L8?+(Xs8q/,E8iNNCud1Frb:;*GKL6Bj*RG%l8mA+FJNd*OliJb*NgX3Xs8qTFej<I8AhSTbtCPF>t8(aN\n>-Zn*53>WPcK<*,:2RZ8*DpW^XbdZKj+FJR`7Uh)/!C"md+@Hg=`%lU\qAO]L(rL8?,sXs8p!7p8VW)OHJk\rJU!*GO>PUhT'aX6W=*dZIS^OliJbD+dBfQ]AG`N\iC0Blb;/?96NKFJO3H8;HM%PNtcW%F<,(9*GO/KUmHZ2eHpI.oq:OWgG'Eld-Wd.i#2pgo*elVB#-tiaLT->brAT\\Db5_qbfQf>`]c?*1XgtB'LjI`m<amk[TAQfu,5q%2?b<;4ZN]GUm"!UnYC+PN69u7:P_5BL"cLGLi5MLZ23T2MM91E(@L"W@Y<[HUFI&CT34si=C`Bcg)X.t^eQ"K5,_qaHO]M@M?UFe%\Y"L(Q8M5+Ul$IE-(e_Q=FTM9#?`Td#P0@%Q+:s!a^Qtl854&b`>4Q$qahQ]@#WjX].V[-a3Q,=/9+YZUl.YSEn$:*(@X[slTl<p%LeD\TV!2@97SW9QMZkXObK5Ah[S%)+I+#uW'ZZ5t/f&d^<)>2Q/9[Gn;KW4MCbQau5o5GYE]V<OJNZkrlQD+>D#ctP#?`U;>hVab%M^HQV%^K2;P0K1A(<&nJSRf!MeAFRm/rN/tj!Z9XCsp3]b$q@=E_qS8@^AV/7pR[(@.Hl+Mh3H.YR\P&,'V_H1)BPO/Y833-k\D\%F-jmUhU?fA+H=?!Q]j0?.gClnG@bTUIe*<1N(#^_`7@3lMhDj`h=\2T1J)'YBKYNK)N-5*Xcm$/96^4nO4%/.0\,b8V6QEYHTOf/%@>njaHC)Y*%cHqM)VaqB*i6+^g"^b8`Zjq,SZCr%=>Yb[d`*I6bN#CX7C$/rqL^[A3"YGfmb1e0D&=,:[':H1]'EQp)Crk\Eg4RQ%S78d<Qc?J5(&7At)VYNMSk!KG-+^&tUp7_5)'4*j`Ze_W?-#;M)f0<WqFEiqms)dTJa+!H3n$t5akp<0B7r]%-,O\q%f@K5qMYG6%,HEW.eqX&WQ?^d0h#$HZLc9B4=6DMjmF1B.Mb#R@1WQOppO?4$n0\CT#?TURn=+W/Z1`CI:,hhlfu8ufK1bP\fS/Ju2]T*9+Mf\G%KA>kS0#plV:8o&6#9q,>":`?"Y,9jj<lQhUf2CrZW?E9bhA*Y%f%C9SfL6)T1PV,lQ>XHJfTEdRG@[$s8?c;Qdj:2TQs^`0/!j*a%_(I:;VL;3kh/'JA;Hm+_DaIUA/3&U8'`unh]>,:!/,W\)h&2[gns3[M'i7q=DLu.&1=>C%9s@i<,7^('JmEb^oYiZ.TjX5AaK1g`%0%`U#UefNHY`"*[M/94#Fs/E9C0>l==mNF*\R$(d6WQGaY"6A]*dFq:;s_s*7kIB<$XXFDGj@!773pFNZmOEoNE\3,YR,KbFK2o'%([PT]Y*b*UR8,_CQ:QO90#9/U_iih8([T$&Kgj9hE_<RZ@@;9*h$(ElM9]j>MHsD&'fDFh(Cj*SjM.SE`BHVoD`]@jeWoWO-.iBo%C7QIRB&Amm?lkn\bbiK9]rmXiR%/fG1;ll.9)k5c2m\0=[K"\@!`B_,@VUL#h"bBieg8t&N1j?6r=\I#SK#5l,hRh6GHdqjf\KTV%-5N.)fS/7q=Ha&7Z#Fb=l4WH\,sM\gfL<?TIRl.m*R%-6QhiAO/r`M0^Yj_"=iSnBR\[<V@B\Dum(u`L)^X-j`hT"ubQPN`dYB7o%QXCU[GcLR30u7a]%*(PDJmJ!d=)9M*0&jZ]2r+VK?F-_;/er/YdB<EjfHk*-pJQTKCrNF\I^idP4C5([GK"GC2Ome:bn[k/38;Nn%T1f,o2@ZhtG+jlG."WO9_(M@)Zd5%I(F)*sMJ9cjGIPS,Op)NcidFQKD(rdYm'rhpWOlQI.auMsCP#jePpXsT/A^c@e^O[oY_tB8%/o8%*(TA%^E@0>W[#qY<eYUoh/Xsak.<[FekZ*MP@X!cIO&4qZZ6Zepj+:QeFeuJp0%blN_%];7f0qMHSP_Q8F[o):%q']hA=Tt6%JV#CbWs5')lZK3'[F)e^\raGd"Y$V+`LbM"/[=Va!A`U).XBY3Wp6u;Qg<3S8sa-RmW)TrFfj'P]$9>oGbHG8D18I/$ng.#!0U#:%D/roWKD)*8XudBdZF?cE!-c)cl=?l:BCS7'e@LSsZH_D^f0r_jY=P,ZaPmW6iI]n?+R)N+G#*@i^`*/'XG6-f"k6F*\44G=kR`Qc%VERTKZ/(/Lr=t!Q:VTLV/F<[:a&uT(=YXh&HpasfS;hq96IZR&'q9D'DCTf^7^pa<-mP3pofr+\"fjBnS',4B`,&D8+U'5>BH_k0%R]W5R>=-2%"YCHc2HWFb+#,2_L5k8n8T'25nignIb:jma(:i1lKZWLeeG=<O1R2D6>>/T@FOKNn1qM-sK*4`d)^fhJ+;e.%`A..M%>Yh<JH@;rqKh;Z[[*Hsi4jE5_#FLc`,_QoA%Pb)P<=bt9q/ppObf6)WJjEU`k6dD\)KR<NZSe2.=+^tl`D(#D<8H=tmY,9ZWi"c/%k(XPo"M.Zh(J:u@aO6r$I^A?T@D%5J>,]M1m"LgW4&K7[1<sXNV.!r^&HlGFQS+-*'_\#/2>pQSYe(LS+@h"::_b.e]29Y@8k(aR%=@Y3hN@Is'+q,+4R6LSEfuV@m1E*$W*t!s>;,WE,0S=Ma;GDS.EMs&m"*:q0ZqTAg7=<f09.%,9rFFDI+9C$T\?`4R1=`\DFpn7(%BG5'bapB&VFeoY:H(_W02,#DB)j]VnL\s=W;(NJfDGd[-B$=jHPK(s,0M?3T4bN;`%"lt3_OW+GZB28>TZWQEDI%jm]6JTk2g)=K%J/+m]6^MaJKR?qe/Y7K'X5*HOPhs9e_dash_luQE8i@'8QMCkFi3#dMh7>MFkW(fmM=s?6_fipbpICKBYIGVpf2Qc+i!,>gG>LEL%Ua.<Pf*I^riO-`#Z'j_oU.a*DGGHNfEL?]K6uFD#3^DBJbdpoI23Jg!GQ?tiq$^'*dO;*;ia>=WKl+K%D'EY1K1C_8l5T0h#%(@'%>'8k'/G@6=,+Eq08a>r@b#]=G$k(obiJg3T>0IC`'U^,;ggoVcTRZpukCSY8$57UoGFn)dPMarpD1*-Up4(,k(1!-MkSd0"m,`[u%`(),(Um$/[bbh:5Ts04hfE+[N,;I6*Ch)+f_<.4j7^31W7Jhc5+7Uk.O?(#d4=V68((4b47GCXM.?_)mbWCX>d`lj-]37n1_mkMY%H>Wh-Tb\HR8J;6J;A@=d-s@]l@*m`;+R;?cGA-,A;lM<\JYd(H;l$]]WZXrSnjkB*0-6g0c?p1hLM@?.)s?UkOf-GFQ"p#^>EVRc%8Z8@M2rsBO3-H]':\9Q;Ds+7Hp*f1Da<&B]+;Vi$e8GJp8a3+I+;U.W[YK#p/2G+JD]Anb8.]pI4Ej(Br3*V+ZO:6QKfW"]=>X`]%C=g@(D1J/LY\5k]U$H-l[F+kC%u[G,V7$k[=9V0,3Gc!Ca[$Dp)b%")jkd\6.Aj3T_Gq3K@I&Cj;2iR+km[c"Pu;6]\+OfmlTQ\R%>MdYPn$C(`Ta4A<i\u;Oe*GluTBcLE_ACH1+8*CXWRui.Yhdb.f;f+c>W'=YSd)]028J=R!A=+'_"F].Y#c'O]kW)`<<M#/)W6'?%"5L'ui,R-E6NqS^!7uQ9i-*WNpT"LCgsH+_M["E428JgD"uq<@%5<4]cPg20H@OEEYKnd00YZjR"$H$dJEKo74K]U\EDH\lY8Z>B%eH"3J)W5^5".\gnJEp2;>d#((H;=WJY8Z>>eH"bo)IVoghe7OQ\7gEU4UpnjC4Q1]"'k;/JD33rE;P:m(e_Dt#1sk*)IV.-T/FD8%/ABX7A*nQ:!KQ]M!D`AG_"ju2/lrL$]r(o!<t4Z/C4O>F%Ih#DJ.\a8BRj$kUB*h8IA6i:GA,S.Hcu"X"72!p%Ie]DFq*qeR<K,0%]VbcO<t0,`C4PV5%<0$pJ/;>QTE1YY1r0'a!NoK5E4MkIcF4_M']Q5!(dbks)W5Vc!;EMu\DGU5Q`C<M>r9@O.sf_Gc`77p?8]OY%Sd'FE28K0j!Uf\=_!S-&DH@9d]r(n6<t0,^C4PUj%<0!qJEp2;h!Sm,qc*_\Xr?5Dec=$@ec=$@UB++k%<0$rJFacjE4K_6b>eXL%mqI=,<<M$Z)W5d/"5L$ti-NoRQ[9Y/I+84pM["FGHQ(gceGuMJ#'f"R!8"7U3+"PYq47dM?T#XlWWA^c1r/@M!H,@b@$I)8C4PnU%"5IcO^uMEq`_^]V!DZ]*E5&(JDH@;:\8$QW4UpnnUB1(Fp#Y$E]JRF<L>;gpAQo97p&Cujqes4KmE<++Ie`I'nZ-$pipYcQoAQ<j%I.t6k5Q(<,2h-)HD]^%WIK)GSrsum%rj&Yb55aAHIe`HN_]SmRLOVh;G)1YG(Vfa7s7tQdqL;=?R=G~>%AI9_PrivateDataEnd